{
  "version": 3,
  "sources": ["../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/webpack/universalModuleDefinition", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/AccessibilityManager.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Clipboard.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/ColorContrastCache.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Lifecycle.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Linkifier2.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/LocalizableStrings.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/OscLinkProvider.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/RenderDebouncer.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Terminal.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/TimeBasedDebouncer.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Viewport.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/decorations/BufferDecorationRenderer.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/decorations/ColorZoneStore.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/decorations/OverviewRulerRenderer.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/input/CompositionHelper.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/input/Mouse.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/input/MoveToCell.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/dom/DomRenderer.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/dom/WidthCache.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/shared/Constants.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/shared/RendererUtils.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/selection/SelectionModel.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/CharSizeService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/CharacterJoinerService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/CoreBrowserService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/MouseService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/RenderService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/SelectionService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/Services.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/ThemeService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/CircularList.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Clone.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Color.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/CoreTerminal.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/EventEmitter.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/InputHandler.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Lifecycle.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/MultiKeyMap.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Platform.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/SortedList.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/TaskQueue.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/WindowsMode.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/AttributeData.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/Buffer.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferLine.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferRange.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferReflow.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferSet.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/CellData.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/Constants.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/Marker.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/data/Charsets.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/data/EscapeSequences.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/Keyboard.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/TextDecoder.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/UnicodeV6.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/WriteBuffer.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/XParseColor.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/Constants.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/DcsParser.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/EscapeSequenceParser.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/OscParser.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/Params.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/AddonManager.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/BufferApiView.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/BufferLineApiView.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/BufferNamespaceApi.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/ParserApi.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/UnicodeApi.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/BufferService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/CharsetService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/CoreMouseService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/CoreService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/DecorationService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/InstantiationService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/LogService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/OptionsService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/OscLinkService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/ServiceRegistry.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/Services.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/UnicodeService.ts", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/webpack/bootstrap", "../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/public/Terminal.ts", "../node_modules/xterm-readline/src/keymap.ts", "../node_modules/xterm-readline/src/line.ts", "../node_modules/ansi-regex/index.js", "../node_modules/strip-ansi/index.js", "../node_modules/is-fullwidth-code-point/index.js", "../node_modules/emoji-regex/index.js", "../node_modules/string-width/index.js", "../node_modules/xterm-readline/src/state.ts", "../node_modules/xterm-readline/src/history.ts", "../node_modules/xterm-readline/src/tty.ts", "../node_modules/xterm-readline/src/highlight.ts", "../node_modules/xterm-readline/src/readline.ts", "../node_modules/miniscript-ts/src/parser/tokenTypes.ts", "../node_modules/miniscript-ts/src/parser/parserModel.ts", "../node_modules/miniscript-ts/src/vm/bytecodes.ts", "../node_modules/miniscript-ts/src/vm/funcdef.ts", "../node_modules/miniscript-ts/src/vm/sourcemap.ts", "../node_modules/miniscript-ts/src/vm/code.ts", "../node_modules/miniscript-ts/src/compiler/codebuilder.ts", "../node_modules/miniscript-ts/src/compiler/compilerModel.ts", "../node_modules/miniscript-ts/src/compiler/expressionCompiler.ts", "../node_modules/miniscript-ts/src/compiler/statementCompiler.ts", "../node_modules/miniscript-ts/src/compiler/compiler.ts", "../node_modules/miniscript-ts/src/debugger/steppers.ts", "../node_modules/miniscript-ts/src/debugger/debugger.ts", "../node_modules/miniscript-ts/src/lib/hashmap.ts", "../node_modules/miniscript-ts/src/lib/random.ts", "../node_modules/miniscript-ts/src/lib/stack.ts", "../node_modules/miniscript-ts/src/vm/context.ts", "../node_modules/miniscript-ts/src/vm/forloop.ts", "../node_modules/miniscript-ts/src/vm/frame.ts", "../node_modules/miniscript-ts/src/vm/processorState.ts", "../node_modules/miniscript-ts/src/vm/signatureParser.ts", "../node_modules/miniscript-ts/src/vm/processor.ts", "../node_modules/miniscript-ts/src/vm/msmap.ts", "../node_modules/miniscript-ts/src/vm/runtime.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/bitOperations.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/chars.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/collections.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/conversion.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/coreTypes.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/identity.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/math.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/print.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/randomness.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/scheduling.ts", "../node_modules/miniscript-ts/src/intrinsics/standard/string.ts", "../node_modules/miniscript-ts/src/intrinsics/intrinsics.ts", "../node_modules/miniscript-ts/src/parser/commonModel.ts", "../node_modules/miniscript-ts/src/parser/tokenizerModel.ts", "../node_modules/miniscript-ts/src/parser/tokenizer.ts", "../node_modules/miniscript-ts/src/parser/parser.ts", "../node_modules/miniscript-ts/src/runtime/runtimeApi.ts", "../node_modules/miniscript-ts/src/interpreter/runners/coopRunner.ts", "../node_modules/miniscript-ts/src/interpreter/runners/stdRunner.ts", "../node_modules/miniscript-ts/src/interpreter/interpreter.ts", "../src/msTerminal.ts", "../src/basicIO.ts", "../src/moduleLoader.ts", "../src/fileSystems/fileSystem.ts", "../src/fileSystems/httpFileSystem.ts", "../src/index.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(globalThis, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IInstantiationService } from 'common/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = this._coreBrowserService.mainDocument.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n    this.register(this._coreBrowserService.onDprChange(() => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from '@xterm/xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    // If the terminal is already opened\n    if (this.element?.ownerDocument.defaultView && this._coreBrowserService) {\n      // Adjust the window if needed\n      if (this.element.ownerDocument.defaultView !== this._coreBrowserService.window) {\n        this._coreBrowserService.window = this.element.ownerDocument.defaultView;\n      }\n      return;\n    }\n\n    this._document = parent.ownerDocument;\n    if (this.options.documentOverride && this.options.documentOverride instanceof Document) {\n      this._document = this.optionsService.rawOptions.documentOverride as Document;\n    }\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = this._document.createDocumentFragment();\n    this._viewportElement = this._document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = this._document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = this._document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = this._document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = this._document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this.register(this._instantiationService.createInstance(CoreBrowserService,\n      this.textarea,\n      parent.ownerDocument.defaultView ?? window,\n      // Force unsafe null in node.js environment for tests\n      this._document ?? (typeof window !== 'undefined') ? window.document : null as any\n    ));\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = this._document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this._document!, this.element!, this.screenElement!, this._viewportElement!, this._helperContainer!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderDimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowserService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowserService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _helperContainer: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = this._document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = this._document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(this._document, this._helperContainer);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css} !important;` +\n      ` color: ${colors.cursorAccent.css} !important;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = this._document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n    this.renderRows(0, this._bufferService.rows - 1);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = this._document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = this._document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          if (cell.isInvisible()) {\n            text += WHITESPACE_CELL_CHAR;\n          } else {\n            text += chars;\n          }\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell && this._coreService.isCursorInitialized) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, fgOverride)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document, _helperContainer: HTMLElement) {\n    this._container = _document.createElement('div');\n    this._container.classList.add('xterm-width-cache-measure-container');\n    this._container.setAttribute('aria-hidden', 'true');\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n    regular.classList.add('xterm-char-measure-element');\n\n    const bold = _document.createElement('span');\n    bold.classList.add('xterm-char-measure-element');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.classList.add('xterm-char-measure-element');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.classList.add('xterm-char-measure-element');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _helperContainer.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService } from './Services';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class CoreBrowserService extends Disposable implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n  private _screenDprMonitor = new ScreenDprMonitor(this._window);\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n  private readonly _onWindowChange = this.register(new EventEmitter<Window & typeof globalThis>());\n  public readonly onWindowChange = this._onWindowChange.event;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _window: Window & typeof globalThis,\n    public readonly mainDocument: Document\n  ) {\n    super();\n\n    // Monitor device pixel ratio\n    this.register(this.onWindowChange(w => this._screenDprMonitor.setWindow(w)));\n    this.register(forwardEvent(this._screenDprMonitor.onDprChange, this._onDprChange));\n\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get window(): Window & typeof globalThis {\n    return this._window;\n  }\n\n  public set window(value: Window & typeof globalThis) {\n    if (this._window !== value) {\n      this._window = value;\n      this._onWindowChange.fire(this._window);\n    }\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nclass ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n  private _windowResizeListener = this.register(new MutableDisposable());\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n\n  constructor(private _parentWindow: Window) {\n    super();\n\n    // Initialize listener and dpr value\n    this._outerListener = () => this._setDprAndFireIfDiffers();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._updateDpr();\n\n    // Monitor active window resize\n    this._setWindowResizeListener();\n\n    // Setup additional disposables\n    this.register(toDisposable(() => this.clearListener()));\n  }\n\n\n  public setWindow(parentWindow: Window): void {\n    this._parentWindow = parentWindow;\n    this._setWindowResizeListener();\n    this._setDprAndFireIfDiffers();\n  }\n\n  private _setWindowResizeListener(): void {\n    this._windowResizeListener.value = addDisposableDomListener(this._parentWindow, 'resize', () => this._setDprAndFireIfDiffers());\n  }\n\n  private _setDprAndFireIfDiffers(): void {\n    if (this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio) {\n      this._onDprChange.fire(this._parentWindow.devicePixelRatio);\n    }\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this.register(coreBrowserService.onDprChange(() => this.handleDevicePixelRatioChange()));\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    // If the value was not set, the terminal is being disposed so ignore it\n    if (this._renderer.value) {\n      this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n      // Force a refresh\n      this._needsSelectionRefresh = true;\n      this._fullRefresh();\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        if (this._model.selectionEnd[0] < this._bufferService.cols) {\n          this._model.selectionEnd[0]++;\n        }\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n\n  readonly onDprChange: IEvent<number>;\n  readonly onWindowChange: IEvent<Window & typeof globalThis>;\n\n  /**\n   * Gets or sets the parent window that the terminal is rendered into. DOM and rendering APIs (e.g.\n   * requestAnimationFrame) should be invoked in the context of this window. This should be set when\n   * the window hosting the xterm.js instance changes.\n   */\n  window: Window & typeof globalThis;\n  /**\n   * The document of the primary window to be used to create elements when working with multiple\n   * windows. This is defined by the documentOverride setting.\n   */\n  readonly mainDocument: Document;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    // This is guaranteed to run in the first window, so document should be correct\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via @xterm/addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodePoint(oldCol++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\ndeclare const process: unknown;\n\nexport const isNode = (typeof process !== 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from '@xterm/xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from '@xterm/xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from '@xterm/xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from '@xterm/xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from '@xterm/xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from '@xterm/xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from '@xterm/xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from '@xterm/xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  documentOverride: null,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from '@xterm/xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from '@xterm/xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", null, null, "'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n", "'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n", "/* eslint-disable yoda */\n'use strict';\n\nconst isFullwidthCodePoint = codePoint => {\n\tif (Number.isNaN(codePoint)) {\n\t\treturn false;\n\t}\n\n\t// Code points are derived from:\n\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\tif (\n\t\tcodePoint >= 0x1100 && (\n\t\t\tcodePoint <= 0x115F || // Hangul Jamo\n\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\t\t\t// CJK Unified Ideographs .. Yi Radicals\n\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\t\t\t// Hangul Jamo Extended-A\n\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\t\t\t// Hangul Syllables\n\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\t\t\t// CJK Compatibility Ideographs\n\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\t\t\t// Vertical Forms\n\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\t\t\t// CJK Compatibility Forms .. Small Form Variants\n\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\t\t\t// Halfwidth and Fullwidth Forms\n\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\t\t\t// Kana Supplement\n\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\t\t\t// Enclosed Ideographic Supplement\n\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\t\t)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nmodule.exports = isFullwidthCodePoint;\nmodule.exports.default = isFullwidthCodePoint;\n", "\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n", "'use strict';\nconst stripAnsi = require('strip-ansi');\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\nconst emojiRegex = require('emoji-regex');\n\nconst stringWidth = string => {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = stripAnsi(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emojiRegex(), '  ');\n\n\tlet width = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst code = string.codePointAt(i);\n\n\t\t// Ignore control characters\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Surrogates\n\t\tif (code > 0xFFFF) {\n\t\t\ti++;\n\t\t}\n\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t}\n\n\treturn width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports.default = stringWidth;\n", null, null, null, null, null, "export enum TokenType {\n\n  NEWLINE,\n  SEMICOLON,\n\n  STRING_LITERAL,\n  INT_LITERAL,\n  FLOAT_LITERAL,\n  IDENTIFIER_TK,\n\n  OPEN_CURLY,\n  OPEN_SQUARE,\n  OPEN_ROUND,\n\n  CLOSE_CURLY,\n  CLOSE_SQUARE,\n  CLOSE_ROUND,\n\n  DOT,\n  COLON,\n  COMMA,\n\n  ASSIGN,\n  PLUS_ASSIGN,\n  MINUS_ASSIGN,\n  MULT_ASSIGN,\n  DIV_ASSIGN,\n  MOD_ASSIGN,\n  POW_ASSIGN,\n\n  OP_EQUALS,\n  OP_NOT_EQUALS,\n\n  OP_OR,\n  OP_AND,\n\n  OP_LESS,\n  OP_LESS_EQUALS,\n  OP_GREATER,\n  OP_GREATER_EQUALS,\n  \n  OP_PLUS,\n  OP_MINUS,\n  OP_MOD,\n  OP_DIV,\n  OP_MULT,\n  OP_POW,\n\n  OP_NOT,\n  OP_FUNCREF,\n  OP_ISA,\n\n  KW_TRUE,\n  KW_FALSE,\n  KW_NULL,\n  KW_SUPER,\n\n  KW_IF,\n  KW_THEN,\n  KW_ELSE,\n  KW_ELSE_IF,\n\n  KW_WHILE,\n  KW_FOR,\n  KW_IN,\n  KW_BREAK,\n  KW_CONTINUE,\n\n  KW_NEW,\n  KW_FUNCTION,\n  KW_RETURN,\n\n  // Only temporary: combined later to one of the END_X tokens\n  KW_END,\n\n  KW_END_IF,\n  KW_END_FOR,\n  KW_END_WHILE,\n  KW_END_FUNCTION,\n\n  EOF,\n}\n\nexport function toOfficialImplTokenName(tokenType: TokenType): string {\n  switch(tokenType) {\n    case TokenType.COMMA:\n      return \"Comma\"\n    case TokenType.OPEN_ROUND:\n      return \"LParen\"\n    case TokenType.CLOSE_ROUND:\n      return \"RParen\"\n    default:\n      TokenType[tokenType]\n      return `${TokenType[tokenType]}`\n  }\n}", "// TODO: move the whole toJson thing outside of these models.\n// It is only for debugging, they should be external.\n\nimport { SrcLocation } from \"./commonModel\";\nimport { Token, Identifier } from \"./tokenizerModel\";\nimport { TokenType } from \"./tokenTypes\";\n\nexport interface Expression {\n  location(): SrcLocation;\n  toJson(): object;\n  description(): string;\n}\n\ntype OptExpression = Expression | undefined\ntype DefaultArgValue = Literal | undefined;\n\nexport interface Statement {\n  description(): string;\n  toJson(): object\n}\n\ntype jsonCapable = {\n  toJson(): object\n}\n\nfunction toJsonArray(elements: jsonCapable[]): object[] {\n  let result = []\n  for (let e of elements) {\n    result.push(e.toJson())\n  }\n  return result\n}\n\nfunction tokensToJsonArray(tokens: Token[]): any[] {\n  let result = [];\n  for (let token of tokens) {\n    const tokenType = token.tokenType;\n    result.push(TokenType[tokenType].toString());\n  }\n  return result;\n}\n\n// == Statements\n\n// An expression found at the level of a statement\nexport class ExpressionStatement implements Statement {\n  constructor(public expression: Expression) {}\n\n  location() {\n    return this.expression.location()\n  }\n\n  description(): string {\n    return \"Expression Statement\";\n  }\n\n  toJson(): object {\n    return {\n      \"ExpressionStatement\": {\n        \"expression\": this.expression.toJson()\n      }\n    }\n  }\n}\n\nexport class ConditionedStatements {\n  constructor(public condition: Expression, public statements: Statement[]) {}\n  \n  location() {\n    return this.condition.location();\n  }\n\n  toJson(): object {\n    return {\n      \"ConditionedStatements\": {\n        \"condition\": this.condition.toJson(),\n        \"statements\": toJsonArray(this.statements)\n      }\n    }\n  }\n}\n\n\nexport class IfStatement implements Statement {\n  constructor(public ifBranch: ConditionedStatements,\n    public elseIfs: ConditionedStatements[],\n    public elseBranch: Statement[]) {}\n \n  description(): string {\n    return \"If Statement\";\n  }\n\n  toJson(): object {\n    return {\n      \"IfStatement\": {\n        \"ifBranch\": this.ifBranch.toJson(),\n        \"elseIfs\": toJsonArray(this.elseIfs),\n        \"elseBranch\": toJsonArray(this.elseBranch)\n      }\n    }\n  }\n}\n\nexport class WhileStatement implements Statement {\n  constructor(public condition: Expression, public headerLocation: SrcLocation, public statements: Statement[]) { }\n  description(): string {\n    return \"While Statement\";\n  }  \n  toJson(): object {\n    return {\n      \"WhileStatement\": {\n        \"condition\": this.condition.toJson(),\n        \"statements\": toJsonArray(this.statements)\n      }\n    }\n  }\n}\n\nexport class ForStatement implements Statement {\n  constructor(public loopVar: Identifier, public rangeExpr: Expression, public headerLocation: SrcLocation, public statements: Statement[]) {}\n  description(): string {\n    return \"For Statement\";\n  }\n  toJson(): object {\n    return {\n      \"ForStatement\": {\n        \"loopVar\": this.loopVar.value,\n        \"rangeExpr\": this.rangeExpr.toJson(),\n        \"statements\": toJsonArray(this.statements)\n      }\n    }\n  }\n}\n\nexport class AssignmentStatement implements Statement {\n  constructor(public target: Expression, public value: Expression) {}\n  \n  description(): string {\n    return \"Assignment\";\n  }\n\n  location() {\n    return this.target.location().upTo(this.value.location());\n  }\n\n  toJson(): object {\n    return {\n      \"AssignmentStatement\": {\n        \"target\": this.target.toJson(),\n        \"value\": this.value.toJson()\n      }\n    }\n  }\n}\n\nexport class MathAssignmentStatement implements Statement {\n  constructor(public target: Expression, public opToken: TokenType, public value: Expression) {}\n  \n  description(): string {\n    return \"Math-Assignment\";\n  }\n\n  location() {\n    return this.target.location().upTo(this.value.location());\n  }\n\n  toJson(): object {\n    return {\n      \"MathAssignmentStatement\": {\n        \"target\": this.target.toJson(),\n        \"op\": TokenType[this.opToken],\n        \"value\": this.value.toJson()\n      }\n    }\n  }\n}\n\nexport class FunctionCallStatement implements Statement {\n  constructor(public callTarget: Expression, public args: Expression[]) {}\n  description(): string {\n    return \"Function Call Statement\";\n  }\n  location(): SrcLocation {\n    if (this.args.length > 0) {\n      const lastArg = this.args[this.args.length - 1];\n      return this.callTarget.location().upTo(lastArg.location());\n    } else {\n      return this.callTarget.location();\n    }\n  }\n  toJson(): object {\n    return {\n      \"FunctionCallStatement\": {\n        \"callTarget\": this.callTarget.toJson(),\n        \"args\": toJsonArray(this.args)\n      }\n    }\n  }\n}\n\nexport class ReturnStatement implements Statement {\n  constructor(public optValue: OptExpression, private fullLocation: SrcLocation) {}\n  location() {\n    return this.fullLocation;\n  }\n  description(): string {\n    return \"Return Statement\";\n  }\n  toJson(): object {\n    return {\n      \"ReturnStatement\": {\n        \"optValue\": this.optValue ? this.optValue.toJson() : null\n      }\n    }\n  }\n}\n\nexport class BreakStatement implements Statement {\n  constructor(private fullLocation: SrcLocation) {}\n  location() {\n    return this.fullLocation;\n  }\n  description(): string {\n    return \"Break Statement\";\n  }\n  toJson(): object {\n    return {\n      \"BreakStatement\": null\n    }\n  }\n}\n\nexport class ContinueStatement implements Statement {\n  constructor(private fullLocation: SrcLocation) {}\n  location() {\n    return this.fullLocation;\n  }\n  description(): string {\n    return \"Continue Statement\";\n  }\n  toJson(): object {\n    return {\n      \"ContinueStatement\": null\n    }\n  }\n}\n\n// == Expressions\n\nexport class BinaryExpr implements Expression {\n  constructor(public left: Expression, public operator: Token, public right: Expression) {}\n  \n  location() {\n    return this.left.location().upTo(this.right.location());\n  }\n\n  description(): string {\n    return \"Binary Expression\";\n  }\n  \n  toJson(): object {\n    return {\n      \"BinaryExpr\": {\n        \"left\": this.left.toJson(),\n        \"operator\": TokenType[this.operator.tokenType],\n        \"right\": this.right.toJson()\n      }\n    }\n  }\n}\n\nexport class ChainedComparisonExpr {\n  constructor(public operands: Expression[], public operators: Token[]) {\n    if (operands.length < 3) {\n      throw new Error(\"Amount of operands must be at least 3\");\n    }\n    if (operands.length - 1 != operators.length) {\n      throw new Error(\"Amount of operands/operators mismatch\");\n    }\n    for (let tk of operators) {\n      const ttype = tk.tokenType;\n      if (ttype != TokenType.OP_EQUALS\n          && ttype != TokenType.OP_NOT_EQUALS\n          && ttype != TokenType.OP_GREATER \n          && ttype != TokenType.OP_GREATER_EQUALS \n          && ttype != TokenType.OP_LESS\n          && ttype != TokenType.OP_LESS_EQUALS){\n        throw new Error(`Invalid token type: ${TokenType[ttype]}`);\n      }\n    }\n  }\n  \n  location(): SrcLocation {\n    const firstOperand = this.operands[0];\n    const lastOperand = this.operands[this.operands.length - 1];\n    return firstOperand.location().upTo(lastOperand.location());\n  }\n\n  description(): string {\n    return \"Binary Expression\";\n  }\n  \n  toJson(): object {\n    return {\n      \"ChainedComparison\": {\n        \"operands\": toJsonArray(this.operands),\n        \"operators\": tokensToJsonArray(this.operators)\n      }\n    }\n  }\n}\n\nexport class LogicExpr implements Expression {\n  constructor(public left: Expression, public operator: Token, public right: Expression) {}\n  \n  location(): SrcLocation {\n    return this.left.location().upTo(this.right.location());\n  }\n\n  description(): string {\n    return \"Logic Expression\";\n  }\n\n  toJson(): object {\n    return {\n      \"LogicExpr\": {\n        \"left\": this.left.toJson(),\n        \"operator\": TokenType[this.operator.tokenType],\n        \"right\": this.right.toJson()\n      }\n    }\n  }\n}\n\nexport class UnaryExpr implements Expression {\n  constructor(public operator: Token, public expr: Expression) {}\n\n  location(): SrcLocation {\n    return this.operator.location.upTo(this.expr.location());\n  }\n\n  description(): string {\n    return \"Unary Expression\";\n  }\n\n  toJson(): object {\n    return {\n      \"UnaryExpr\": {\n        \"operator\": TokenType[this.operator.tokenType],\n        \"expr\": this.expr.toJson()\n      }\n    }\n  }\n}\n\nexport class Literal implements Expression {\n  constructor(public value: any, private fullLocation: SrcLocation) {}\n  \n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n\n  description(): string {\n    return \"Literal\";\n  }\n\n  toJson(): object {\n    return {\n      \"Literal\": {\n        \"value\": this.value\n      }\n    }\n  }\n}\n\nexport class GroupingExpr implements Expression {\n  constructor(public expr: Expression, private fullLocation: SrcLocation) {}\n  \n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n\n  description(): string {\n    return \"Grouping Expression\";\n  }\n\n  toJson(): object {\n    return {\n      \"GroupingExpr\": {\n        \"expr\": this.expr.toJson()\n      }\n    }\n  }\n}\n\nexport class IdentifierExpr implements Expression {\n  constructor(public identifier: Identifier) {}\n  \n  location(): SrcLocation {\n    return this.identifier.location;\n  }\n\n  description(): string {\n    return \"Identifier\";\n  }\n\n  toJson(): object {\n    return {\n      \"IdentifierExpr\": {\n        \"identifier\": this.identifier.value\n      }\n    }\n  }\n}\n\nexport class FunctionCallExpr implements Expression {\n  \n  constructor(public callTarget: Expression, public args: Expression[], private fullLocation: SrcLocation) {}\n\n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n\n  description(): string {\n    return \"Function Call Expression\";\n  }\n\n  toJson(): object {\n    return {\n      \"FunctionCallExpr\": {\n        \"callTarget\": this.callTarget.toJson(),\n        \"args\": toJsonArray(this.args)\n      }\n    }\n  }\n}\n\nexport class ListExpr implements Expression {\n  \n  constructor(public elements: Expression[], private fullLocation: SrcLocation) {}\n\n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n\n  description(): string {\n    return \"List Expression\";\n  }\n\n  toJson(): object {\n    return {\n      \"ListExpr\": {\n        \"elements\": toJsonArray(this.elements)\n      }\n    }\n  }\n}\n\nexport class MapExpr implements Expression {\n  \n  constructor(public elements: Map<Expression, Expression>, private fullLocation: SrcLocation) {}\n\n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n\n  description(): string {\n    return \"Map Expression\";\n  }\n\n  toJson(): object {\n    const entries = []\n    for (let [key, value] of this.elements) {\n      entries.push({\"key\": key, \"value\": value})\n    }\n    return {\n      \"MapExpr\": {\n        \"elements\": entries\n      }\n    }\n  }\n}\n\nexport class IndexedAccessExpr implements Expression {\n  constructor(public accessTarget: Expression, public indexExpr: Expression, private fullLocation: SrcLocation) {}\n  \n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n\n  description(): string {\n    return \"Indexed Access\";\n  }\n\n  toJson(): object {\n    return {\n      \"IndexedAccessExpr\": {\n        \"accessTarget\": this.accessTarget.toJson(),\n        \"indexExpr\": this.indexExpr.toJson()\n      }\n    }\n  }\n}\n\nexport class ListSlicingExpr implements Expression {\n  constructor(public listTarget: Expression, public start: OptExpression, public stop: OptExpression, private fullLocation: SrcLocation) {}\n  \n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n  description(): string {\n    return \"List Slicing\";\n  }\n  toJson(): object {\n    return {\n      \"ListSlicingExpr\": {\n        \"listTarget\": this.listTarget.toJson(),\n        \"start\": this.start ? this.start.toJson() : undefined,\n        \"stop\": this.stop ? this.stop.toJson() : undefined\n      }\n    }\n  }\n}\n\nexport class DotAccessExpr implements Expression {\n  constructor(public accessTarget: Expression, public property: Identifier) {}\n  \n  location(): SrcLocation {\n    return this.accessTarget.location().upTo(this.property.location);\n  }\n\n  description(): string {\n    return \"Property Access\";\n  }\n  \n  toJson(): object {\n    return {\n      \"DotAccessExpr\": {\n        \"accessTarget\": this.accessTarget.toJson(),\n        \"property\": this.property.value\n      }\n    }\n  }\n}\n\nexport class Argument {\n  constructor(public name: string, public defaultValue: DefaultArgValue, private fullLocation: SrcLocation) {}\n  \n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n\n  toJson(): object {\n    return {\n      \"Argument\": {\n        \"name\": this.name,\n        \"defaultValue\": this.defaultValue ? this.defaultValue.toJson() : \"(undefined)\"\n      }\n    }\n  }\n}\n\nexport class FunctionBodyExpr implements Expression {\n  \n  constructor(public args: Argument[], public statements: Statement[], private fullLocation: SrcLocation) {}\n\n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n\n  description(): string {\n    return \"Function Body\";\n  }\n\n  toJson(): object {\n    return {\n      \"FunctionBodyExpr\": {\n        \"args\": toJsonArray(this.args),\n        \"statements\": toJsonArray(this.statements)\n      }\n    }\n  }\n}\n\nexport class FunctionRefExpr implements Expression {\n  constructor(public refTarget: Expression, private fullLocation: SrcLocation)  {}\n  \n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n  description(): string {\n    return \"Function Reference\";\n  }\n  toJson(): object {\n    return {\n      \"FunctionRefExpr\": {\n        \"refTarget\": this.refTarget.toJson()\n      }\n    }\n  }\n}\n\nexport class SelfExpr implements Expression {\n  constructor(private fullLocation: SrcLocation) {}\n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n  description(): string {\n    return \"Self Expression\";\n  }\n  toJson(): object {\n    return {\n      \"SelfExpr\": {}\n    }\n  }\n}\n\nexport class SuperExpr implements Expression {\n  constructor(private fullLocation: SrcLocation) {}\n  location(): SrcLocation {\n    return this.fullLocation;\n  }\n  description(): string {\n    return \"Super Expression\";\n  }\n  toJson(): object {\n    return {\n      \"SuperExpr\": {}\n    }\n  }\n}", "\nexport enum BC {\n  // Push primitive value to stack\n  PUSH,\n\n  // Resolve variable and push value to stack\n  EVAL_ID,\n\n  // Perform indexed access (on map/list) using brackets, lile myCollection[23]\n  INDEXED_ACCESS,\n  // Access property using \"dot-notation\", as in myMap.myProperty\n  DOT_ACCESS,\n  // Access property at \"super\" using \"dot-notation\", as in super.myProperty\n  SUPER_DOT_ACCESS,\n\n  // Perform a slice on a sequence (List or String, NOT Map)\n  SLICE_SEQUENCE,\n\n  // Assign value to local variable\n  ASSIGN_LOCAL,\n  // Assign value using indexed access, like myFoo[key] = value\n  ASSIGN_INDEXED,\n  // Assign property using dot-notation, like myMap.property = value\n  DOT_ASSIGN,\n\n  // Various forms of math-assignments\n  MATH_ASSIGN_LOCAL,\n  MATH_ASSIGN_INDEXED,\n  MATH_DOT_ASSIGN,\n\n  // Adds two stack values, leaving result in the stack\n  ADD_VALUES,\n\n  // Subtract two stack values, leaving result in the stack\n  SUBTRACT_VALUES,\n\n  MULTIPLY_VALUES,\n  DIVIDE_VALUES,\n  POWER_VALUES,\n  MOD_VALUES,\n\n  SUBTR_N,\n  DIVIDE_N,\n\n  LOGIC_AND_VALUES,\n  LOGIC_OR_VALUES,\n\n  NEGATE_BOOLEAN,\n  NEGATE_NUMBER,\n\n  COMPARE_EQ,\n  COMPARE_NE,\n\n  COMPARE_GE,\n  COMPARE_GT,\n  COMPARE_LE,\n  COMPARE_LT,\n\n  COMPARE_ISA,\n\n  // Build a List from values on the stack\n  // Push resulting List back\n  BUILD_LIST,\n  // Build a Map from values on the stack\n  // Push resulting Map back\n  BUILD_MAP,\n  // Instantiate new Map using `new``\n  NEW_MAP,\n\n  // Perform a \"chained comparison\"\n  CHAINED_COMPARISON,\n\n  JUMP,\n  POP_JUMP_FALSE,\n  JUMP_IF_FALSE,\n  JUMP_IF_TRUE,\n\n  // Call a stand-alone function directly\n  CALL,\n  // Used to call both in indexed form or dot-form (e.g m[\"f\"](p1,p2) or m.f(p1,p2) )\n  PROPERTY_CALL,\n  // Call method at \"super\", using either `super.foo 123` or `super[\"foo\"] 123`\n  SUPER_DOT_CALL,\n  // Invoke the function stored in the func-ref with parameters\n  FUNCREF_CALL,\n\n  RETURN,\n  \n  POP,\n  PRINT_TOP,\n\n  CREATE_FOR_LOOP,\n  ITERATE_FOR_LOOP,\n  BREAK_FOR_LOOP,\n  CONTINUE_FOR_LOOP,\n};\n\nexport function hasCallPotential(op: BC): boolean {\n  return (op === BC.CALL \n    || op === BC.PROPERTY_CALL\n    || op === BC.DOT_ACCESS\n    || op === BC.FUNCREF_CALL\n    || op === BC.EVAL_ID\n    || op === BC.INDEXED_ACCESS\n    || op === BC.SUPER_DOT_ACCESS\n  );\n}", "import { Code } from \"./code\";\nimport { Context } from \"./context\";\n\nexport class FuncDefArg {\n\n  readonly name: string;\n  readonly defaultValue: any | undefined;\n\n  constructor(name: string, defaultValue: any | undefined) {\n    this.name = name;\n    this.defaultValue = defaultValue;\n  }\n\n}\n\nexport class FuncDef {\n\n  readonly arguments: FuncDefArg[];\n\n  readonly argNames: string[];\n  readonly reversedArgNames: string[];\n  readonly effectiveDefaultValues: any[];\n\n  private readonly code: Code | Function;\n\n  // The \"default values\" array has to have the same length s \"arg-names\".\n  // Pass \"undefined\" as the value if it has NO default value.\n  constructor(args: FuncDefArg[], code: Code | Function) {\n    this.arguments = args;\n\n    this.argNames = args.map((a) => a.name);\n    this.reversedArgNames = this.argNames.slice().reverse();\n    this.effectiveDefaultValues = args.map((a) => a.defaultValue === undefined ? null : a.defaultValue);\n    this.code = code;\n  }\n\n  getLastNEffectiveDefaultValues(amount: number): any[] {\n    return this.effectiveDefaultValues.slice(-amount);\n  }\n\n  isNative(): boolean {\n    return this.code instanceof Function;\n  }\n\n  getCode(): Code {\n    return this.code as Code;\n  }\n\n  getFunction(): Function {\n    return this.code as Function;\n  }\n\n}\n\n// A function definition which is bound to a context at runtime.\n// As such it's ready to run and variables should be able to be \n// resolved even in parent contexts.\nexport class BoundFunction {\n\n  public readonly funcDef: FuncDef;\n  public readonly context: Context;\n\n  constructor(funcDef: FuncDef, context: Context) {\n    this.funcDef = funcDef;\n    this.context = context;\n  }\n\n}", "import { SrcLocation } from \"../parser/commonModel\";\n\nexport type SourceMapEntry = {\n  ipStart: number;\n  ipEnd: number;\n  srcLoc: SrcLocation;\n  isCall: boolean;\n}\n\nexport class SourceMap {\n\n  entries: SourceMapEntry[];\n\n  constructor(public readonly srcFile?: string) {\n    this.entries = [];\n  }\n\n  pushEntry(ipStart: number, ipEnd: number, srcLoc: SrcLocation, isCall: boolean = false) {\n    const entry = {\n      ipStart: ipStart,\n      ipEnd: ipEnd,\n      srcLoc: srcLoc,\n      isCall: isCall,\n    };\n    this.entries.push(entry);\n  }\n\n  pushCall(ipStart: number, ipEnd: number, srcLoc: SrcLocation) {\n    this.pushEntry(ipStart, ipEnd, srcLoc, true);\n  }\n\n  findEntry(ip: number): SourceMapEntry | null {\n    for(let entry of this.entries) {\n      if (ip >= entry.ipStart && ip <= entry.ipEnd) {\n        return entry;\n      }\n    }\n    return null;\n  }\n\n}", "import { BC } from \"./bytecodes\";\nimport { SourceMap } from \"./sourcemap\";\n\nexport class Code {\n\n  opCodes: BC[];\n  // For debugging\n  debugLines: any[];\n  \n  arg1: any[];\n  arg2: any[];\n\n  srcMap: SourceMap;\n  \n  constructor() {\n    this.opCodes = [];\n    this.debugLines = [];\n    this.arg1 = [];\n    this.arg2 = [];\n    this.srcMap = new SourceMap();\n  }\n\n  push(opCode: BC, arg1: any = undefined, arg2: any = undefined) {\n    this.opCodes.push(opCode);\n    this.arg1.push(arg1);\n    this.arg2.push(arg2);\n    this.pushDebugLine(opCode, arg1, arg2);\n  }\n\n  private pushDebugLine(opCode: BC, arg1: any, arg2: any) {\n    const debugCode = [BC[opCode]];\n    if (arg1 !== undefined) debugCode.push(arg1);\n    if (arg2 !== undefined) debugCode.push(arg2);\n    this.debugLines.push(debugCode);\n  }\n\n}", "import { SrcLocation } from \"../parser/commonModel\";\nimport { BC, hasCallPotential } from \"../vm/bytecodes\";\nimport { Code } from \"../vm/code\";\nimport { SourceMap } from \"../vm/sourcemap\";\n\nexport class AddrLabel {\n  constructor(public readonly idx: number) {\n  }\n}\n\nexport class CodeBuilder {\n\n  prg: Code;\n  ip: number;\n  addresses: Map<AddrLabel, number>;\n  unresolvedIdx = 0;\n  unresolved: number[];\n\n  srcMapIpStart: number;\n  srcMap: SourceMap;\n\n  constructor(public readonly srcFile?: string) {\n    this.prg = new Code();\n    this.ip = 0;\n    this.addresses = new Map();\n    this.unresolved = [];\n\n    this.srcMapIpStart = -1;\n    this.srcMap = new SourceMap(srcFile);\n  }\n\n  push(opCode: BC, arg1: any = undefined, arg2: any = undefined) {\n    this.prg.push(opCode, arg1, arg2);\n    this.ip++;\n  }\n  \n  push_unresolved(opCode: BC, arg1: any = undefined, arg2: any = undefined) {\n    if (!(arg1 instanceof AddrLabel) && !(arg2 instanceof AddrLabel)) {\n      throw new Error(\"Expected one of the parameters to be an address label\");\n    }\n    this.prg.push(opCode, arg1, arg2);\n    this.unresolved.push(this.ip);\n    this.ip++;\n  }\n\n  newLabel() {\n    const addLabel = new AddrLabel(this.unresolvedIdx);\n    this.unresolvedIdx += 1;\n    return addLabel;\n  }\n\n  startMapEntry() {\n    this.srcMapIpStart = this.ip;\n  }\n\n  endMapEntry(srcLoc: SrcLocation) {\n    const ipStart = this.srcMapIpStart;\n    const ipEnd = this.ip - 1;\n    if (ipStart < 0) {\n      throw new Error(\"No starting map-entry\");\n    }\n    // Check if the range has a call within\n    // If so, mark as step-in-able\n    const hasCall = this.containsCall(ipStart, ipEnd);\n    // Create entry\n    if (hasCall) {\n      this.srcMap.pushCall(ipStart, ipEnd, srcLoc);\n    } else {\n      this.srcMap.pushEntry(ipStart, ipEnd, srcLoc);\n    }\n    this.srcMapIpStart = -1;\n  }\n\n  containsCall(ipStart: number, ipEnd: number): boolean {\n    for(let idx = ipStart; idx <= ipEnd; idx++) {\n      const opCode = this.prg.opCodes[idx];\n      if (hasCallPotential(opCode)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  define_address(label: AddrLabel) {\n    this.addresses.set(label, this.ip);\n  }\n\n  build(): Code {\n    this.resolveAddresses()\n    const code = this.prg;\n    code.srcMap = this.srcMap;\n    return code;\n  }\n\n  private resolveAddresses() {\n    const resolveAddr = (uaddr: number, argArray: Array<any>) => {\n      let label = argArray[uaddr];\n      if (label instanceof AddrLabel) {\n        let prgAddr = this.addresses.get(label);\n        if (prgAddr === undefined) {\n          throw new Error(`No address for label ${label} at address ${uaddr}`);\n        }\n        // Replace with resolved address\n        argArray[uaddr] = prgAddr;\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n\n    for (let uaddr of this.unresolved) {\n      let resolvedCount = 0;\n      resolvedCount += resolveAddr(uaddr, this.prg.arg1);\n      resolvedCount += resolveAddr(uaddr, this.prg.arg2);\n      if (resolvedCount === 0) {\n        throw new Error(\"No addresses resolved for \" + uaddr);\n      }\n    }\n  }\n\n}", "\nexport class NotImplemented extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n// Ideally these should not happen.\n// Either a runtime-error should be thrown\n// or the parser revised to catch errors\n// earlier.\nexport class CompileTimeError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}", "import { Expression, Literal, IdentifierExpr, SelfExpr, SuperExpr, BinaryExpr, UnaryExpr, ChainedComparisonExpr, LogicExpr, GroupingExpr, ListExpr, MapExpr, IndexedAccessExpr, DotAccessExpr, ListSlicingExpr, FunctionCallExpr, FunctionRefExpr, FunctionBodyExpr } from \"../parser/parserModel\";\nimport { TokenType } from \"../parser/tokenTypes\";\nimport { BC } from \"../vm/bytecodes\";\nimport { FuncDef, FuncDefArg } from \"../vm/funcdef\";\nimport { CodeBuilder } from \"./codebuilder\";\nimport { Compiler } from \"./compiler\";\nimport { NotImplemented, CompileTimeError } from \"./compilerModel\";\n\nexport class ExpressionCompilerContext {\n  constructor(public readonly isFuncRef: boolean = false, public readonly isStatement: boolean = false) {\n  }\n  enterFunctionReference(): ECContext {\n    const newContext = new ExpressionCompilerContext(true, this.isStatement);\n    return newContext;\n  }\n  enterStatement(): ECContext {\n    const newContext = new ExpressionCompilerContext(this.isFuncRef, true);\n    return newContext;   \n  }\n}\n\nexport type ECContext = ExpressionCompilerContext;\n\nexport class ExpressionCompiler {\n\n  constructor(private builder: CodeBuilder) { }\n\n  compileExpression(e: Expression, context: ECContext | null = null) {\n    const b = this.builder;\n    context = context == null ? new ExpressionCompilerContext() : context;\n\n    if (e instanceof Literal) {\n      b.push(BC.PUSH, e.value)\n    } else if (e instanceof IdentifierExpr) {\n      this.compileIdentifierExpr(e, context);\n    } else if (e instanceof SelfExpr) {\n      this.compileSelfExpr();\n    } else if (e instanceof SuperExpr) {\n      this.compileSuperExpr();\n    } else if (e instanceof BinaryExpr) {\n      this.compileBinaryExpression(e);\n    } else if (e instanceof UnaryExpr) {\n      this.compileUnaryExpression(e);\n    } else if (e instanceof ChainedComparisonExpr) {\n      this.compileChainedComparisonExpression(e);\n    } else if (e instanceof LogicExpr) {\n      this.compileLogicExpression(e);\n    } else if (e instanceof GroupingExpr) {\n      this.compileExpression(e.expr, context);\n    } else if (e instanceof ListExpr) {\n      this.compileListExpression(e);\n    } else if (e instanceof MapExpr) {\n      this.compileMapExpression(e);\n    } else if (e instanceof IndexedAccessExpr) {\n      this.compileIndexedAccessExpression(e, context);\n    } else if (e instanceof DotAccessExpr) {\n      this.compileDotAccessExpression(e, context);\n    } else if (e instanceof ListSlicingExpr) {\n      this.compileListSlicingExpression(e);\n    } else if (e instanceof FunctionCallExpr) {\n      this.compileFuncCallExpr(e.callTarget, e.args, context);\n    } else if (e instanceof FunctionRefExpr) {\n      this.compileFuncRefExpression(e, context);\n    } else if (e instanceof FunctionBodyExpr) {\n      this.compileFunctionBodyExpression(e);\n    } else {\n      throw new NotImplemented(\"Expression type not yet supported: \" + e.description())\n    }\n  }\n\n  compileIdentifierExpr(e: IdentifierExpr, context: ECContext) {\n    this.builder.push(BC.EVAL_ID, e.identifier.value, context.isFuncRef);\n  }\n\n  compileSelfExpr() {\n    this.builder.push(BC.EVAL_ID, \"self\");\n  }\n\n  compileSuperExpr() {\n    this.builder.push(BC.EVAL_ID, \"super\");\n  }\n\n  compileFuncCall(callTarget: Expression, args: Expression[]) {\n    const context = new ExpressionCompilerContext();\n    this.compileFuncCallExpr(callTarget, args, context);\n  }\n\n  compileFuncCallExpr(callTarget: Expression, params: Expression[], context: ECContext) {\n    const pushParams = () => {\n      // Push parameters\n      for (let param of params) {\n        this.compileExpression(param)\n      }\n    };\n    const paramCount = params.length;\n    // Resolve and call target\n    if (callTarget instanceof IdentifierExpr) {\n      const identifier = callTarget.identifier.value;\n      pushParams();\n      this.builder.push(BC.CALL, identifier, paramCount);\n    } else if(callTarget instanceof DotAccessExpr \n        && callTarget.accessTarget instanceof SuperExpr) {\n      const identifier = callTarget.property.value;\n      // Push property\n      this.builder.push(BC.PUSH, identifier);\n      // Push params\n      pushParams();\n      // Push opcode\n      this.builder.push(BC.SUPER_DOT_CALL, paramCount);\n    } else if(callTarget instanceof DotAccessExpr) {\n      const identifier = callTarget.property.value;\n      // Push call target\n      this.compileExpression(callTarget.accessTarget);\n      // Push property\n      this.builder.push(BC.PUSH, identifier);\n      // Push params\n      pushParams();\n      // Push opcode\n      this.builder.push(BC.PROPERTY_CALL, paramCount);\n    } else if(callTarget instanceof IndexedAccessExpr\n        && callTarget.accessTarget instanceof SuperExpr) {\n      // Push property\n      this.compileExpression(callTarget.indexExpr);\n      // Push params\n      pushParams();\n      // Push opcode\n      this.builder.push(BC.SUPER_DOT_CALL, paramCount);\n    } else if(callTarget instanceof IndexedAccessExpr) {\n      // Push call target\n      this.compileExpression(callTarget.accessTarget);\n      // Push property\n      this.compileExpression(callTarget.indexExpr);\n      // Push params\n      pushParams();\n      // Push opcode\n      this.builder.push(BC.PROPERTY_CALL, paramCount);\n    } else if(callTarget instanceof FunctionCallExpr) {\n      const ctx = context.enterFunctionReference();\n      this.compileExpression(callTarget, ctx);\n      pushParams();\n      this.builder.push(BC.FUNCREF_CALL, paramCount);\n    } else {\n      throw new CompileTimeError(`Invalid call target: ${callTarget.toJson()}`)\n    }\n  }\n\n  private compileBinaryExpression(e: BinaryExpr) {\n    this.compileExpression(e.left)\n    this.compileExpression(e.right)\n    switch (e.operator.tokenType) {\n      case TokenType.OP_EQUALS: {\n        this.builder.push(BC.COMPARE_EQ)\n        break;\n      }\n      case TokenType.OP_NOT_EQUALS: {\n        this.builder.push(BC.COMPARE_NE)\n        break;\n      }\n      case TokenType.OP_PLUS: {\n        this.builder.push(BC.ADD_VALUES)\n        break;\n      }\n      case TokenType.OP_MINUS: {\n        this.builder.push(BC.SUBTRACT_VALUES)\n        break;\n      }\n      case TokenType.OP_MULT: {\n        this.builder.push(BC.MULTIPLY_VALUES)\n        break;\n      }\n      case TokenType.OP_DIV: {\n        this.builder.push(BC.DIVIDE_VALUES)\n        break;\n      }\n      case TokenType.OP_POW: {\n        this.builder.push(BC.POWER_VALUES)\n        break;\n      }\n      case TokenType.OP_MOD: {\n        this.builder.push(BC.MOD_VALUES)\n        break;\n      }\n      case TokenType.OP_LESS_EQUALS: {\n        this.builder.push(BC.COMPARE_LE)\n        break;\n      }\n      case TokenType.OP_LESS: {\n        this.builder.push(BC.COMPARE_LT)\n        break;\n      }\n      case TokenType.OP_GREATER_EQUALS: {\n        this.builder.push(BC.COMPARE_GE)\n        break;\n      }\n      case TokenType.OP_GREATER: {\n        this.builder.push(BC.COMPARE_GT)\n        break;\n      }\n      case TokenType.OP_ISA: {\n        this.builder.push(BC.COMPARE_ISA)\n        break;\n      }\n      default:\n        throw new NotImplemented(\"Operator not implemented: \" + TokenType[e.operator.tokenType])\n    }\n  }\n\n  private compileUnaryExpression(e: UnaryExpr) {\n    // Compile expression\n    this.compileExpression(e.expr);\n    // Push operator\n    switch (e.operator.tokenType) {\n      case TokenType.OP_NOT: {\n        this.builder.push(BC.NEGATE_BOOLEAN);\n        break;\n      }\n      case TokenType.OP_MINUS: {\n        this.builder.push(BC.NEGATE_NUMBER);\n        break;\n      }\n      case TokenType.KW_NEW: {\n        this.builder.push(BC.NEW_MAP);\n        break;\n      }\n      default: {\n        throw new CompileTimeError(\"Invalid unary operator. Token type: \" + e.operator.tokenType);\n      }\n    }\n  }\n\n  private compileChainedComparisonExpression(e: ChainedComparisonExpr) {\n    // Compile and push expressions\n    for (let operandExpression of e.operands) {\n      this.compileExpression(operandExpression);\n    }\n    // Push operators\n    for (let operator of e.operators) {\n      switch (operator.tokenType) {\n        case TokenType.OP_EQUALS: {\n          this.builder.push(BC.PUSH, \"==\");\n          break;\n        }\n        case TokenType.OP_NOT_EQUALS: {\n          this.builder.push(BC.PUSH, \"!=\");\n          break;\n        }\n        case TokenType.OP_GREATER: {\n          this.builder.push(BC.PUSH, \">\");\n          break;\n        }   \n        case TokenType.OP_GREATER_EQUALS: {\n          this.builder.push(BC.PUSH, \">=\");\n          break;\n        } \n        case TokenType.OP_LESS: {\n          this.builder.push(BC.PUSH, \"<\");\n          break;\n        }\n        case TokenType.OP_LESS_EQUALS: {\n          this.builder.push(BC.PUSH, \"<=\");\n          break;\n        }\n        default: {\n          throw new CompileTimeError(\"Invalid operator found\");\n        }\n      }\n    }\n    // Push special opcode\n    const pairCount = e.operators.length;\n    this.builder.push(BC.CHAINED_COMPARISON, pairCount);\n  }\n\n  private compileLogicExpression(e: LogicExpr) {\n    // Determine type\n    const isAnd = e.operator.tokenType == TokenType.OP_AND;\n    const isOr = e.operator.tokenType == TokenType.OP_OR;\n    if (!(isAnd || isOr)) {\n      throw new CompileTimeError(\"Invalid logic operator: must be either AND or OR\");\n    }\n    // Used to short-circuit when further evaluation is not needed.\n    // For example \"true or something-else\" or \"false and something-else\".\n    // This is not only an optimization but expected behaviour.\n    const shortCircuitAddr = this.builder.newLabel();\n\n    // Compile expression of the left\n    this.compileExpression(e.left);\n    \n    // Insert short-circuit conditional jump\n    if (isAnd) {\n      this.builder.push_unresolved(BC.JUMP_IF_FALSE, shortCircuitAddr);\n    } else {\n      this.builder.push_unresolved(BC.JUMP_IF_TRUE, shortCircuitAddr);\n    }\n\n    // The following only executes in case of no short-circuit\n\n    // Compile expression on the right\n    this.compileExpression(e.right);\n\n    if (isAnd) {\n      this.builder.push(BC.LOGIC_AND_VALUES)\n    } else {\n      this.builder.push(BC.LOGIC_OR_VALUES)\n    }\n\n    // Address to jump to in case of short-circuiting (skipping evaluating the\n    // right expression)\n    this.builder.define_address(shortCircuitAddr);\n  }\n\n  private compileListExpression(e: ListExpr) {\n    const elementCount = e.elements.length;\n    // Compile all elements\n    for (let elementExpr of e.elements) {\n      this.compileExpression(elementExpr);\n    }\n    // Issue opcode to build list\n    this.builder.push(BC.BUILD_LIST, elementCount);\n  }\n\n  private compileMapExpression(e: MapExpr) {    \n    const elementCount = e.elements.size;\n    // Compile all key-value pairs\n    for (let [keyExpr, valueExpr] of e.elements) {\n      this.compileExpression(keyExpr);\n      this.compileExpression(valueExpr);\n    }\n    // Issue opcode to build map\n    this.builder.push(BC.BUILD_MAP, elementCount);\n  }\n\n  private compileIndexedAccessExpression(e: IndexedAccessExpr, context: ECContext) {\n    this.compileExpression(e.accessTarget);\n    this.compileExpression(e.indexExpr);\n    // If the indexed-access takes place as a statement INVOKE the function\n    // Otherwise return the function value\n    let isFuncRef: boolean;\n    if (context.isStatement) {\n      isFuncRef = false;\n    } else {\n      isFuncRef = true;\n    }\n    this.builder.push(BC.INDEXED_ACCESS, isFuncRef);\n  }\n\n  private compileDotAccessExpression(e: DotAccessExpr, context: ECContext) {\n    if (e.accessTarget instanceof SuperExpr) {\n      this.builder.push(BC.SUPER_DOT_ACCESS, e.property.value, context.isFuncRef);  \n    } else {\n      this.compileExpression(e.accessTarget);\n      this.builder.push(BC.DOT_ACCESS, e.property.value, context.isFuncRef);\n    }\n  }\n\n  private compileFuncRefExpression(e: FunctionRefExpr, context: ECContext) {\n    const functionReferenceContext = context.enterFunctionReference();\n    // Compile the reference-target expression, but in the context\n    // of a function reference.\n    // This should affect evaluation of single identifiers,\n    // indexed-access and dot-access. If the result of these operations\n    // is a bound-function, then it should be left in the stack as a value\n    // and not immediately evaluated. Anything else can be evaluated as is.\n    this.compileExpression(e.refTarget, functionReferenceContext);\n  }\n\n  private compileListSlicingExpression(e: ListSlicingExpr) {\n    // Push list expression\n    this.compileExpression(e.listTarget);\n    // Push start value\n    if (e.start) {\n      this.compileExpression(e.start);\n    } else {\n      this.builder.push(BC.PUSH, null);\n    }\n    // Push stop value\n    if (e.stop) {\n      this.compileExpression(e.stop);\n    } else {\n      this.builder.push(BC.PUSH, null);\n    }\n    // Push opcode\n    this.builder.push(BC.SLICE_SEQUENCE);\n  }\n\n  private compileFunctionBodyExpression(e: FunctionBodyExpr) {\n    // Resolve arguments (names / default values)\n    const args = [];\n    for (let arg of e.args) {\n      if (arg.defaultValue) {\n        args.push(new FuncDefArg(arg.name, arg.defaultValue.value));\n      } else {\n        args.push(new FuncDefArg(arg.name, undefined));\n      }\n    }\n    // Compile code\n    const funcCompiler = new Compiler(e.statements);\n    const funcCode = funcCompiler.compileFunctionBody();\n    // Build and push function definition\n    let funcDef = new FuncDef(args, funcCode);\n    this.builder.push(BC.PUSH, funcDef);\n  }\n\n}", "\n// Not to be confused with a runtime-context. This refers to where in the \n// CODE (statically speaking) we are placed. Depending on that, certain \n\nimport { Statement, ExpressionStatement, AssignmentStatement, MathAssignmentStatement, ReturnStatement, IfStatement, WhileStatement, ForStatement, BreakStatement, ContinueStatement, FunctionCallStatement, Expression, IdentifierExpr, IndexedAccessExpr, DotAccessExpr } from \"../parser/parserModel\";\nimport { BC } from \"../vm/bytecodes\";\nimport { AddrLabel, CodeBuilder } from \"./codebuilder\";\nimport { ExpressionCompiler, ExpressionCompilerContext } from \"./expressionCompiler\";\n\n// things are allowed or not.\nexport class CompilerContext {\n\n  parent: CompilerContext | undefined = undefined;\n\n  constructor() {\n    this.parent = undefined;\n  }\n\n  insideWhile(): boolean {\n    if (this.parent) {\n      return this.parent.insideWhile();\n    } else {\n      return false\n    }\n  }\n  insideForLoop(): boolean {\n    if (this.parent) {\n      return this.parent.insideForLoop();\n    } else {\n      return false\n    }  \n  }\n  insideFunctionBody(): boolean {\n    if (this.parent) {\n      return this.parent.insideFunctionBody();\n    } else {\n      return false\n    }  \n  }\n  getForLoopNr(): number {\n    if (this.parent) {\n      return this.parent.getForLoopNr();\n    } else {\n      return 0\n    }\n  }\n}\n\nclass WhileContext extends CompilerContext {\n\n  public readonly startLabel: AddrLabel;\n  public readonly endLabel: AddrLabel;\n\n  constructor(parent: CompilerContext, startLabel: AddrLabel, endLabel: AddrLabel) {\n    super();\n    this.parent = parent;\n    this.startLabel = startLabel;\n    this.endLabel = endLabel;\n  }\n  insideWhile(): boolean {\n    return true;\n  }\n}\n\nclass ForLoopContext extends CompilerContext {\n  constructor(parent: CompilerContext) {\n    super();\n    this.parent = parent;\n  }\n  insideForLoop(): boolean {\n    return true;\n  }\n  getForLoopNr(): number {\n    if (this.parent) {\n      // Increase for-loop-nr by one\n      return 1 + this.parent.getForLoopNr();\n    } else {\n      throw new Error(\"Parent not set\");\n    }\n  }\n}\n\nexport class FunctionBodyContext extends CompilerContext {\n  constructor() {\n    super();\n  }\n  insideFunctionBody(): boolean {\n    return true;\n  }\n}\n\nexport class StatementCompiler {\n\n  constructor(private builder: CodeBuilder, private expressionCompiler: ExpressionCompiler) { }\n\n  compileStatements(statements: Statement[], context: CompilerContext) {\n    for(const s of statements) {\n      this.compileStatement(s, context)\n    } \n  }\n\n  private compileStatement(s: Statement, context: CompilerContext) {\n    if (s instanceof ExpressionStatement) {\n      this.compileExpressionStatement(s);\n    } else if (s instanceof AssignmentStatement) {\n      this.compileAssignmentStatement(s);\n    } else if (s instanceof MathAssignmentStatement) {\n      this.compileMathAssignmentStatement(s);\n    } else if (s instanceof ReturnStatement) {\n      this.compileReturnStatement(s);\n    } else if (s instanceof IfStatement) {\n      this.compileIfStatement(s, context);  \n    } else if (s instanceof WhileStatement) {\n      this.compileWhileStatement(s, context);  \n    } else if (s instanceof ForStatement) {\n      this.compileForLoopStatement(s, context);\n    } else if (s instanceof BreakStatement) {\n      this.compileBreakStatement(s, context);\n    } else if (s instanceof ContinueStatement) {\n      this.compileContinueStatement(s, context);  \n    } else if (s instanceof FunctionCallStatement) {\n      this.compileFunctionCallStatement(s);\n    } else {\n      throw new Error(\"Compilation of statement not implemented: \" + s.description())\n    }\n  }\n\n  private compileExpression(e: Expression) {\n    this.expressionCompiler.compileExpression(e);\n  }\n\n  private compileExpressionStatement(s: ExpressionStatement) {\n    let exprCompilerContext = new ExpressionCompilerContext();\n    // Mark context as \"statement\". Let the expression compiler\n    // know that the expression is an statement-expression.\n    // MiniScript sometimes behaves differently in this case. \n    exprCompilerContext = exprCompilerContext.enterStatement();\n    // Compile expression and discard result\n    this.builder.startMapEntry();    \n    this.expressionCompiler.compileExpression(s.expression, exprCompilerContext);\n    this.builder.endMapEntry(s.location());\n    this.builder.push(BC.POP);\n  }\n\n  private compileAssignmentStatement(s: AssignmentStatement) {\n    this.builder.startMapEntry();\n    // Push bytecodes to complete the assignment\n    const target = s.target;\n    if (target instanceof IdentifierExpr) {\n      this.compileExpression(s.value);\n      this.builder.push(BC.ASSIGN_LOCAL, target.identifier.value);\n    } else if (target instanceof IndexedAccessExpr) {\n      this.compileExpression(target.indexExpr);\n      this.compileExpression(s.value);\n      this.compileExpression(target.accessTarget);\n      this.builder.push(BC.ASSIGN_INDEXED);\n    } else if (target instanceof DotAccessExpr) {\n      // Map to assign into\n      this.compileExpression(s.value);\n      this.compileExpression(target.accessTarget);\n      this.builder.push(BC.DOT_ASSIGN, target.property.value);   \n    } else {\n      throw new Error(\"Assignment target not yet supported: \" + s.target.description());\n    }\n    this.builder.endMapEntry(s.location());\n  }\n\n  private compileMathAssignmentStatement(s: MathAssignmentStatement) {\n    this.builder.startMapEntry();\n    // Push bytecodes to complete the assignment\n    const target = s.target;\n    if (target instanceof IdentifierExpr) {\n      this.compileExpression(s.value);\n      this.builder.push(BC.MATH_ASSIGN_LOCAL, target.identifier.value, s.opToken);\n    } else if (target instanceof IndexedAccessExpr) {\n      this.compileExpression(target.accessTarget);\n      this.compileExpression(target.indexExpr);\n      this.compileExpression(s.value);\n      this.builder.push(BC.MATH_ASSIGN_INDEXED, s.opToken);\n    } else if (target instanceof DotAccessExpr) {\n      this.compileExpression(target.accessTarget);\n      this.compileExpression(s.value);\n      this.builder.push(BC.MATH_DOT_ASSIGN, target.property.value, s.opToken);   \n    } else {\n      throw new Error(\"Assignment target not yet supported: \" + s.target.description());\n    }\n    this.builder.endMapEntry(s.location());\n  }\n\n  private compileReturnStatement(s: ReturnStatement) {\n    this.builder.startMapEntry();\n    if (s.optValue) {\n      this.compileExpression(s.optValue)\n    } else {\n      // Push a \"null\" value if not explicitly returning anything\n      this.builder.push(BC.PUSH, null);\n    }\n    this.builder.push(BC.RETURN);\n    this.builder.endMapEntry(s.location());\n  }\n\n  private compileIfStatement(s: IfStatement, context: CompilerContext) {\n    // End of only the if / then part\n    const endIfThenLabel = this.builder.newLabel();\n    // End of the whole if / then / else-ifs block\n    const endFullIfBlockLabel = this.builder.newLabel();\n    \n    this.builder.startMapEntry();\n    \n    this.compileExpression(s.ifBranch.condition);\n    this.builder.push_unresolved(BC.POP_JUMP_FALSE, endIfThenLabel);\n\n    this.builder.endMapEntry(s.ifBranch.condition.location());\n\n    this.compileStatements(s.ifBranch.statements, context);\n    this.builder.push_unresolved(BC.JUMP, endFullIfBlockLabel);\n    this.builder.define_address(endIfThenLabel);\n\n    for (let elseIf of s.elseIfs) {\n      let elseIfLabel = this.builder.newLabel();\n      this.builder.startMapEntry();\n      this.compileExpression(elseIf.condition)\n      this.builder.push_unresolved(BC.POP_JUMP_FALSE, elseIfLabel)\n      this.builder.endMapEntry(elseIf.condition.location());\n\n      this.compileStatements(elseIf.statements, context);\n      this.builder.push_unresolved(BC.JUMP, endFullIfBlockLabel);\n      this.builder.define_address(elseIfLabel);\n    }\n\n    if (s.elseBranch.length > 0) {\n      this.compileStatements(s.elseBranch, context);\n    }\n\n    this.builder.define_address(endFullIfBlockLabel);\n  }\n\n  private compileWhileStatement(s: WhileStatement, context: CompilerContext) {\n    const startWhileLabel = this.builder.newLabel();\n    const endWhileLabel = this.builder.newLabel();\n\n    // While header\n    this.builder.startMapEntry();\n    this.builder.define_address(startWhileLabel);\n    this.compileExpression(s.condition);\n    this.builder.push_unresolved(BC.POP_JUMP_FALSE, endWhileLabel);\n    this.builder.endMapEntry(s.condition.location());\n\n    // Statements\n    const whileContext = new WhileContext(context, startWhileLabel, endWhileLabel);\n    this.compileStatements(s.statements, whileContext);\n\n    // Jump to start (loop)\n    this.builder.push_unresolved(BC.JUMP, startWhileLabel);\n\n    // Define end\n    this.builder.define_address(endWhileLabel);\n  }\n\n  private compileForLoopStatement(s: ForStatement, context: CompilerContext) {\n    const startForLoopLabel = this.builder.newLabel();\n    const endForLoopLabel = this.builder.newLabel();\n    const forLoopContext = new ForLoopContext(context);\n    const forLoopNr = forLoopContext.getForLoopNr();\n\n    // For loop DEFINITION (happens only once)\n\n    // Push for-loop local variable name\n    this.builder.push(BC.PUSH, s.loopVar.value);\n    // Push values to iterate over\n    this.compileExpression(s.rangeExpr);\n    // Push end-address (for \"break\" or when over)\n    this.builder.push_unresolved(BC.PUSH, endForLoopLabel);\n    // Push \"header\" address, for new iterations or continues\n    this.builder.push_unresolved(BC.PUSH, startForLoopLabel);\n    // Push opcode to create loop\n    this.builder.push(BC.CREATE_FOR_LOOP, forLoopNr);\n\n    // For header (control jumps here on every iteration)\n    this.builder.startMapEntry();\n    this.builder.define_address(startForLoopLabel);\n    this.builder.push(BC.ITERATE_FOR_LOOP, forLoopNr);\n    this.builder.endMapEntry(s.headerLocation);\n\n    // Statements\n    this.compileStatements(s.statements, forLoopContext);\n\n    // Jump to header (to iterate again)\n    this.builder.push_unresolved(BC.JUMP, startForLoopLabel);\n\n    // Define end\n    this.builder.define_address(endForLoopLabel);\n  }\n\n  private compileBreakStatement(s: BreakStatement, context: CompilerContext) {\n    if (context.insideWhile() && context instanceof WhileContext) {\n      this.builder.startMapEntry();\n      // Jump to end of while\n      this.builder.push_unresolved(BC.JUMP, context.endLabel);\n      this.builder.endMapEntry(s.location());\n    } else if (context.insideForLoop() && context instanceof ForLoopContext) {\n      this.builder.startMapEntry();\n      // Break out of for-loop\n      this.builder.push(BC.BREAK_FOR_LOOP, context.getForLoopNr());\n      this.builder.endMapEntry(s.location());\n    } else {\n      throw new Error(\"break outside while / for loop\");\n    }\n  }\n\n  private compileContinueStatement(s: ContinueStatement, context: CompilerContext) {\n    if (context.insideWhile() && context instanceof WhileContext) {\n      this.builder.startMapEntry();\n      // Jump to start of while\n      this.builder.push_unresolved(BC.JUMP, context.startLabel);\n      this.builder.endMapEntry(s.location());\n    } else if (context.insideForLoop() && context instanceof ForLoopContext) {\n      this.builder.startMapEntry();\n      // Trigger a \"continue\" in for-loop (jump to header address)\n      this.builder.push(BC.CONTINUE_FOR_LOOP, context.getForLoopNr());\n      this.builder.endMapEntry(s.location());\n    } else {\n      throw new Error(\"continue outside while / for loop\");\n    }\n  }\n\n  private compileFunctionCallStatement(s: FunctionCallStatement) {\n    this.builder.startMapEntry();\n    this.expressionCompiler.compileFuncCall(s.callTarget, s.args);\n    this.builder.endMapEntry(s.location());\n    // Discard returned value, since it's a statement\n    this.builder.push(BC.POP);\n  }\n\n}", "import { Statement, ReturnStatement } from \"../parser/parserModel\";\nimport { BC } from \"../vm/bytecodes\";\nimport { Code } from \"../vm/code\";\nimport { FuncDef } from \"../vm/funcdef\";\nimport { CodeBuilder } from \"./codebuilder\";\nimport { ExpressionCompiler } from \"./expressionCompiler\";\nimport { CompilerContext, FunctionBodyContext, StatementCompiler } from \"./statementCompiler\";\n\nexport class Compiler {\n  \n  private readonly builder: CodeBuilder;\n  private readonly statementCompiler: StatementCompiler;\n  private readonly expressionCompiler: ExpressionCompiler;\n\n  constructor(private statements: Statement[], srcFile?: string) {\n    this.builder = new CodeBuilder(srcFile);\n    this.expressionCompiler = new ExpressionCompiler(this.builder);\n    this.statementCompiler = new StatementCompiler(this.builder, this.expressionCompiler);\n  }\n  \n  compile(): Code {\n    const context = new CompilerContext();\n    this.statementCompiler.compileStatements(this.statements, context);\n    //this.builder.push(BC.EXIT);\n    const prg = this.builder.build();\n    return prg\n  }\n\n  compileModuleInvocation(moduleName: string): Code {\n    // Compile statements as if inside a function\n    const context = new FunctionBodyContext();\n    this.statementCompiler.compileStatements(this.statements, context);\n    // Emit a last \"return locals\"\n    this.emitLastReturn(true);\n    const moduleStatements = this.builder.build();\n    // Build an anonymous function-body containing those statements\n    const moduleLoaderBuilder = new CodeBuilder(`${moduleName} (loader)`);\n    const moduleBodyFn = new FuncDef([], moduleStatements);\n    // Push the function-body as a value into the stack\n    moduleLoaderBuilder.push(BC.PUSH, moduleBodyFn);\n    // Execute the function-body pushed the step before.\n    // As a result of this, the stack should have the \"locals\"\n    moduleLoaderBuilder.push(BC.FUNCREF_CALL, 0);\n    // Assign the module-locals to an identifier named after the module\n    // in the current context.\n    moduleLoaderBuilder.push(BC.ASSIGN_LOCAL, moduleName);\n    // Build this and return\n    const runnerCode = moduleLoaderBuilder.build();\n    return runnerCode;\n  }\n\n  compileFunctionBody(): Code {\n    const context = new FunctionBodyContext();\n    this.statementCompiler.compileStatements(this.statements, context);\n    this.emitLastReturn(false);\n    const prg = this.builder.build();\n    return prg\n  } \n\n  private emitLastReturn(inModuleBody: boolean) {\n    // Emit a last \"return null\" statement if the compiled statements\n    // do not end with a \"return XXX\"\n    let emitReturn = true;\n    if (this.statements.length > 0) {\n      const lastStatement = this.statements[this.statements.length - 1];\n      if (lastStatement instanceof ReturnStatement) {\n        emitReturn = false;\n      }\n    }\n    if (emitReturn) {\n      if (inModuleBody) {\n        this.builder.push(BC.EVAL_ID, \"locals\");\n        this.builder.push(BC.RETURN);\n      } else {\n        // Signialize that this is a \"does not return anything\" null \n        // by returning undefined.\n        this.builder.push(BC.PUSH, undefined);\n        this.builder.push(BC.RETURN);\n      }\n    }\n  }\n\n}", "import { Processor } from \"../vm/processor\";\nimport { SourceMapEntry } from \"../vm/sourcemap\";\nimport { Debugger } from \"./debugger\";\n\nexport abstract class Stepper {\n\n  initialCallStackDepth: number;\n  initialEntry: SourceMapEntry | null;\n\n  constructor(protected readonly id: number, protected readonly d: Debugger, protected readonly vm: Processor) {\n    this.initialCallStackDepth = this.vm.savedFrames.count();\n    this.initialEntry = this.d.getCurrentSrcMapEntry();\n  }\n\n  abstract step(): void;\n\n  scheduleNext() {\n    setTimeout(() => {\n      this.step();\n    }, 0)\n  }\n\n  resumeFromSuspension() {\n    this.scheduleNext();\n  }\n\n  finish() {\n    // Advance until we are at a concrete srcMap entry\n    this.d.stepUntilSrcMapEntryFound();\n    this.d.notifyChanges();\n    this.d.removeStepper(this.id);\n  }\n}\n\nexport class StepOverStepper extends Stepper {\n\n  initialCallStackDepth: number;\n  initialEntry: SourceMapEntry | null;\n\n  constructor(id: number, d: Debugger, vm: Processor) {\n    super(id, d, vm);\n    this.initialCallStackDepth = vm.savedFrames.count();\n    this.initialEntry = d.getCurrentSrcMapEntry();\n  }\n\n  step() {\n\n    if (this.vm.isSuspended()) {\n      // Just return, the debugger will be notified\n      // when the Promise is resolved and continue \n      // the process here.\n      return;\n    }\n\n    this.vm.runOneCycle();\n    \n    // If we went \"deeper\" into the call stack, execute cycles until we are \"back\".\n    // Only then compare source locations.\n    const currentCallStackDepth = this.vm.savedFrames.count();\n    if (currentCallStackDepth > this.initialCallStackDepth) {\n      this.scheduleNext();\n      return;\n    }\n\n    if (this.vm.isFinished()) {\n      this.finish();\n      return;\n    }\n\n    const currentEntry = this.d.getCurrentSrcMapEntry();\n    let sourceLocationChanged = false;\n\n    if (this.initialEntry === null && currentEntry !== null) {\n      sourceLocationChanged = true;\n    } else if(this.initialEntry !== null && currentEntry === null) {\n      // Skipping until non-null current-entry is found\n      this.scheduleNext();\n      return;\n    } else if(this.initialEntry !== null && currentEntry !== null) {\n      const initialLoc = this.initialEntry.srcLoc.start.row;\n      const currentLoc = currentEntry.srcLoc.start.row;\n      sourceLocationChanged = (initialLoc !== currentLoc);\n    }\n\n    if (sourceLocationChanged) {\n      this.finish();\n      return;\n    }\n\n    // Otherwise ...\n    this.scheduleNext();\n  }\n\n}\n\nexport class StepIntoStepper extends Stepper {\n\n  initialCount: number;\n\n  constructor(id: number, d: Debugger, vm: Processor) {\n    super(id, d, vm);\n    this.initialCount = this.vm.savedFrames.count();\n  }\n\n  step() {\n    if (this.vm.isSuspended()) {\n      // Just return, the debugger will be notified\n      // when the Promise is resolved and continue \n      // the process here.\n      return;\n    }\n\n    const nextOpIsCall = this.vm.couldResultInCall();\n    this.vm.runOneCycle();\n\n    const currentCount = this.vm.savedFrames.count();\n    if (currentCount > this.initialCount) {\n      // A function call has been made, since a new frame was pushed\n      this.finish();\n      return;\n    } else if (nextOpIsCall && currentCount == this.initialCount) {\n      // A call should have been made, but was not.\n      // Probably because a primitive was called.\n      // Abandon the whole attempt.\n      if (!this.vm.isSuspended()) {\n        // Only finish if the call did not result in an intrinsic\n        // call, which suspended the VM.\n        // In that case we need to continue after that.\n        this.finish();\n      } \n      return;\n    }\n    if (this.vm.isFinished()) {\n      this.finish();\n      return;\n    }\n\n    // Otherwise ...\n    this.scheduleNext();\n  }\n\n}\n\nexport class StepOutStepper extends Stepper {\n\n  initialCount: number;\n\n  constructor(id: number, d: Debugger, vm: Processor) {\n    super(id, d, vm);\n    this.initialCount = this.vm.savedFrames.count();\n  }\n\n  step() {\n    if (this.vm.isSuspended()) {\n      // Just return, the debugger will be notified\n      // when the Promise is resolved and continue \n      // the process here.\n      return;\n    }\n\n    this.vm.runOneCycle();\n\n    const currentCount = this.vm.savedFrames.count();\n\n    if (currentCount < this.initialCount) {\n      // A return from a call has been made, since a frame was removed\n      this.finish();\n      return;\n    }\n    \n    if (this.vm.isFinished()) {\n      this.finish();\n      return;\n    }\n\n    // Otherwise ...\n    this.scheduleNext();\n  }\n\n}", "import { Code } from \"../vm/code\";\nimport { Processor } from \"../vm/processor\";\nimport { SourceMapEntry } from \"../vm/sourcemap\";\nimport { StepIntoStepper, StepOutStepper, StepOverStepper, Stepper } from \"./steppers\";\n\nexport class Debugger {\n\n  private nextStepperId: number = 1;\n  private steppers: Map<number, Stepper>;\n\n  constructor(private vm: Processor) {\n    this.vm.setRunAfterSuspended(false);\n    this.steppers = new Map();\n    vm.onResumingExecution = () => {\n      // Let the steppers continue\n      const steppers = this.steppers.values();\n      for (let s of steppers) {\n        s.resumeFromSuspension();\n      }\n    }\n  }\n\n  onSrcChange = () => {};\n  onFinished = () => {};\n\n  get compiledCode(): Code {\n    return this.vm.code;\n  }\n\n  // Move to first instruction\n  start() {\n    // Nothing to do? Vm should be initialized?\n    this.notifyChanges();\n  }\n\n  stop() {\n    this.vm.stopRunning();\n  }\n\n  getCurrentSourceLocation(): [string?,  number?] {\n    const fileName = this.vm.getCurrentSrcFileName();\n    const lineNr = this.vm.getCurrentSrcLineNr();\n    return [fileName, lineNr];\n  }\n\n  getCurrentSrcMapEntry(): SourceMapEntry | null {\n    return this._srcMap().findEntry(this.vm.ip);\n  }\n\n  // True if the current location can be stepped into \n  // (because it contains at least one call)\n  canStepIn(): boolean {\n    const entry = this.getCurrentSrcMapEntry();\n    if (entry !== null) {\n      return entry.isCall;\n    } else {\n      return false;\n    }\n  }\n\n  canStepOut(): boolean {\n    return this.vm.savedFrames.count() > 0;\n  }\n\n  newStepOverStepper(): StepOverStepper {\n    const stepper = new StepOverStepper(this.nextStepperId, this, this.vm);\n    this.steppers.set(this.nextStepperId, stepper);\n    this.nextStepperId++;\n    return stepper;\n  }\n\n  newStepIntoStepper(): StepIntoStepper {\n    const stepper = new StepIntoStepper(this.nextStepperId, this, this.vm);\n    this.steppers.set(this.nextStepperId, stepper);\n    this.nextStepperId++;\n    return stepper;\n  }\n\n  newStepOutStepper(): StepOutStepper {\n    const stepper = new StepOutStepper(this.nextStepperId, this, this.vm);\n    this.steppers.set(this.nextStepperId, stepper);\n    this.nextStepperId++;\n    return stepper;\n  }\n\n  removeStepper(id: number) {\n    this.steppers.delete(id);\n  }\n\n  stepOver() {\n    const stepper = this.newStepOverStepper();\n    stepper.scheduleNext();\n  }\n\n  stepInto() {\n    const stepper = this.newStepIntoStepper();\n    stepper.scheduleNext();\n  }\n\n  stepOut() {\n    const stepper = this.newStepOutStepper();\n    stepper.scheduleNext();\n  }\n\n  stepUntilSrcMapEntryFound() {\n    let currentEntry = this.getCurrentSrcMapEntry();\n    while (currentEntry === null && this.vm.isRunning()) {\n      this.vm.runOneCycle();\n      currentEntry = this.getCurrentSrcMapEntry();\n    }\n  }\n\n  notifyChanges() {\n    this.highlightSource();\n    this.notifyFinished();\n  }\n\n  highlightSource() {\n    const sme = this.getCurrentSrcMapEntry()\n    if (sme !== null) {\n      this.onSrcChange();\n    }\n  }\n\n  notifyFinished() {\n    if (this.vm.isFinished()) {\n      this.onFinished();\n    }\n  }\n\n  _srcMap() {\n    return this.vm.code.srcMap;\n  }\n\n  _srcMapEntry(): SourceMapEntry | null {\n    return this._srcMap().findEntry(this.vm.ip);\n  }\n\n}", "import { hashCode, equals } from \"../vm/runtime\";\n\nexport type MapEntry = {\n  key: any,\n  value: any\n};\n\nexport class HashMap {\n\n  private _size: number = 0;\n  private buckets: Map<any, Array<MapEntry>>;\n\n  constructor() {\n    this.buckets = new Map<any, Array<MapEntry>>();\n  }\n\n  size(): number {\n    return this._size;\n  }\n\n  set(key: any, value: any) {    \n    if (value === undefined) {\n      this.delete(key);\n      return;\n    }\n\n    // Locate bucket\n    const _hashCode = hashCode(key);\n    let bucket = this.buckets.get(_hashCode);\n    if (!bucket) {\n      bucket = new Array<MapEntry>();\n      this.buckets.set(_hashCode, bucket);\n    }\n\n    let entryFound = false;\n    // Look for existing entry in bucket\n    for (let i = 0; i < bucket.length; i++) {\n      // Map already contains something under given key.\n      // Overwrite with new value.\n      if (equals(bucket[i].key, key)) {\n          bucket[i].value = value;\n          entryFound = true;\n          break;\n      }\n    }\n    // If no existing entry, add new\n    if (!entryFound) {\n      bucket.push({ key: key, value: value });\n      this._size += 1;\n    }\n\n  }\n\n  get(key: any): any | undefined {\n    const _hashCode = hashCode(key);\n    const bucket = this.buckets.get(_hashCode);\n    if (!bucket) {\n        return undefined;\n    }\n    for (let i = 0; i < bucket.length; ++i) {\n      if (equals(bucket[i].key, key)) {\n        return bucket[i].value;\n      }\n    }\n    return undefined;\n  }\n\n  has(key: any): any {\n    const _hashCode = hashCode(key);\n    const bucket = this.buckets.get(_hashCode);\n    if (!bucket) {\n        return false;\n    }\n    for (let i = 0; i < bucket.length; ++i) {\n      if (equals(bucket[i].key, key)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  delete(key: any) {\n    const _hashCode = hashCode(key);\n    const bucket = this.buckets.get(_hashCode);\n    if (!bucket) {\n        return;\n    }\n    let bucketIdx = -1;\n    for (let i = 0; i < bucket.length; ++i) {\n      if (equals(bucket[i].key, key)) {\n        bucketIdx = i;\n        break;\n      }\n    }\n    if (bucketIdx >= 0) {\n      bucket.splice(bucketIdx, 1);\n      this._size -= 1;\n    }\n    if (bucket.length == 0) {\n      this.buckets.delete(_hashCode);\n    }\n  }\n\n  keys(): Array<any> {\n    const keys = new Array();\n    for (let bucket of this.buckets.values()) {\n      for (let i = 0; i < bucket.length; ++i) {\n        keys.push(bucket[i].key);\n      }\n    }\n    return keys;\n  }\n\n  values(): Array<any> {\n    const values = new Array();\n    for (let bucket of this.buckets.values()) {\n      for (let i = 0; i < bucket.length; ++i) {\n        values.push(bucket[i].value);\n      }\n    }\n    return values;\n  }\n\n  // TODO: implement returning an iterator to avoid\n  // unnecessary traversing\n    entries(): Array<MapEntry> {\n    const entries = new Array<MapEntry>();\n    for (let bucket of this.buckets.values()) {\n      for (let i = 0; i < bucket.length; ++i) {\n        entries.push(bucket[i]);\n      }\n    }\n    return entries;\n  }\n\n  toMap(depth:number = 16): Map<any,any> {\n    if (depth < 0) {\n      return new Map();\n    }\n    const result = new Map<any,any>();\n    for (let bucket of this.buckets.values()) {\n      for (let i = 0; i < bucket.length; ++i) {\n        const entry = bucket[i];\n        let key = entry.key;\n        let value = entry.value;\n        if (key instanceof HashMap) {\n          key = key.toMap(depth - 1);\n        }\n        if (value instanceof HashMap) {\n          value = value.toMap(depth - 1);\n        }\n        result.set(key, value);\n      }\n    }\n    return result;\n  }\n\n}", "// \"Alea\" random number generator\nexport function newRandomGenerator(seed: number|string|undefined = undefined) {\n  if(seed === undefined) {\n    seed = +new Date() + Math.random();\n  }\n  function Mash() {\n      let n = 4022871197;\n      return function(r: string) {\n          for(let t, s, u = 0, e = 0.02519603282416938; u < r.length; u++) {\n            s = r.charCodeAt(u);\n            let f = (e * (n += s) - (n*e|0));\n            n = 4294967296 * ((t = f * (e*n|0)) - (t|0)) + (t|0);\n          }\n          return (n|0) * 2.3283064365386963e-10;\n      }\n  }\n  return function() {\n      let m = Mash();\n      let a = m(\" \");\n      let b = m(\" \");\n      let c = m(\" \");\n      let x = 1;\n      const seedStr = seed.toString();\n      a -= m(seedStr);\n      b -= m(seedStr);\n      c -= m(seedStr);\n      a < 0 && a++;\n      b < 0 && b++;\n      c < 0 && c++;\n      return function() {\n          var y = x * 2.3283064365386963e-10 + a * 2091639; a = b, b = c;\n          return c = y - (x = y|0);\n      };\n  }();\n}", "export class Stack<T> {\n\n  lastValueUndefined: boolean;\n  elements: T[];\n\n  constructor() {\n    this.elements = [];\n    this.lastValueUndefined = false;\n  }\n\n  clear() {\n    this.elements = [];\n  }\n\n  push(element: T) {\n    if (element === undefined) {\n      // This happens when a function returns no value.\n      // Store null. It should be popped in the next cycle.\n      this.elements.push(null as T);\n      this.lastValueUndefined = true;\n    } else {\n      this.elements.push(element)\n      this.lastValueUndefined = false;\n    }\n  }\n\n  pop(): T {\n    let result = this.elements.pop();\n    if (result === undefined) {\n      throw new Error(\"Stack is empty\")\n    } else {\n      return result;\n    }\n  }\n\n  // Pop N values. Return them in original order (as they were pushed).\n  popN(count: number): any[] {\n    const result = [];\n    for (let i = 0; i < count; i++) {\n      result.unshift(this.pop());\n    }\n    return result;\n  }\n\n  // Return top-most value without removing it\n  peek(): T {\n    if (this.elements.length == 0) {\n      throw new Error(\"Stack is empty\")\n    } else {\n      // Return last element\n      return this.elements[this.elements.length - 1];\n    }\n  }\n\n  count(): number {\n    return this.elements.length;\n  }\n\n}", "import { MSMap } from \"./msmap\";\nimport { Processor } from \"./processor\";\nimport { RuntimeError } from \"./runtime\";\n\nexport class Context {\n\n  private readonly locals: MSMap;\n  private readonly parent: Context | null;\n  private readonly vm: Processor;\n\n  constructor(vm: Processor, parent: Context | null = null) {\n    this.locals = new MSMap(vm);\n    this.parent = parent;\n    this.vm = vm;\n  }\n\n  setLocal(identifier: string, value: any) {\n    if (identifier === \"globals\") {\n      throw new RuntimeError(`Can't assign to globals`);\n    } else if (identifier === \"locals\") {\n      throw new RuntimeError(`Can't assign to locals`);\n    }\n    this.locals.set(identifier, value);\n  }\n\n  getOpt(identifier: string): any | undefined {\n    if (this.locals.has(identifier)) {\n      const localValue = this.locals.get(identifier);\n      return localValue;\n    } else if (identifier === \"globals\") {\n      return this.vm.globalContext.locals;\n    } else if (identifier === \"locals\") {\n      return this.locals;\n    } else if (identifier === \"outer\") {\n      return this.getOuterLocals();\n    } else if (this.parent) {\n      return this.parent.getOpt(identifier);\n    } else {\n      return this.vm.resolveIntrinsic(identifier);\n    }\n  }\n\n  // Normally the parent context inside a function.\n  // At the global scope outer == globals.\n  private getOuterLocals(): MSMap {\n    let outerContext;\n    if (this.parent) {\n      outerContext = this.parent;\n    } else {\n      outerContext = this.vm.globalContext;\n    }\n    return outerContext.locals;\n  }\n\n}\n", "import { MSMap, MSMapFactory } from \"./msmap\";\n\nexport class ForLoop {\n  public readonly startAddr: number;\n  public readonly endAddr: number;\n  public readonly localVarName: string;\n  public readonly values: any;\n  public readonly mapObj: MSMap | null;\n  private valueIdx: number;\n  private valueCount: number;\n\n  constructor(private mapFactory: MSMapFactory, startAddr: number, endAddr: number, localVarName: string, values: any) {\n    this.startAddr = startAddr;\n    this.endAddr = endAddr;\n    this.localVarName = localVarName;\n    this.valueIdx = 0;\n    if (values instanceof Array) {\n      this.values = values;\n      this.mapObj = null;\n    } else if (values instanceof MSMap) {\n      this.values = Array.from(values.keys());\n      this.mapObj = values;\n    } else if (typeof values === \"string\") {\n      this.values = Array.from(values);\n      this.mapObj = null;\n    } else {\n      this.values = [];\n      this.mapObj = null;\n    }\n    this.valueCount = this.values.length;\n  }\n\n  isOver(): boolean {\n    return this.valueIdx >= this.valueCount;\n  }\n\n  // Gets current value and increases counter\n  iterate(): any {\n    let currentValue: any;\n    if (this.mapObj) {\n      const currentKey = this.values[this.valueIdx];\n      const currentMapValue = this.mapObj.getOpt(currentKey);\n      currentValue = this.mapFactory.newMap();\n      currentValue.set(\"key\", currentKey);\n      currentValue.set(\"value\", currentMapValue);\n    } else {\n      currentValue = this.values[this.valueIdx];\n    }\n    this.valueIdx++;\n    return currentValue;\n  }\n\n}\n\n// Used to store currently-running for-loops in the current\n// context.\nexport class ForLoopContext {\n\n  private readonly forLoops: {[id: number]: ForLoop};\n\n  constructor() {\n    this.forLoops = {};\n  }\n\n  registerForLoop(forLoopNr: number, forLoop: ForLoop) {\n    this.forLoops[forLoopNr] = forLoop;\n  }\n\n  getForLoop(forLoopNr: number): ForLoop {\n    return this.forLoops[forLoopNr];\n  }\n  \n  deleteForLoop(forLoopNr: number) {\n    delete this.forLoops[forLoopNr];\n  }\n\n}", "import { Code } from \"./code\";\nimport { Context } from \"./context\";\nimport { ForLoopContext } from \"./forloop\";\n\nexport class Frame {\n  public readonly ip: number;\n  public readonly code: Code;\n  public readonly context: Context;\n  public readonly forLoopContext: ForLoopContext;\n\n  constructor(code: Code, ip: number, frameContext: Context, forLoopContext: ForLoopContext) {\n    this.code = code;\n    this.ip = ip;\n    this.context = frameContext;\n    this.forLoopContext = forLoopContext;\n  }\n}", "import { Stack } from \"../lib/stack\";\nimport { Code } from \"./code\";\nimport { ForLoopContext } from \"./forloop\";\nimport { Frame } from \"./frame\";\nimport { Processor } from \"./processor\";\n\nexport class ProcessorState {\n\n  ip: number;\n  opStack: Stack<any>;\n  code: Code;\n  forLoopContext: ForLoopContext;\n  savedFrames: Stack<Frame>;\n  cycleCount: number;\n  onResumingExecution: () => void;\n  onFinished: () => void;\n  suspended: boolean;\n\n  constructor(vm: Processor) {\n    this.code = vm.code;\n    this.ip = vm.ip;\n    this.suspended = vm.suspended;\n    this.forLoopContext = vm.forLoopContext;\n    this.savedFrames = vm.savedFrames;\n    this.opStack = vm.opStack;\n    this.cycleCount = vm.cycleCount;\n    this.onResumingExecution = vm.onResumingExecution;\n    this.onFinished = vm.onFinished;\n  }\n\n  static resetState(vm: Processor) {\n    vm.ip = 0;\n    vm.suspended = false;\n    vm.forLoopContext = new ForLoopContext();\n    vm.savedFrames = new Stack();\n    vm.opStack = new Stack();\n    vm.cycleCount = 0;\n    vm.onResumingExecution = () => {};\n    vm.onFinished = () => {};  \n  }\n\n  restoreState(vm: Processor) {\n    vm.code = this.code;\n    vm.ip = this.ip;\n    vm.suspended = this.suspended;\n    vm.forLoopContext = this.forLoopContext;\n    vm.savedFrames = this.savedFrames;\n    vm.opStack = this.opStack;\n    vm.cycleCount = this.cycleCount;\n    vm.onResumingExecution = this.onResumingExecution;\n    vm.onFinished = this.onFinished;   \n  }\n\n}", "\nexport function parseSignature(functionSignature: string): [string, string[], any[]] {\n  let fnName: string = functionSignature;\n  let argNames: string[] = [];\n  let defaultValues: any[] = [];\n\n  // If the signature is not of a function without parameters\n  // parse the parameters and possible default values.\n  if (functionSignature.indexOf(\"(\") > 0) {\n    const nameArgsParts = functionSignature.split(\"(\");\n    fnName = nameArgsParts[0].trim();\n    const argsParts = nameArgsParts[1].slice(0,-1).split(\",\");\n    for (let part of argsParts) {\n      const argValueParts = part.split(\"=\");\n      const argName = argValueParts[0].trim();\n      let defaultValue: any = undefined;\n      if (argValueParts.length > 1) {\n        const defaultValueStr = argValueParts[1].trim();\n        // Now parse ... \n        if (defaultValueStr === \"null\") {\n          defaultValue = null;\n        } else if (defaultValueStr.startsWith(\"\\\"\")) {\n          defaultValue = defaultValueStr.slice(1,-1);\n        } else if (defaultValueStr.includes(\".\")) {\n          defaultValue = parseFloat(defaultValueStr);\n        } else {\n          defaultValue = parseInt(defaultValueStr);\n        }\n      }\n      argNames.push(argName);\n      defaultValues.push(defaultValue);\n    }\n  }\n\n  return [fnName, argNames, defaultValues];\n}", "import { newRandomGenerator } from \"../lib/random\";\nimport { Stack } from \"../lib/stack\";\nimport { TokenType } from \"../parser/tokenTypes\";\nimport { BC, hasCallPotential } from \"./bytecodes\";\nimport { Code } from \"./code\";\nimport { Context } from \"./context\";\nimport { ForLoop, ForLoopContext } from \"./forloop\";\nimport { Frame } from \"./frame\";\nimport { FuncDefArg, FuncDef, BoundFunction } from \"./funcdef\";\nimport { MSMap, MSMapFactory } from \"./msmap\";\nimport { ProcessorState } from \"./processorState\";\nimport { RuntimeError, computeAccessIndex, computeMathAssignValue, slice, chainedComparison, equals, isaEquals, greaterEquals, greaterThan, lessEquals, lessThan, toBooleanNr, add, subtract, multiply, divide, power, modulus, logic_and, logic_or } from \"./runtime\";\nimport { parseSignature } from \"./signatureParser\";\n\nexport type TxtCallback = (txt: string) => any;\n\nexport const MAX_ISA_RECURSION_DEPTH = 16;\n\nexport enum RunMode {\n  STANDARD_MODE,\n  DEBUG_MODE,\n  COOP_MODE,\n}\n\nexport class Processor implements MSMapFactory {\n\n  // Special value to indicate that a call should be aborted.\n  // Intrinsics may return this.\n  static abortCallValue: Object = {};\n\n  // The instruction pointer. Points to the position in code.\n  ip: number;\n  // The operation stack. Used for calculations and passing values.\n  opStack: Stack<any>;\n  // The code to execute.\n  code: Code;\n  // The current context.\n  context: Context;\n  // The current for-loop context.\n  forLoopContext: ForLoopContext;\n  // The global context.\n  globalContext: Context;\n  // Intrinsics stored here\n  intrinsicsMap: Map<string, BoundFunction>;\n  // Core-types\n  listCoreType: MSMap;\n  mapCoreType: MSMap;\n  stringCoreType: MSMap;\n  numberCoreType: MSMap;\n  funcRefCoreType: MSMap;\n  // Stack of frames (waiting to be returned to; not the current one).\n  savedFrames: Stack<Frame>;\n  // Counter used to return control back to host.\n  cycleCount: number;\n  // Max count of cycles per \"burst\"\n  maxCount: number = 73681;\n  // Callback when execution resumes after being suspended\n  onResumingExecution: () => void;\n  // Callback when processing done\n  onFinished: () => void;\n  // Random number generator\n  rndGenerator: Function;\n  // Timestamp when a script starts executing. Used in `time`.\n  executionStartTime: number;\n  // Flag to know when execution is suspended (e.g. waiting on a promise)\n  suspended: boolean = false;\n  // Flag to know when execution is completely halted (e.g. due to error or `exit`)\n  halted: boolean = false;\n  // Maximum depth of call stack\n  maxCallStackDepth: number = 2000;\n  // If true, continue running after being suspended.\n  // Otherwise do not run. This is the case when running in a \n  // debugging session or cooperatively.\n  runAfterSuspended: boolean;\n  // Last pop/discard value\n  // Useful when evaluating code.\n  lastValue: any;\n\n  constructor(public stdoutCallback: TxtCallback, public stderrCallback: TxtCallback) {\n    this.runAfterSuspended = true;\n    this.code = new Code();\n    this.ip = 0;\n    this.globalContext = new Context(this);\n    this.intrinsicsMap = new Map();\n    this.listCoreType = new MSMap(this);\n    this.mapCoreType = new MSMap(this);\n    this.stringCoreType = new MSMap(this);\n    this.numberCoreType = new MSMap(this);\n    this.funcRefCoreType = new MSMap(this);\n    this.context = this.globalContext;\n    this.forLoopContext = new ForLoopContext();\n    this.savedFrames = new Stack<Frame>();\n    this.opStack = new Stack();\n    this.cycleCount = 0;\n    this.onResumingExecution = () => {};\n    this.onFinished = () => {};\n    this.rndGenerator = newRandomGenerator();\n    this.executionStartTime = 0;\n    this.lastValue = undefined;\n  }\n\n  prepareForRunning(code: Code, context: Context | null = null, globalContext: Context | null = null) {\n    this.code = code;\n    this.ip = 0;\n    this.cycleCount = 0;\n\n    if (globalContext !== null) {\n      this.globalContext = globalContext;\n    }\n\n    if (context === null) {\n      this.context = this.globalContext;\n    } else {\n      this.context = context;\n    }\n\n    this.savedFrames = new Stack<Frame>();\n    this.opStack = new Stack();\n    this.suspended = false;\n    this.halted = false;\n    this.lastValue = undefined;\n  }\n\n  setRunAfterSuspended(flag: boolean) {\n    this.runAfterSuspended = flag;\n  }\n\n  getLastValue(): any {\n    return this.lastValue;\n  }\n\n  run() {\n    this.executionStartTime = performance.now();\n    this.runUntilDone();\n  }\n\n  addIntrinsic(signature: string, impl: Function) {\n    const [fnName, argNames, defaultValues] = parseSignature(signature);\n    const intrinsicFn = this.makeIntrinsicFn(impl, argNames, defaultValues);\n    this.intrinsicsMap.set(fnName, intrinsicFn);\n  }\n\n  addMapIntrinsic(target: MSMap, signature: string, impl: Function) {\n    const [fnName, argNames, defaultValues] = parseSignature(signature);\n    const intrinsicFn = this.makeIntrinsicFn(impl, argNames, defaultValues);\n    target.set(fnName, intrinsicFn);\n  }\n\n  attachExistingIntrinsic(target: MSMap, name: string, boundFunc: BoundFunction) {\n    target.set(name, boundFunc);\n  }\n\n  makeIntrinsicFn(impl: Function, argNames: string[] = [], defaultValues: any[] = []): BoundFunction {\n    const args = [];\n    const argCount = impl.length;\n\n    if (argNames.length !== argCount || argNames.length !== defaultValues.length) {\n      throw new Error(\"Length mismatch in argument count! Check function signature.\");\n    }\n\n    for (let argIdx = 0; argIdx < argCount; argIdx++) {\n      const argName = argNames[argIdx];\n      const defaultValue = defaultValues[argIdx];\n      const arg = new FuncDefArg(argName, defaultValue);\n      args.push(arg);\n    }\n    const funcDef = new FuncDef(args, impl);\n    const boundFunc = new BoundFunction(funcDef, this.globalContext);\n    return boundFunc;\n  }\n\n  newMap(): MSMap {\n    return new MSMap(this);\n  }\n\n  initRandomGenerator(seed: number | string) {\n    this.rndGenerator = newRandomGenerator(seed);\n  }\n\n  random() {\n    return this.rndGenerator();\n  }\n\n  runUntilDone() {\n    this.runSomeCycles();\n    // If not waiting on a Promise or finished\n    // running, schedule the next execution burst.\n    if (this.isRunning()) {\n      setTimeout(() => {\n        this.runUntilDone()\n      }, 0);\n    }\n  }\n\n  runSomeCycles() {\n    if (this.isRunning()) {\n      try {\n        this.executeCycles();\n      } catch(e: any) {\n        this.reportError(e);\n        this.stopRunning();\n        return;\n      }\n    }\n\n    if (this.isFinished()) {\n      // Call after program ends normally\n      this.cleanupAfterRunning();\n    }\n  }\n\n  runOneCycle() {\n    this.executeCycles(1);\n  }\n\n  private reportError(e: any) {\n    if (e instanceof RuntimeError) {\n      e.setSourceLocation(this.getCurrentSrcFileName(), this.getCurrentSrcLineNr());\n      const fileName = this.getCurrentSrcFileName();\n      e.setSourceLocation(fileName, this.getCurrentSrcLineNr());\n    }\n    if (e[\"message\"]) {\n      this.stderrCallback(e.message);\n    }\n    console.error(e);\n  }\n\n  private executeCycles(maxCount: number | null = null) {\n    maxCount = maxCount !== null ? maxCount : this.maxCount;\n    this.cycleCount = 0;\n    while(this.cycleCount < maxCount) {\n      // Finish if IP > len(opcodes)\n      if (this.ip >= this.code.opCodes.length) {\n        break\n      }\n      // Process OpCode\n      switch (this.code.opCodes[this.ip]) {\n        case BC.CALL: {\n          const funcName: string = this.code.arg1[this.ip] as string;\n          const paramCount: number = this.code.arg2[this.ip] as number;\n          // Pop params\n          const params = this.opStack.popN(paramCount);\n\n          const optValue: any | undefined = this.context.getOpt(funcName);\n          if (optValue === undefined) {\n            throw new RuntimeError(`Could not resolve \"${funcName}\"`);\n          }\n          const resolvedFunc: any = optValue;\n          this.performCall(resolvedFunc, params);\n          break;\n        }\n        case BC.FUNCREF_CALL: {\n          const paramCount: number = this.code.arg1[this.ip] as number;\n          // Pop params\n          const params = this.opStack.popN(paramCount);\n          // Pop call target\n          const maybeFuncRef: any = this.opStack.pop();\n          this.performCall(maybeFuncRef, params);\n          break;\n        }\n        case BC.PROPERTY_CALL: {\n          const paramCount: number = this.code.arg1[this.ip] as number;\n          // Pop params\n          const params = this.opStack.popN(paramCount);\n          // Pop property name\n          const methodName = this.opStack.pop();\n          // Pop call target\n          const callTarget = this.opStack.pop();\n\n          let srcMap: MSMap | null = null;\n          let resolvedMethod: any;\n          if (callTarget instanceof MSMap) {\n            [resolvedMethod, srcMap] = callTarget.getWithSource(methodName);\n          } else {\n            // Lookup in base type\n            const baseTypeMap = this.selectCoreTypeMap(callTarget);\n            resolvedMethod = baseTypeMap.get(methodName);\n          }\n          this.performCall(resolvedMethod, params, callTarget, srcMap);\n          break;\n        }\n        case BC.RETURN: {\n          // Pop frame if we are inside of a function call.\n          if (this.savedFrames.count() > 0) {\n            this.popFrame();\n          } else {\n            // Otherwise pop return value\n            this.opStack.pop();\n            // and treat it as a no-op.\n            this.ip += 1;\n          }\n          break;\n        }\n        case BC.ASSIGN_LOCAL: {\n          const varName: string = this.code.arg1[this.ip] as string;\n          const valueToAssign = this.opStack.pop();\n          this.context.setLocal(varName, valueToAssign)\n          this.ip += 1;\n          break;\n        }\n        case BC.ASSIGN_INDEXED: {\n          // pop target\n          const assignTarget = this.opStack.pop();\n          // pop value\n          const valueToAssign = this.opStack.pop();\n          // pop index\n          let index = this.opStack.pop();\n\n          const isString = typeof assignTarget === \"string\";\n          const isList = assignTarget instanceof Array;\n          const isMap = assignTarget instanceof MSMap;\n\n          if (isList) {\n            const effectiveIndex = computeAccessIndex(assignTarget, index);\n            assignTarget[effectiveIndex] = valueToAssign;\n          } else if(isMap) {\n            assignTarget.set(index, valueToAssign);\n          } else if(isString) {\n            throw new RuntimeError(\"Cannot assign to String (immutable)\");\n          } else {\n            throw new RuntimeError(\"Cannot set to element of this type\");\n          }\n\n          this.ip += 1;\n          break;\n        }\n        case BC.DOT_ASSIGN : {\n          const propertyName: string = this.code.arg1[this.ip];\n          const assignTarget = this.opStack.pop();\n          const valueToAssign = this.opStack.pop();\n\n          if (!(assignTarget instanceof MSMap)) {\n            throw new RuntimeError(`Assignment target must be a Map`);\n          }\n\n          assignTarget.set(propertyName, valueToAssign);\n          this.ip += 1;\n          break;         \n        }\n        case BC.MATH_ASSIGN_LOCAL: {\n          const varName: string = this.code.arg1[this.ip] as string;\n          const opTokenType: TokenType = this.code.arg2[this.ip] as TokenType;\n          const operand = this.opStack.pop();\n          // Get existing value\n          const existingValue = this.context.getOpt(varName);\n          if (existingValue !== undefined) {\n            const finalValue = computeMathAssignValue(this, existingValue, opTokenType, operand);\n            this.context.setLocal(varName, finalValue);\n          } else {\n            throw new RuntimeError(`Undefined Local Identifier: '${varName}' is unknown in this context`);\n          }\n          this.ip += 1;\n          break;\n        }\n        case BC.MATH_ASSIGN_INDEXED: {\n          const opTokenType: TokenType = this.code.arg1[this.ip] as TokenType;\n          // pop value\n          const operand = this.opStack.pop();\n          // pop index\n          let index = this.opStack.pop();\n          // pop target\n          const assignTarget = this.opStack.pop();\n\n          const isString = typeof assignTarget === \"string\";\n          const isList = assignTarget instanceof Array;\n          const isMap = assignTarget instanceof MSMap;\n\n          if (isList) {\n            const effectiveIndex = computeAccessIndex(assignTarget, index);\n            const currentValue = assignTarget[effectiveIndex];\n            const finalValue = computeMathAssignValue(this, currentValue, opTokenType, operand);\n            assignTarget[effectiveIndex] = finalValue;\n          } else if(isMap) {\n            const currentValue = assignTarget.get(index);\n            const finalValue = computeMathAssignValue(this, currentValue, opTokenType, operand);\n            assignTarget.set(index, finalValue);\n          } else if(isString) {\n            throw new RuntimeError(\"Cannot assign to String (immutable)\");\n          } else {\n            throw new RuntimeError(\"Cannot set to element of this type\");\n          }\n\n          this.ip += 1;\n          break;\n        }\n        case BC.MATH_DOT_ASSIGN : {\n          const propertyName: string = this.code.arg1[this.ip];\n          const opTokenType: TokenType = this.code.arg2[this.ip] as TokenType;\n          const operand = this.opStack.pop();\n          const assignTarget = this.opStack.pop();\n\n          if (!(assignTarget instanceof MSMap)) {\n            throw new RuntimeError(`Assignment target must be a Map`);\n          }\n\n          const currentValue = assignTarget.get(propertyName);\n          const finalValue = computeMathAssignValue(this, currentValue, opTokenType, operand);\n          assignTarget.set(propertyName, finalValue);\n\n          this.ip += 1;\n          break;         \n        }\n\n        case BC.EVAL_ID: {\n          const identifier = this.code.arg1[this.ip];\n          const isFuncRef: boolean = this.code.arg2[this.ip];\n          const optValue = this.context.getOpt(identifier);\n          if (optValue !== undefined) {\n            this.callOrPushValue(optValue, isFuncRef);\n          } else {\n            throw new RuntimeError(`Undefined Identifier: '${identifier}' is unknown in this context`);\n          }\n          break;\n        }\n        case BC.INDEXED_ACCESS: {\n          const isFuncRef: boolean = this.code.arg1[this.ip];\n          let index = this.opStack.pop();\n          const accessTarget = this.opStack.pop();\n\n          const isString = typeof accessTarget === \"string\";\n          const isList = accessTarget instanceof Array;\n          const isMap = accessTarget instanceof MSMap;\n\n          let value: any;\n          let srcMap: MSMap | null = null;\n\n          if (isList || isString) {\n            if (typeof index === \"number\") {\n              const effectiveIndex = computeAccessIndex(accessTarget, index);\n              value = accessTarget[effectiveIndex];\n            } else if (isList) {\n              [value, srcMap] = this.listCoreType.getWithSource(index);\n            } else if (isString) {\n              [value, srcMap] = this.stringCoreType.getWithSource(index);\n            } else {\n              throw new Error(\"Uncovered case\");\n            }\n          } else if(isMap) {\n            [value, srcMap] = accessTarget.getWithSource(index);\n          } else if (typeof index === \"number\") {\n            throw new RuntimeError(`Null Reference Exception: can't index into null`);\n          } else {\n            throw new RuntimeError(`Type Error (while attempting to look up ${index})`);\n          }\n\n          this.callOrPushValue(value, isFuncRef, accessTarget, srcMap);\n          break;\n        }\n        case BC.DOT_ACCESS : {\n          const propertyName: string = this.code.arg1[this.ip];\n          const isFuncRef: boolean = this.code.arg2[this.ip];\n          const accessTarget = this.opStack.pop();\n\n          let value: any;\n          let srcMap: MSMap;\n          if (accessTarget instanceof MSMap) {\n            [value, srcMap] = accessTarget.getWithSource(propertyName);\n          } else if (accessTarget === null) {\n            throw new RuntimeError(`Type Error (while attempting to look up ${propertyName})`);\n          } else {\n            // Lookup in base type - redefine access-target\n            srcMap = this.selectCoreTypeMap(accessTarget);\n            value = srcMap.get(propertyName);\n          }\n          this.callOrPushValue(value, isFuncRef, accessTarget, srcMap);\n          break;         \n        }\n        case BC.SUPER_DOT_ACCESS : {\n          const propertyName: string = this.code.arg1[this.ip];\n          const isFuncRef: boolean = this.code.arg2[this.ip];\n          const superMap = this.context.getOpt(\"super\");\n          const selfMap = this.context.getOpt(\"self\");\n\n          if (superMap === undefined) {\n            throw new RuntimeError(`Undefined Identifier: 'super' is unknown in this context`);\n          }\n          if (selfMap === undefined) {\n            throw new RuntimeError(`Undefined Identifier: 'self' is unknown in this context`);\n          }\n\n          let value: any;\n          let srcMap: MSMap | null = null;\n          if (superMap instanceof MSMap) {\n            // Use the \"superMap\" only to lookup the value\n            // But later call it with the \"selfMap\"\n            [value, srcMap] = superMap.getWithSource(propertyName);\n            if (value === undefined) {\n              throw new RuntimeError(`Type Error (while attempting to look up ${propertyName})`);\n            }\n          } else if (superMap === null) {\n            throw new RuntimeError(`Type Error (while attempting to look up ${propertyName})`);\n          }\n\n          // Note that the source-map and the super-map might not be\n          // the same. Pass the source-map to compute a new \"super\".\n          this.callOrPushValue(value, isFuncRef, selfMap, srcMap);\n          break;         \n        }\n        case BC.SUPER_DOT_CALL: {\n          const paramCount: number  = this.code.arg1[this.ip];\n\n          const superMap = this.context.getOpt(\"super\");\n          const selfMap = this.context.getOpt(\"self\");\n\n          if (superMap === undefined) {\n            throw new RuntimeError(`Undefined Identifier: 'super' is unknown in this context`);\n          }\n          if (selfMap === undefined) {\n            throw new RuntimeError(`Undefined Identifier: 'self' is unknown in this context`);\n          }\n\n          // Pop params\n          const params = this.opStack.popN(paramCount);\n          // Pop property name\n          const methodName = this.opStack.pop();\n\n          let resolvedMethod: any;\n          let srcMap: MSMap | null = null;\n          if (superMap instanceof MSMap) {\n            // Use the \"superMap\" only to lookup the value\n            // But later call it with the \"selfMap\"\n            [resolvedMethod, srcMap] = superMap.getWithSource(methodName);\n            if (resolvedMethod === undefined) {\n              throw new RuntimeError(`Type Error (while attempting to look up ${methodName})`);\n            }\n          } else if (superMap === null) {\n            throw new RuntimeError(`Type Error (while attempting to look up ${methodName})`);\n          }\n\n          this.performCall(resolvedMethod, params, selfMap, srcMap);\n          break;\n        }\n        case BC.SLICE_SEQUENCE: {\n          // Pop parameters\n          const endIdx = this.opStack.pop();\n          const startIdx = this.opStack.pop();\n          const sliceTarget = this.opStack.pop();\n          const newCollection = slice(this, sliceTarget, startIdx, endIdx);\n          // Push result\n          this.opStack.push(newCollection);\n          this.ip += 1;\n          break;\n        }\n        case BC.CHAINED_COMPARISON: {\n          const pairCount: number = this.code.arg1[this.ip];\n          // Pop operators\n          const operators: string[] = this.opStack.popN(pairCount);\n          // Pop values\n          const values: any[] = this.opStack.popN(pairCount + 1);\n          // Calculate result\n          const result = chainedComparison(values, operators);\n          // Push result\n          this.opStack.push(result);\n          this.ip += 1;\n          break;\n        }\n        case BC.PUSH: {\n          const value: any = this.code.arg1[this.ip];\n          // If it's a FuncDef, store as bound-function with the current context\n          if (value instanceof FuncDef) {\n            const boundFunction = new BoundFunction(value, this.context);\n            this.opStack.push(boundFunction);\n          } else {\n            this.opStack.push(value);\n          }\n          this.ip += 1;\n          break;\n        }\n        case BC.BUILD_LIST: {\n          const elementCount: any = this.code.arg1[this.ip];\n          const elements: any[] = this.opStack.popN(elementCount);\n          this.opStack.push(elements);\n          this.ip += 1;\n          break;\n        }\n        case BC.BUILD_MAP: {\n          const elementCount: any = this.code.arg1[this.ip];\n          const elements: any[] = this.opStack.popN(elementCount * 2);\n          const newMap = new MSMap(this);\n          // Iterate over elements and process key/value\n          // Advance by 2, processing in pairs\n          for (let i = 0; i < elements.length; i += 2) {\n            const mapKey = elements[i];\n            const mapValue = elements[i+1];\n            newMap.set(mapKey, mapValue);\n          }\n          this.opStack.push(newMap);\n          this.ip += 1;\n          break;\n        }\n        case BC.NEW_MAP: {\n          const parentMap = this.opStack.pop();\n          if (!(parentMap instanceof MSMap)) {\n            throw new RuntimeError(`Operator \"new\" can only be used with Maps`);\n          }\n          const newMap = parentMap.newChildMap();\n          this.opStack.push(newMap);                \n          this.ip += 1;\n          break;\n        }\n        case BC.COMPARE_EQ: {\n          const valueB = this.opStack.pop()\n          const valueA = this.opStack.pop()\n          const result = equals(valueA, valueB)\n          this.opStack.push(result)\n          this.ip += 1\n          break;\n        }\n        case BC.COMPARE_NE: {\n          const valueB = this.opStack.pop();\n          const valueA = this.opStack.pop();\n          if (!equals(valueA, valueB)) {\n            this.opStack.push(1)\n          } else {\n            this.opStack.push(0)\n          }\n          this.ip += 1\n          break;\n        }\n        case BC.COMPARE_ISA: {\n          const valueB = this.opStack.pop()\n          const valueA = this.opStack.pop()\n          const result = isaEquals(this, valueA, valueB)\n          this.opStack.push(result)\n          this.ip += 1\n          break;\n        }\n        case BC.COMPARE_GE: {\n          const valueB = this.opStack.pop()\n          const valueA = this.opStack.pop()\n          const result = greaterEquals(valueA, valueB)\n          this.opStack.push(result)\n          this.ip += 1\n          break;\n        }\n        case BC.COMPARE_GT: {\n          const valueB = this.opStack.pop()\n          const valueA = this.opStack.pop()\n          const result = greaterThan(valueA, valueB)\n          this.opStack.push(result)\n          this.ip += 1\n          break;\n        }\n        case BC.COMPARE_LE: {\n          const valueB = this.opStack.pop()\n          const valueA = this.opStack.pop()\n          const result = lessEquals(valueA, valueB)\n          this.opStack.push(result)\n          this.ip += 1\n          break;\n        }\n        case BC.COMPARE_LT: {\n          const valueB = this.opStack.pop()\n          const valueA = this.opStack.pop()\n          const result = lessThan(valueA, valueB)\n          this.opStack.push(result)\n          this.ip += 1\n          break;\n        }\n        case BC.POP_JUMP_FALSE: {\n          const jumpAddr = this.code.arg1[this.ip]\n          let value = this.opStack.pop();\n          value = toBooleanNr(value);\n          if (value == 0) {\n            this.ip = jumpAddr\n          } else {\n            this.ip += 1\n          }\n          break;\n        }\n        case BC.JUMP_IF_TRUE: {\n          const jumpAddr = this.code.arg1[this.ip];\n          // Leave value on the stack\n          let value = this.opStack.peek();\n          value = toBooleanNr(value);\n          if (value == 1) {\n            this.ip = jumpAddr\n          } else {\n            this.ip += 1\n          }\n          break;\n        }\n        case BC.JUMP_IF_FALSE: {\n          const jumpAddr = this.code.arg1[this.ip];\n          // Leave value on the stack\n          let value = this.opStack.peek();\n          value = toBooleanNr(value);\n          if (value == 0) {\n            this.ip = jumpAddr\n          } else {\n            this.ip += 1\n          }\n          break;\n        }\n        case BC.ADD_VALUES: {\n          const valueInStack_2 = this.opStack.pop()\n          const valueInStack_1 = this.opStack.pop()\n          const result = add(this, valueInStack_1, valueInStack_2)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.SUBTRACT_VALUES: {\n          const valueInStack_2 = this.opStack.pop()\n          const valueInStack_1 = this.opStack.pop()\n          const result = subtract(valueInStack_1, valueInStack_2)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.MULTIPLY_VALUES: {\n          const valueInStack_2 = this.opStack.pop()\n          const valueInStack_1 = this.opStack.pop()\n          const result = multiply(valueInStack_1, valueInStack_2)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.DIVIDE_VALUES: {\n          const valueInStack_2 = this.opStack.pop()\n          const valueInStack_1 = this.opStack.pop()\n          const result = divide(valueInStack_1, valueInStack_2)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.POWER_VALUES: {\n          const valueInStack_2 = this.opStack.pop()\n          const valueInStack_1 = this.opStack.pop()\n          const result = power(valueInStack_1, valueInStack_2)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.MOD_VALUES: {\n          const valueInStack_2 = this.opStack.pop()\n          const valueInStack_1 = this.opStack.pop()\n          const result = modulus(valueInStack_1, valueInStack_2)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.LOGIC_AND_VALUES: {\n          const valueInStack_2 = this.opStack.pop()\n          const valueInStack_1 = this.opStack.pop()\n          const result = logic_and(valueInStack_1, valueInStack_2)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.LOGIC_OR_VALUES: {\n          const valueInStack_2 = this.opStack.pop()\n          const valueInStack_1 = this.opStack.pop()\n          const result = logic_or(valueInStack_1, valueInStack_2)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.SUBTR_N: {\n          const valueToSubtract = this.code.arg1[this.ip];\n          const valueInStack = this.opStack.pop()\n          const result = subtract(valueInStack, valueToSubtract)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.DIVIDE_N: {\n          const dividend = this.code.arg1[this.ip];\n          const valueInStack = this.opStack.pop()\n          const result = divide(valueInStack, dividend)\n          this.opStack.push(result)\n          this.ip += 1;\n          break;\n        }\n        case BC.NEGATE_BOOLEAN: {\n          const valueInStack = this.opStack.pop();\n          const booleanNr = toBooleanNr(valueInStack);\n          const result = booleanNr == 0 ? 1 : 0;\n          this.opStack.push(result);\n          this.ip += 1;\n          break;\n        }\n        case BC.NEGATE_NUMBER: {\n          const valueInStack = this.opStack.pop();\n          if (typeof valueInStack !== \"number\") {\n            throw new RuntimeError(`Value must be a number`);\n          } else {\n            const result = -1 * valueInStack;\n            this.opStack.push(result);\n            this.ip += 1;\n            break;\n          }\n        }\n        case BC.JUMP: {\n          this.ip = this.code.arg1[this.ip]\n          break;\n        }\n        case BC.POP: {\n          // Pop and discard value\n          if (this.opStack.lastValueUndefined) {\n            this.opStack.pop();\n            this.lastValue = undefined;\n          } else {\n            this.lastValue = this.opStack.pop();\n          }\n          this.ip += 1;\n          break;\n        }\n        case BC.CREATE_FOR_LOOP: {\n          const forLoopNr = this.code.arg1[this.ip];\n          // Retrieve for-loop parameters\n          const startAddr = this.opStack.pop();\n          const endAddr = this.opStack.pop();\n          const values = this.opStack.pop();\n          const localVarName = this.opStack.pop();\n          // Create for-loop in current context\n          const forLoop = new ForLoop(this, startAddr, endAddr, localVarName, values);\n          this.forLoopContext.registerForLoop(forLoopNr, forLoop);\n          // Advance IP\n          this.ip += 1;\n          break;\n        }\n        case BC.ITERATE_FOR_LOOP: {\n          const forLoopNr = this.code.arg1[this.ip];\n          const forLoop = this.forLoopContext.getForLoop(forLoopNr);\n          if (forLoop.isOver()) {\n            this.ip = forLoop.endAddr;\n            this.forLoopContext.deleteForLoop(forLoopNr);\n          } else {\n            const value = forLoop.iterate();\n            // Assign to local variable\n            this.context.setLocal(forLoop.localVarName, value);\n            this.ip += 1;\n          }\n          break;\n        }\n        case BC.BREAK_FOR_LOOP: {\n          const forLoopNr = this.code.arg1[this.ip];\n          const forLoop = this.forLoopContext.getForLoop(forLoopNr);\n          this.forLoopContext.deleteForLoop(forLoopNr);\n          this.ip = forLoop.endAddr;\n          break;\n        }\n        case BC.CONTINUE_FOR_LOOP: {\n          const forLoopNr = this.code.arg1[this.ip];\n          const forLoop = this.forLoopContext.getForLoop(forLoopNr);\n          this.ip = forLoop.startAddr;\n          break;\n        }\n        case BC.PRINT_TOP: {\n          const value = this.opStack.pop()\n          console.log(\"Value: \" + value)\n          this.ip += 1;\n          break;\n        }\n        default: {\n          console.log(\"ip:\", this.ip);\n          console.error(\"Bytecode not supported: \", this.code.opCodes[this.ip]);\n          throw new RuntimeError(\"Bytecode not supported: \" + this.code.opCodes[this.ip]);\n        }\n      } // switch\n      this.cycleCount++;\n    } // while\n  } // executeCycles\n\n  isRunning(): boolean {\n    return !this.isFinished() && !this.isSuspended();\n  }\n\n  isFinished(): boolean {\n    return this.ip >= this.code.opCodes.length;\n  }\n\n  isSuspended(): boolean {\n    return this.suspended;\n  }\n\n  stopRunning() {\n    this.forceFinish();\n    this.cleanupAfterRunning();\n  }\n\n  private forceFinish() {\n    this.opStack.clear();\n    this.cycleCount = this.maxCount;\n    this.ip = this.code.opCodes.length;\n    this.halted = true;\n  }\n\n  private cleanupAfterRunning() {\n    // Check that stack is balanced (empty)\n    if (this.opStack.count() > 0 && !this.halted) {\n      console.info(\"Stack: \", this.opStack);\n      throw new RuntimeError(\"Stack was not empty!\")\n    }\n    // Invoke callback\n    this.onFinished();\n  }\n\n  runAtCurrentPosition(code: Code): Promise<void> {\n    \n    // Build promise which will be resolved when code\n    // is done running.\n    const promise = new Promise<void>((resolve) => {\n      // Save current state\n      const previousState = new ProcessorState(this);\n      const currentContext = this.context;\n      const currentGlobalContext = this.globalContext;\n      // Reset current state\n      ProcessorState.resetState(this);\n      // Set running code at the current context\n      this.prepareForRunning(code, currentContext, currentGlobalContext);\n      // Setup onFinished callback\n      this.onFinished = () => {\n        if (!this.halted) {\n          // Restore previous state if VM not halted\n          previousState.restoreState(this);\n        } else {\n          // At least restore the \"onFinished\" which we modified\n          this.onFinished = previousState.onFinished;\n        }\n        // Resolve promise\n        resolve();\n      };\n      // Start executing\n      this.runUntilDone();\n    });\n\n    return promise;\n  }\n\n  yieldExecution() {\n    this.cycleCount = this.maxCount;\n    this.suspended = false;\n  }\n\n  private suspendExecution() {\n    this.cycleCount = this.maxCount;\n    this.suspended = true;\n  }\n\n  private resumeExecution() {\n    if (!this.suspended) {\n      return;\n    }\n    this.suspended = false;\n    // Only continue running if specified\n    if (this.runAfterSuspended) {\n      this.runUntilDone();\n    }\n    // Invoke callback\n    this.onResumingExecution();\n  }\n\n  couldResultInCall(): boolean {\n    const op = this.code.opCodes[this.ip];\n    const result = hasCallPotential(op);\n    return result;\n  }\n\n  pushFrame() {\n    const frame = new Frame(this.code, this.ip, this.context, this.forLoopContext);\n    this.savedFrames.push(frame);\n    // Remove at some point?\n    if (this.savedFrames.count() > this.maxCallStackDepth) {\n      throw new RuntimeError(\"Call stack too deep\");\n    }\n  }\n\n  popFrame() {\n    const frame = this.savedFrames.pop();\n    this.ip = frame.ip;\n    this.context = frame.context;\n    this.forLoopContext = frame.forLoopContext;\n    this.code = frame.code;\n  }\n\n  getCurrentSrcLineNr(): number | undefined {\n    const optSrcMapEntry = this.code.srcMap.findEntry(this.ip);\n    if (optSrcMapEntry !== null) {\n      return optSrcMapEntry.srcLoc.start.row;\n    } else {\n      return undefined;\n    }\n  }\n\n  getCurrentSrcFileName(): string | undefined {\n    const srcFile = this.code.srcMap.srcFile;\n    return srcFile;\n  }\n\n  private selectCoreTypeMap(accessTarget: any): MSMap {\n    if (accessTarget instanceof Array) {\n      return this.listCoreType;\n    } else if (typeof accessTarget === \"string\") {\n      return this.stringCoreType;\n    } else if (accessTarget instanceof MSMap) {\n      return this.mapCoreType;\n    } else if (typeof accessTarget === \"number\") {\n      return this.numberCoreType;\n    } else {\n      throw new RuntimeError(`No core-type map for value ${accessTarget}`);\n    }\n  }\n\n  resolveIntrinsic(identifier: string): BoundFunction|undefined {\n    const optIntrinsicFn = this.intrinsicsMap.get(identifier);\n    return optIntrinsicFn;\n  }\n\n  private callOrPushValue(value: any, isFuncRef: boolean, accessSrc: any | undefined = undefined, srcMap: MSMap | null = null) {\n    // If it's a function and we are not dealing with a function\n    // reference, the function should be called.\n    // The resulting value will be put in the stack instead.\n    if (value instanceof BoundFunction && !isFuncRef) {\n      this.performCall(value, [], accessSrc, srcMap);\n    } else {\n      // Otherwise use the value as-is\n      this.opStack.push(value)\n      this.ip += 1;\n    }\n  }\n\n  private performCall(maybeFunction: any, paramValues: any[], dotCallTarget: any | undefined = undefined, srcMap: MSMap | null = null) {\n    \n    const paramCount = paramValues.length;\n\n    if (!(maybeFunction instanceof BoundFunction)) {\n      if (paramCount > 0) {\n        throw new RuntimeError(`Too Many Arguments`);\n      } else {\n        throw new RuntimeError(`Attempting to call a non-function`);\n      }\n    }\n\n    const boundFunc = maybeFunction as BoundFunction;\n    const funcDef = boundFunc.funcDef;\n\n    let funcArgCount = funcDef.argNames.length;\n\n    let isNativeSelfFunction = (\n      funcDef.isNative() \n      && dotCallTarget !== undefined\n      && funcDef.argNames.length > 0\n      && funcDef.argNames[0] === \"self\"\n    );\n\n    // Subtract one argument for instrinsic self-functions\n    if (isNativeSelfFunction) {\n      funcArgCount -= 1;\n    }\n\n    // If parameters missing, complete with default values\n    if (paramCount > funcArgCount) {\n      throw new RuntimeError(`Too many parameters calling function.`)\n    } else if (paramCount < funcArgCount) {\n      // Push the missing default argument values\n      const missingArgCount = funcArgCount - paramCount;\n      const defaultValues = funcDef.getLastNEffectiveDefaultValues(missingArgCount);\n      for (let value of defaultValues) {\n        paramValues.push(value);\n      }\n    }\n\n    if (funcDef.isNative()) {\n      const func = funcDef.getFunction();\n      // Add dot-call target \"manually\", if self-function\n      if (isNativeSelfFunction) {\n        // The \"self\" parameter\n        paramValues.unshift(dotCallTarget);\n      }\n      // Call with parameters\n      const retVal = func.apply(this, paramValues);\n\n      // Abort this call and return immediately\n      if (retVal === Processor.abortCallValue) {\n        return;\n      }\n\n      // Check if returned value is a Promise\n      if (retVal instanceof Promise) {\n        this.suspendUntilPromiseResolved(retVal);\n      } else {\n        // Return value is normal object\n        // Push return value to stack\n        this.opStack.push(retVal);\n        // Advance IP\n        this.ip += 1;\n      }\n    } else {\n      // Function is a MiniScript-code function.\n      // (not an intrinsic)\n\n      // Let it return to the next bytecode after the call\n      this.ip += 1;\n      this.pushFrame();\n\n      // Setup next frame\n      this.code = funcDef.getCode();\n      this.context = new Context(this, boundFunc.context);\n      this.forLoopContext = new ForLoopContext();\n      this.ip = 0;\n\n      // Pop and set parameters as variables\n      let argNames = funcDef.argNames;\n    \n      if (dotCallTarget !== undefined) {\n        argNames = argNames.filter((n:string) => n !== \"self\");\n      }\n\n      for (let i = 0; i < argNames.length; i++) {\n        const argName = argNames[i];\n        const paramValue = paramValues[i];\n        this.context.setLocal(argName, paramValue);\n      }\n      // Add dot-call target if any\n      if (dotCallTarget !== undefined) {\n        // The \"self\" value\n        this.context.setLocal(\"self\", dotCallTarget);\n        // The \"super\" value\n        if(srcMap !== null) {\n          // The \"source map\" is where the bound-function was found.\n          // Any calls to \"super\" refer to the isa-map above this one.\n          if (srcMap.hasParent()) {\n            const isaMap = srcMap.parentMap();\n            this.context.setLocal(\"super\", isaMap);\n          }\n        }\n      }\n    }    \n  }\n\n  private suspendUntilPromiseResolved(promise: Promise<any>) {\n    // Mark VM for suspension\n    this.suspendExecution();\n    \n    // Deal with promise resolved value\n    promise.then((retVal: any) => {   \n      // Push return value to stack\n      this.opStack.push(retVal);\n      // Advance IP\n      this.ip += 1;\n      // Resume execution\n      this.resumeExecution();\n    });\n  }\n\n}", "import { HashMap, MapEntry } from \"../lib/hashmap\";\nimport { MAX_ISA_RECURSION_DEPTH, Processor } from \"./processor\";\nimport { RuntimeError } from \"./runtime\";\n\nexport type MSMapFactory = {\n  newMap(): MSMap;\n}\n\nexport class MSMap {\n\n  private mapObj: HashMap;\n  private valueSetOverrides: null | Map<any, Function>;\n\n  constructor(private vm: Processor) {\n    this.mapObj = new HashMap();\n    this.valueSetOverrides = null;\n  }\n\n  get(key: any): any {\n    const result = this.getOpt(key);\n    if (result === undefined) {\n      throw new RuntimeError(`Key Not Found: '${key}' not found in map`);\n    } else {\n      return result;\n    }\n  }\n\n  getOpt(key: any, depth: number = 0): any | undefined {\n    if (depth > MAX_ISA_RECURSION_DEPTH) {\n      throw new RuntimeError(`__isa depth exceeded (perhaps a reference loop?)`);\n    }\n    if (this.mapObj.has(key)) {\n      return this.mapObj.get(key);\n    } else if (this.hasParent()) {\n      return this.parentMap().getOpt(key, depth + 1); \n    } else if (this === this.vm.mapCoreType) {\n      return undefined;\n    } else {\n      return this.vm.mapCoreType.getOpt(key, depth + 1); \n    }\n  }\n\n  getWithSource(key: any, depth: number = 0): [any, MSMap] {\n    if (depth > MAX_ISA_RECURSION_DEPTH) {\n      throw new RuntimeError(`__isa depth exceeded (perhaps a reference loop?)`);\n    }\n    if (this.mapObj.has(key)) {\n      return [this.mapObj.get(key), this];\n    } else if (this.hasParent()) {\n      return this.parentMap().getWithSource(key, depth + 1); \n    } else if (this === this.vm.mapCoreType) {\n      throw new RuntimeError(`Key Not Found: '${key}' not found in map`);\n    } else {\n      return this.vm.mapCoreType.getWithSource(key, depth + 1); \n    }\n  }\n\n  size(): number {\n    return this.mapObj.size();\n  }\n\n  // Creates a sub-map / instance, having this\n  // as its isa-parent.\n  newChildMap(): MSMap {\n    const newMap = new MSMap(this.vm);\n    newMap.set(\"__isa\", this);\n    return newMap;\n  }\n\n  hasParent() {\n    return this.mapObj.has(\"__isa\")  \n  }\n\n  parentMap(): MSMap {\n    const result = this.mapObj.get(\"__isa\");\n    if (result instanceof MSMap) {\n      return result\n    } else {\n      throw new RuntimeError(\"No parent map. Always check first with hasParent()\");\n    }\n  }\n\n  // Makes it possible to execute an action before attempting\n  // to set a new value and even change the value to be set.\n  overrideSettingValue(key: any, callback: (newValue: any) => any) {\n    if (this.valueSetOverrides === null) {\n      this.valueSetOverrides = new Map();\n    }\n    this.valueSetOverrides.set(key, callback);\n  }\n\n  removeSettingValueOverride(key: any) {\n    if (this.valueSetOverrides instanceof Map) {\n      this.valueSetOverrides.delete(key);\n    }\n  }\n\n  set(key: any, value: any) {\n    // Process value-set overrider\n    // Keep returned value\n    if (this.valueSetOverrides !== null) {\n      const overrideFunction = this.valueSetOverrides.get(key);\n      if (overrideFunction instanceof Function) {\n        value = overrideFunction(value);\n      }\n    }\n\n    // Set passed / overridden value\n    this.mapObj.set(key, value);\n  }\n\n  has(key: any): any {\n    return this.mapObj.has(key);\n  }\n\n  delete(key: any) {\n    this.mapObj.delete(key);\n  }\n\n  keys(): Array<any> {\n    return this.mapObj.keys();\n  }\n\n  values(): Array<any> {\n    return this.mapObj.values();\n  }\n\n  entries(): Array<MapEntry> {\n    return this.mapObj.entries();\n  }\n\n  isaEquals(type: MSMap): number {\n    if (type === this.vm.mapCoreType) {\n      return 1;\n    } else {\n      // Walk up the \"isa\" chain until a match is found\n      let p = null;\n\t\t\tp = this.getOpt(\"__isa\");\n\t\t\twhile (p != null) {\n\t\t\t\tif (p === type) {\n          return 1;\n        }\n\t\t\t\tif (!(p instanceof MSMap)) {\n          return 0;\n        } else {\n          p = p.getOpt(\"__isa\");\n        }\n\t\t\t}\n\t\t\treturn 0;\n    }\n  }\n\n  toJSMap(depth:number = 16): Map<any,any> {\n    return this.mapObj.toMap(depth);\n  }\n\n}", "import { TokenType } from \"../parser/tokenTypes\";\nimport { BoundFunction } from \"./funcdef\";\nimport { MSMap, MSMapFactory } from \"./msmap\";\nimport { Processor } from \"./processor\";\n\nexport class RuntimeError extends Error {\n  \n  constructor(private baseMsg: string) {\n    super(`Runtime Error: ${baseMsg}`);\n  }\n\n  setSourceLocation(fileName?: string, lineNr?: number) {\n    let location: string;\n    if (fileName !== undefined && lineNr !== undefined) {\n      location = ` [${fileName} line ${lineNr}]`;\n    } else if (lineNr !== undefined) { \n      location = ` [line ${lineNr}]`;\n    } else {\n      location = \"\";\n    }\n    \n    const msg = `Runtime Error: ${this.baseMsg}${location}`;\n    this.message = msg;\n  }\n  \n}\n\ntype IndexedCollection = {\n  length: number;\n}\n\ntype Concatenable = {\n  concat(a: any): any;\n}\n\nexport function notEquals(a: any, b: any): number {\n  return equals(a, b) == 1 ? 0 : 1; \n}\n\nexport function equals(a: any, b: any, recursionDepth: number = 16): number {\n  if (recursionDepth < 0) {\n    return 1;\n  }\n  // JavaScript does not compare Arrays the way we want\n  // so we have to implement our own version.\n  if (a instanceof Array && b instanceof Array) {\n    if (a.length !== b.length) {\n      return 0;\n    } else {\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] === b[i]) {\n          continue;\n        }\n        if (equals(a[i], b[i], recursionDepth - 1) === 0) {\n          return 0;\n        }\n      }\n      return 1;\n    }\n  } else if (a instanceof MSMap && b instanceof MSMap) {\n    if (a.size() !== b.size()) {\n      return 0;\n    } else {\n      for (let aKey of a.keys()) {\n        if (!b.has(aKey)) {\n          return 0;\n        }\n        const aValue = a.get(aKey);\n        const bValue = b.get(aKey);\n        if (equals(aValue, bValue, recursionDepth - 1)) {\n          continue;\n        } else if (equals(aValue, bValue, recursionDepth - 1) !== 1) {\n          return 0;\n        }\n      }\n      return 1;\n    }\n  } else {\n    return a === b ? 1 : 0;\n  }\n}\n\nexport function isaEquals(vm: Processor, value: any, type: any): number {\n  if (value === null) {\n    return type === null ? 1 : 0;\n  } else if (type === null) {\n    return 0;\n  } else if (typeof value === \"number\") {\n    return type === vm.numberCoreType ? 1 : 0;\n  } else if (typeof value === \"string\") {\n    return type === vm.stringCoreType ? 1 : 0;\n  } else if (value instanceof Array) {\n    return type === vm.listCoreType ? 1 : 0;\n  } else if (value instanceof MSMap) {\n    return value.isaEquals(type);\n  } else if (value instanceof BoundFunction) {\n    return type === vm.funcRefCoreType ? 1 : 0;\n  } else {\n    return 0;\n  }\n}\n\nexport function greaterEquals(a: any, b: any): number | null {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return a >= b ? 1 : 0;\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    return a >= b ? 1 : 0;\n  } else {\n    return null;\n  }\n}\n\nexport function greaterThan(a: any, b: any): number | null {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return a > b ? 1 : 0;\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    return a > b ? 1 : 0;\n  } else {\n    return null;\n  }\n}\n\nexport function lessEquals(a: any, b: any): number | null {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return a <= b ? 1 : 0;\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    return a <= b ? 1 : 0;\n  } else {\n    return null;\n  }\n}\n\nexport function lessThan(a: any, b: any): number | null {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return a < b ? 1 : 0;\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    return a < b ? 1 : 0;\n  } else {\n    return null;\n  }\n}\n\nexport function chainedComparison(values: any[], operators: string[]): number {\n  const pairCount = operators.length;\n  // Evaluate in pairs\n  for (let i = 0; i < pairCount; i++) {\n    const operator = operators[i];\n    const left = values[i];\n    const right = values[i+1];\n    let result: number | null;\n    if (operator === \"==\") {\n      result = equals(left, right);\n    } else if (operator === \"!=\") {\n      result = notEquals(left, right);\n    } else if (operator === \">\") {\n      result = greaterThan(left, right);\n    } else if (operator === \">=\") {\n      result = greaterEquals(left, right);\n    } else if (operator === \"<\") {\n      result = lessThan(left, right);\n    } else if (operator === \"<=\") {\n      result = lessEquals(left, right);\n    } else {\n      throw new RuntimeError(\"Invalid operator\");\n    }\n    if (!result) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nexport function add(mapFactory: MSMapFactory, a: any, b: any): any {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    // Perform arithmetic addition\n    return a + b\n  } else if (typeof a === \"string\" || typeof b === \"string\") {\n    // Convert both values to String and concatenate\n    return toStr(a) + toStr(b);\n  } else if (a instanceof Array) {\n    if (b instanceof Array) {\n      return a.concat(b);\n    } else {\n      throw new RuntimeError(`Got ${b} instead of another List`);\n    }\n  } else if (a instanceof MSMap) {\n    if (b instanceof MSMap) {\n      const combined = mapFactory.newMap();\n      for (let e of a.entries()) {\n        combined.set(e.key,e.value);\n      }\n      for (let e of b.entries()) {\n        combined.set(e.key,e.value);\n      }\n      return combined;\n    } else {\n      throw new RuntimeError(`Got ${toStr(b)} where a Map was required`);\n    }\n  } else if (a === null) {\n    return null;\n  } else if (typeof a === \"number\" && b === null) {\n    return a;\n  } else {\n    console.info(\"Not supported for values\",\"a:\",a,\"b:\",b);\n    throw new RuntimeError(`Cannot add ${formatValue(a,true)} + ${formatValue(b,true)}`);\n  }\n}\n\nexport function subtract(a: any, b: any): any {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return a - b;\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    const suffixIdx = a.lastIndexOf(b);\n    // Force match at the end\n    const matchIdx = a.length - b.length;\n    if (suffixIdx >= 0 && suffixIdx == matchIdx) {\n      return a.substring(0, suffixIdx); \n    } else {\n      return a;\n    }\n  } else if (a === null) {\n    return null;\n  } else if (typeof a === \"number\" && b === null) {\n    return a;\n  } else {\n    console.info(\"Not supported for values\",\"a:\",a,\"b:\",b);\n    throw new RuntimeError(`Cannot subtract ${formatValue(a,true)} - ${formatValue(b,true)}`);\n  }\n}\n\nexport function divide(a: any, b: any): number | null {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return a / b\n  } else if (a === null) {\n    return null;\n  } else if (typeof a === \"number\" && b === null) {\n    return a / 0;\n  } else {\n    console.info(\"Not supported for values\",\"a:\",a,\"b:\",b);\n    throw new RuntimeError(`Cannot divide ${formatValue(a,true)} / ${formatValue(b,true)}`);\n  }\n}\n\nexport function multiply(a: any, b: any): any {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return a * b;\n  } else if (a instanceof Array || typeof a === \"string\") {\n    if (typeof b === \"number\") {\n      let result: Concatenable = (typeof a === \"string\") ? \"\" : new Array();\n      if (b > 0) {\n        // Add whole repetitions\n        const repetitionCount = Math.floor(b);\n        for (let i = 0; i < repetitionCount; i++) {\n          result = result.concat(a);\n        }\n        // Take the part after \"comma\" with (%1) (e.g. 7.25 -> 0.25)\n        // and use it to know how many more elements of the collection\n        // to take. For this, multiply by the total length and take first\n        // N elements.\n        const additionalElementsSliceEnd = Math.floor((b % 1) * a.length);\n        const additionalElements = a.slice(0, additionalElementsSliceEnd);\n        result = result.concat(additionalElements);\n      }\n      return result;\n    } else {\n      throw new RuntimeError(`Number required for replication. Got ${b} instead.`);\n    }\n  } else if (a === null) {\n    return null;\n  } else if (typeof a === \"number\" && b === null) {\n    return 0;\n  } else {\n    console.error(\"Not supported for values\",\"a:\",a,\"b:\",b);\n    throw new RuntimeError(`Cannot multiply ${formatValue(a,true)} * ${formatValue(b,true)}`);\n  }\n}\n\nexport function power(a: any, b: any): number | null {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return Math.pow(a, b);\n  } else if (a === null) {\n    return null;\n  } else if (typeof a === \"number\" && b === null) {\n    return 1;\n  } else {\n    console.info(\"Not supported for values\",\"a:\",a,\"b:\",b);\n    throw new RuntimeError(`Cannot raise to the power ${formatValue(a,true)} ^ ${formatValue(b,true)}`);\n  }\n}\n\nexport function modulus(a: any, b: any): number | null {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return a % b;\n  } else if (a === null) {\n    return null;\n  } else if (typeof a === \"number\" && b === null) {\n    return a % 0;\n  } else {\n    console.info(\"Not supported for values\",\"a:\",a,\"b:\",b);\n    throw new RuntimeError(`Cannot perform modulus ${formatValue(a,true)} % ${formatValue(b,true)}`);\n  }\n}\n\nexport function logic_and(a: any, b: any): number {\n  a = toBooleanNr(a);\n  b = toBooleanNr(b);\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return absClamp01(a * b);\n  } else {\n    console.info(\"Not supported for values\",\"a:\",a,\"b:\",b);\n    throw new RuntimeError(`Cannot perform ${formatValue(a,true)} && ${formatValue(b,true)}`);\n  }\n}\n\nexport function logic_or(a: any, b: any): number {\n  a = toBooleanNr(a);\n  b = toBooleanNr(b);\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return absClamp01(a + b - a * b);\n  } else {\n    console.info(\"Not supported for values\",\"a:\",a,\"b:\",b);\n    throw new RuntimeError(`Cannot perform ${formatValue(a,true)} || ${formatValue(b,true)}`);\n  }\n}\n\nexport function absClamp01(value: number): number {\n  if (value < 0) value = -value;\n  if (value > 1) return 1;\n  return value;\n}\n\nexport function slice(vm: Processor, sliceTarget: any, startIdx: number, endIdx: number): any {\n  // Check list-target\n  if (!(sliceTarget instanceof Array || typeof sliceTarget === \"string\")) {\n    throw new RuntimeError(`Slice target must be List or String [line ${vm.getCurrentSrcLineNr()}]`);\n  }\n  // Check / compute indexes\n  if (startIdx !== null) {\n    checkInt(startIdx, `Slice-start should be an integer value [line ${vm.getCurrentSrcLineNr()}]`);\n    startIdx = computeSliceIndex(sliceTarget, startIdx);\n  } else {\n    // Take slice from the beginning\n    startIdx = 0;\n  }\n  if (endIdx !== null) {\n    checkInt(endIdx, `Slice-end should be an integer value [line ${vm.getCurrentSrcLineNr()}]`);\n    endIdx = computeSliceIndex(sliceTarget, endIdx);\n  } else {\n    // Take slice to the end\n    endIdx = sliceTarget.length;\n  }\n  // Compute slice\n  const newCollection = sliceTarget.slice(startIdx, endIdx);\n  return newCollection;\n}\n\n// Here it's important that the index is valid and within the access-target\nexport function computeAccessIndex(accessTarget: IndexedCollection, index: number): number {\n  const intIdx = toIntegerValue(index);\n  // Compute effective index\n  const effectiveIndex = (intIdx < 0) ? intIdx + accessTarget.length : intIdx;\n  // Check bounds\n  if (effectiveIndex < 0 || effectiveIndex >= accessTarget.length) {\n    throw new RuntimeError(`Index Error (list index ${index} out of range)`);\n  }\n  return effectiveIndex;\n}\n\n// Here we can be flexible, adjust values and allow index to be == collection.length\nexport function computeSliceIndex(accessTarget: IndexedCollection, index: number): number {\n  // Compute effective index\n  const effectiveIndex = (index < 0) ? index + accessTarget.length : index;\n  // Adjust values\n  if (effectiveIndex < 0) {\n    return 0;\n  } else if (effectiveIndex >= accessTarget.length) {\n    return accessTarget.length;\n  }\n  // Otherwise return as calculated\n  return effectiveIndex;\n}\n\nexport function computeMathAssignValue(mapFactory: MSMapFactory, currentValue: any, opTokenType: TokenType, operand: any): any {\n  switch(opTokenType) {\n    case TokenType.PLUS_ASSIGN:\n      return add(mapFactory, currentValue, operand);\n    case TokenType.MINUS_ASSIGN:\n      return subtract(currentValue, operand);\n    case TokenType.DIV_ASSIGN:\n      return divide(currentValue, operand);\n    case TokenType.MULT_ASSIGN:\n      return multiply(currentValue, operand);\n    case TokenType.MOD_ASSIGN:\n      return modulus(currentValue, operand);\n    case TokenType.POW_ASSIGN:\n      return power(currentValue, operand);\n    default:\n      throw new RuntimeError(\"Invalid token-type: \" + TokenType[opTokenType]);\n  }\n}\n\nexport function toBooleanNr(value: any): number {\n  if (value === null) {\n    return 0;\n  } else if (typeof value == \"number\" ) {\n    return value;\n  } else if (value instanceof Array) {\n    return value.length;\n  } else if (typeof value === \"string\") {\n    return value.length > 0 ? 1 : 0;\n  } else if (value instanceof MSMap) {\n    return value.size() > 0 ? 1 : 0;\n  } else {\n    throw new RuntimeError(\"Type not supported: \" + value);\n  }\n}\n\nexport function toStr(a: any): string {\n  if (typeof a === \"number\") {\n    return \"\" + a;\n  } else if (typeof a === \"string\") {\n    return a;\n  } else {\n    return formatValue(a);\n  }\n}\n\n// Not the same as trying to convert to number (e.g. `val(\"3\")`)\nexport function toNumberValue(value: any): number {\n  if (typeof value === \"number\" ) {\n    return value;\n  } else {\n    return 0;\n  }\n}\n\nexport function toIntegerValue(value: any): number {\n  if (typeof value == \"number\" ) {\n    return Math.trunc(value);\n  } else {\n    return 0;\n  }\n}\n\nexport function toTwoNumbers(value: any): [number, number] {\n  let a: number;\n  let b: number;\n  if (value instanceof Array) {\n    a = toNumberValue(value[0]);\n    b = toNumberValue(value[1]);\n  } else {\n    const n = toNumberValue(value);\n    a = n;\n    b = n;\n  }\n  return [a, b];\n}\n\nexport function round(n: any, decimalPlaces: any): number | undefined {\n  if (typeof n === \"number\" && typeof decimalPlaces === \"number\") {\n    if (decimalPlaces >= 0) {\n      const places = Math.pow(10, decimalPlaces);      \n      return Math.round(n * places) / places;\n    } else {\n      const pow10Nr = Math.pow(10, -decimalPlaces);\n      return Math.round(n / pow10Nr) * pow10Nr;\n    }\n  } else {\n    return undefined;\n  }\n}\n\nexport function hashCode(value: any, recursionDepth: number = 16): number {\n  if (value === null) {\n    return -1;\n  } else if (value instanceof Array) {\n    return listHashCode(value, recursionDepth - 1);\n  } else if (value instanceof MSMap) {\n    return mapHashCode(value, recursionDepth - 1);\n  } else {\n    const valueStr = toStr(value);\n    return stringHashCode(valueStr);\n  }\n}\n\nexport function listHashCode(list: Array<any>, recursionDepth: number = 16): number {\n  let result = hashCode(list.length);\n  if (recursionDepth < 1) {\n    return result;\n  }\n  for (let i = 0; i < list.length; i++) {\n    const value = list[i];\n    if (value != null) {\n      result ^= hashCode(value, recursionDepth - 1);\n    }\n  }\n  return result;\n}\n\nexport function mapHashCode(map: MSMap, recursionDepth: number = 16) {\n  let result = stringHashCode(toStr(map.size));\n  if (recursionDepth < 0) {\n    return result;\n  }\n  for (let {key, value} of map.entries()) {\n    result ^= hashCode(key, recursionDepth - 1);\n    if (value != null) {\n      result ^= hashCode(value, recursionDepth - 1);\n    }\n  }\n  return result;\n}\n\nexport function stringHashCode(str: string): number {\n  let hash = 0;\n  for (let i = 0, len = str.length; i < len; i++) {\n      let chr = str.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport function getRandomInt(vm: Processor, max: number): number { \n  return Math.floor(vm.random() * max);\n}\n\nexport function checkRange(i: number, min: number, max: number, desc: string = \"index\") {\n  if (i < min || i > max) {\n    throw new RuntimeError(`Index Error: ${desc} (${i}) out of range (${min} to ${max})`);\n  }\n}\n\nexport function checkNumber(arg: any, errorMsg: string, vm: Processor|null = null) {\n  if (Number.isFinite(arg)) {\n    return;\n  } else if (vm instanceof Processor) {\n    throw new RuntimeError(errorMsg);\n  } else {\n    throw new RuntimeError(errorMsg);\n  }\n}\n\nexport function checkInt(arg: any, errorMsg: string, vm: Processor|null = null) {\n  if (Number.isInteger(arg)) {\n    return;\n  } else if (vm instanceof Processor) {\n    throw new RuntimeError(errorMsg);\n  } else {\n    throw new RuntimeError(errorMsg);\n  }\n}\n\nexport function isNullOrEmpty(str: string): boolean {\n  if (str === null) {\n    return true;\n  } else if (typeof str === \"string\") {\n    return str === \"\";\n  } else {\n    throw new RuntimeError(\"Invalid argument: \" + str);\n  }\n}\n\n\nexport function formatValue(value: any, quoteStrings: boolean = false, depth: number = 16): string {\n  let text = \"\";\n  if (typeof value === \"number\") {\n    text = formatNumber(value);\n  } else if (value instanceof Array) {\n    if (depth < 0 ) {\n      return \"[ a List ]\";\n    }\n    const formattedValues = [];\n    for (const e of value) {\n      formattedValues.push(formatValue(e, true, depth - 12));\n    }\n    text = \"[\" + formattedValues.join(\", \") + \"]\";\n  } else if (value instanceof MSMap) {\n    if (depth < 0 ) {\n      return \"{ a Map }\";\n    }\n    const formattedPairs = [];\n    for (let e of value.entries()) {\n      const formattedKey = formatValue(e.key, true, depth - 15);\n      const formattedValue = formatValue(e.value, true, depth - 14);\n      const formattedPair = formattedKey + \": \" + formattedValue;\n      formattedPairs.push(formattedPair);\n    }\n    text = \"{\" + formattedPairs.join(\", \") + \"}\";\n  } else if (typeof(value) === \"string\" && quoteStrings) {\n    text = \"\\\"\" + value + \"\\\"\";\n  } else if (typeof(value) === \"boolean\") {\n    return value ? \"1\" : \"0\";\n  } else if (value instanceof BoundFunction) {\n    const formattedArgs: string[] = [];\n    for (let arg of value.funcDef.arguments) {\n      if (arg.defaultValue !== undefined) {\n        formattedArgs.push(`${arg.name}=${arg.defaultValue}`);\n      } else {\n        formattedArgs.push(`${arg.name}`);\n      }\n    }\n    const joinedArgs = formattedArgs.join(\", \");\n    return `FUNCTION(${joinedArgs})`;\n  } else {\n    text = \"\" + value;\n  }\n  return text;\n}\n\nfunction formatNumber(value: number): string {\n  const isFloat = !Number.isInteger(value) && Number.isFinite(value);\n  let text: string = \"\";\n  if (isFloat) {\n    if (value > 1E10 || value < -1E10 || (value < 1E-6 && value > -1E-6)) {\n      // Format very large or small numbers in exponential form\n      text = value.toExponential(6);\n      // Pad exponential with leading zero if only one digit\n      text = text.replace(/[eE]([-+])(\\d)$/,\"E$10$2\")\n    } else {\n      text = \"\" + (round(value, 6) || 0);\n    }\n  } else {\n    text = value.toString();\n  }\n  return text;\n}\n", "import { Processor } from \"../../vm/processor\";\nimport { toIntegerValue } from \"../../vm/runtime\";\n\nexport function addBitOperationIntrinsics(p: Processor) {\n\n  p.addIntrinsic(\"bitAnd(i=0,j=0)\", \n  function(i: any, j: any): number {\n    i = toIntegerValue(i);\n    j = toIntegerValue(j);\n    return i & j;\n  });\n\n  p.addIntrinsic(\"bitOr(i=0,j=0)\", \n  function(i: any, j: any): number {\n    i = toIntegerValue(i);\n    j = toIntegerValue(j);\n    return i | j;\n  });\n\n  p.addIntrinsic(\"bitXor(i=0,j=0)\", \n  function(i: any, j: any): number {\n    i = toIntegerValue(i);\n    j = toIntegerValue(j);\n    return i ^ j;\n  });\n\n}", "import { Processor } from \"../../vm/processor\";\nimport { toStr } from \"../../vm/runtime\";\n\nexport function addCharIntrinsics(p: Processor) {\n  \n  p.addIntrinsic(\"code(self)\", \n  function(x: any): number | null {\n    if (x !== null) {\n      const s = toStr(x);\n      if (x === \"\") {\n        return null\n      }\n      const result = s.charCodeAt(0);\n      return result;\n    } else {\n      return 0;\n    }\n  });\n\n  p.addIntrinsic(\"char(n)\", \n  function(x: any): string {\n    if (typeof x === \"number\" && x > 0) {\n      const s = String.fromCharCode(x)\n      return s;\n    }\n    return String.fromCharCode(0);\n  });\n\n}\n", "import { MSMap } from \"../../vm/msmap\";\nimport { Processor } from \"../../vm/processor\";\nimport { toNumberValue, checkNumber, RuntimeError, toIntegerValue, checkRange, toStr, equals, isNullOrEmpty, slice, toBooleanNr } from \"../../vm/runtime\";\n\nexport function addCollectionIntrinsics(p: Processor) {\n\n  p.addIntrinsic(\"range(start,stop,step=null)\", \n  function(start: any, stop: any, step: number) {\n    start = toNumberValue(start);\n    stop = toNumberValue(stop);\n\n    const result: number[] = [];\n\n    if (start === stop) {\n      return [start];\n    } else if (start < stop) {\n      step = step === null ? 1 : step;\n      checkNumber(step, \"Argument 'step' should be a number\", p);\n      if (step <= 0) {\n        return new Array();\n      }\n      for (let i = start; i <= stop; i += step) {\n        result.push(i);\n      }\n    } else {\n      step = step === null ? -1 : step;\n      checkNumber(step, \"Argument 'step' should be a number\", p);\n      if (step >= 0) {\n        return new Array();\n      }\n      for (let i = start; i >= stop; i += step) {\n        result.push(i);\n      }\n    }\n\n    return result;\n  });\n\n  p.addIntrinsic(\"len(self)\",\n  function(self: any): number | null {\n    if (self instanceof Array || typeof self === \"string\") {\n      return self.length;\n    } else if (self instanceof MSMap) {\n      return self.size();\n    } else {\n      return null;\n    }\n  });\n\n  p.addIntrinsic(\"sum(self)\", \n  function(self: any): number {\n    let list: any[];\n    if (self instanceof Array) {\n      list = self as Array<any>;\n    } else if (self instanceof MSMap) {\n      list = Array.from( self.values() );\n    } else {\n      return 0;\n    }\n    let total = 0;\n    for (let e of list) {\n      total += toNumberValue(e);\n    }\n    return total;\n  });\n\n  p.addIntrinsic(\"insert(self,index,value)\", \n  function(self: any, index: number, value: any): any | null {\n    if (index === null) {\n      throw new RuntimeError(\"index argument required\");\n    }\n    if (typeof index !== \"number\") {\n      throw new RuntimeError(\"number required for index argument\");\n    }\n    index = toIntegerValue(index);\n    if (index < 0) {\n      index += self.length + 1;\n    }\n    checkRange(index, 0, self.length);\n    if (self instanceof Array) {\n      self.splice(index, 0, value);\n    } else if (typeof self === \"string\") {\n      const valueStr = toStr(value);\n      const result = [self.slice(0, index), valueStr, self.slice(index)].join('');\n      return result;\n    } else {\n      throw new RuntimeError(\"insert called on an invalid type\");\n    }\n  });\n\n  p.addIntrinsic(\"remove(self,k)\", \n  function(self: any, k: any): any {\n    if (self instanceof MSMap) {\n      if (self.has(k)) {\n        self.delete(k);\n        return 1;\n      } else {\n        return 0;\n      }\n    } else if (self instanceof Array) {\n      if (k == null) {\n        throw new RuntimeError(\"argument to 'remove' must not be null\");\n      }\n      let index = toIntegerValue(k);\n      if (index < 0) {\n        index += self.length;\n      }\n      checkRange(index, 0, self.length-1);\n      self.splice(index, 1);\n      return null;\n    } else if (typeof self === \"string\") {\n      if (k == null) {\n        throw new RuntimeError(\"argument to 'remove' must not be null\");\n      }\n      const s = toStr(k);\n      const foundPos = s.indexOf(k);\n      if (foundPos < 0) {\n        return self;\n      }\n      const result = self.replace(k, \"\");\n      return result;\n    }\n    throw new RuntimeError(\"Type Error: 'remove' requires map, list, or string\");\n  });\n\n  p.addIntrinsic(\"replace(self,oldVal,newVal,maxCount=null)\",\n  function(self: any, oldVal: any, newVal: any, maxCountVal: any): any {\n    if (self === null) {\n      throw new RuntimeError(\"argument to 'replace' must not be null\");\n    }\n    let maxCount = -1;\n    if (maxCountVal !== null) {\n      maxCount = toIntegerValue(maxCountVal);\n      if (maxCount < 1) {\n        return self;\n      }\n    }\n    let count = 0;\n    if (self instanceof MSMap) {\n      const keysToChange = [];\n      for (let key of self.keys()) {\n        const value = self.get(key);\n        if (equals(value, oldVal)) {\n          keysToChange.push(key);\n          count += 1;\n          if (maxCount > 0 && count === maxCount) {\n            break;\n          }\n        }\n      }\n      for (let key of keysToChange) {\n        self.set(key, newVal);\n      }\n      return self;\n    } else if (self instanceof Array) {\n      for (let i = 0; i < self.length; i++) {\n        if (equals(self[i], oldVal)) {\n          self[i] = newVal;\n          count++;\n        }\n        if (maxCount > 0 && count == maxCount) {\n          break;\n        }\n      }\n      return self;\n    } else if (typeof self === \"string\") {\n      let str = toStr(self);\n      let oldstr = oldVal === null ? \"\" : toStr(oldVal);\n      if (isNullOrEmpty(oldstr)) {\n        throw new RuntimeError(\"replace: oldval argument is empty\");\n      }\n      let newstr = newVal == null ? \"\" : toStr(newVal);\n      let idx = 0;\n      while (true) {\n        idx = str.indexOf(oldstr, idx);\n        if (idx < 0) {\n          break;\n        }\n        str = str.substring(0, idx) + newstr + str.substring(idx + oldstr.length);\n        idx += newstr.length;\n        count++;\n        if (maxCount > 0 && count == maxCount) {\n          break;\n        }\n      }\n      return str;\n    }\n    throw new RuntimeError(\"Type Error: 'replace' requires map, list, or string\");\n  });\n\n  p.addIntrinsic(\"slice(seq,from=0,to=null)\",\n  function(sequence: any, fromIdx: any, toIdx: any,): any {\n    const newCollection = slice(p, sequence, fromIdx, toIdx);\n    return newCollection;\n  });\n\n  p.addIntrinsic(\"split(self,delimiter=\\\" \\\",maxCount=-1)\",\n  function(self: any, delimiter: any, maxCount: any,): Array<string> {\n    self = toStr(self);\n    delimiter = toStr(delimiter);\n    maxCount = toIntegerValue(maxCount);\n\n    let result: string[] = [];\n    let pos = 0;\n\n\t\twhile (pos < self.length) {\n\t\t  let nextPos;\n\t\t\t\n      if (maxCount >= 0 && result.length == maxCount - 1) {\n        // Force finishing loop\n        nextPos = self.length;\n      } else if (delimiter.length == 0) {\n        // Split by every char if delimiter is empty\n        nextPos = pos + 1;\n      } else { \n        // Advance \n        nextPos = self.indexOf(delimiter, pos);\n      }\n\t\t\t\t\t\n      if (nextPos < 0) {\n        nextPos = self.length;\n      }\n\t\t\t\t\t\n      result.push(self.substring(pos, nextPos));\n\n\t\t\tpos = nextPos + delimiter.length;\n\n\t\t\tif (pos == self.length && delimiter.length > 0) {\n        result.push(\"\");\n      }\n\t\t}\n\n\t\treturn result;\n  });\n\n  p.addIntrinsic(\"indexOf(self,value,after=null)\", \n  function(self: any, value: any, after: number | null): number | null {\n    if (self instanceof Array || typeof self === \"string\") {\n      let afterIdx = after !== null ? after : -1;\n      // If negative, wrap around\n      if (afterIdx < -1) {\n        afterIdx += self.length;\n      }\n      if (afterIdx < -1 || afterIdx >= self.length-1) {\n        return null;\n      }\n      const idx = self.indexOf(value, afterIdx + 1);\n      return idx >= 0 ? idx : null;\n    } else if (self instanceof MSMap) {\n      let startSearch = after == null ? true : false;\n      for(let key of self.keys()) {\n        if (startSearch) {\n          const mapValue = self.get(key);\n          if (mapValue === value) {\n            return key;\n          }\n        } else if (key === after) {\n          startSearch = true;\n        }\n      }\n      return null;\n    } else {\n      return null;\n    }\n  });\n\n  p.addIntrinsic(\"join(self,delimiter=\\\" \\\")\",\n  function(self: any, delimiter: any): string {\n    const delim = toStr(delimiter);\n    if (!(self instanceof Array)) {\n      return self;\n    } else {\n      const list: (string|null)[] = [];\n      for (let value of self) {\n        if (value === null) {\n          list.push(\"\");\n        } else {\n          list.push(toStr(value));\n        }\n      }\n      const result = list.join(delim);\n      return result;\n    }\n  });\n\n  p.addIntrinsic(\"hasIndex(self,index)\", \n  function(self: any, index: any): number | null {\n    if (self instanceof MSMap) {\n      return self.has(index) ? 1 : 0;\n    } else if (self instanceof Array || typeof self === \"string\") {\n      if (typeof index === \"number\" && self.length > 0) {\n        return index >= -self.length && index < self.length ? 1 : 0;\n      } else {\n        return 0;\n      }\n    } else {\n      return null;\n    }\n  });\n\n  p.addIntrinsic(\"pop(self)\", \n  function(self: any): any | null {\n    if (self instanceof Array) {\n      if (self.length < 1) {\n        return null;\n      }\n      const result = self.pop();\n      // Return the removed element\n      return result;\n    } else if (self instanceof MSMap) {\n      if (self.size() < 1) {\n        return null;\n      }\n      // Remove the element corresponding to (the arbirtrary)\n      // first key\n      const firstKey = self.keys()[0];\n      self.delete(firstKey);\n      // Return removed key\n      return firstKey;\n    } else {\n      return null;\n    }\n  });\n\n  p.addIntrinsic(\"pull(self)\", \n  function(self: any): any | null {\n    if (self instanceof Array) {\n      if (self.length < 1) {\n        return null;\n      }\n      const result = self[0];\n      // Remove the first element (in place!)\n      self.splice(0,1);\n      // Return the removed element\n      return result;\n    } else if (self instanceof MSMap) {\n      if (self.size() < 1) {\n        return null;\n      }\n      // Remove the element corresponding to (the arbirtrary)\n      // first key\n      const firstKey = self.keys()[0];\n      self.delete(firstKey);\n      // Return removed key\n      return firstKey;\n    } else {\n      return null;\n    }\n  });\n\n  p.addIntrinsic(\"push(self,value)\", \n  function(self: any, value: any): any | null {\n    if (self instanceof Array) {\n      self.push(value);\n      return self;\n    } else if (self instanceof MSMap) {\n      self.set(value, 1);\n      return self;\n    } else {\n      return null;\n    }\n  });\n\n  p.addIntrinsic(\"indexes(self)\", \n  function(self: any): any[] | null {\n    if (self instanceof MSMap) {\n      const keys = Array.from( self.keys() );\n      return keys;\n    } else if (self instanceof Array || typeof self === \"string\") {\n      const indexes: number[] = [];\n      for (let i = 0; i < self.length; i++) {\n        indexes.push(i);\n      }\n      return indexes;\n    } else {\n      return null;\n    }\n  });\n\n  p.addIntrinsic(\"values(self)\", \n  function(self: any): any {\n    if (self instanceof MSMap) {\n      const values = Array.from( self.values() );\n      return values;\n    } else if (typeof self === \"string\") {\n      const letters = Array.from( self );\n      return letters;\n    } else {\n      return self;\n    }\n  });\n\n  // Sorts IN PLACE!\n  p.addIntrinsic(\"sort(self,byKey=null,ascending=1)\", \n  function(self: any, byKey: any | null, ascending: any): any {\n    type KeyedValue = {\n      sortKey: any,\n      value: any\n    };\n    const compareSameType = (a: any, b: any): -1|0|1 => {\n      if (a < b) {\n        return -1;\n      } else if (a > b) {\n        return 1;\n      } else {\n        return 0;\n      }\n    };\n    const compareByValues = (a: any, b: any): -1|0|1 => {\n      // Put \"null\" values at the end\n      if (a === null) {\n        if (b === null) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n      if (b === null) {\n        return -1;\n      }\n      // Do string-comparison if any argument is a string\n      if (typeof a === \"string\" || typeof b === \"string\") {\n        const aStr = toStr(a);\n        const bStr = toStr(b);\n        return compareSameType(aStr, bStr);\n      }\n      // Do numeric comparison if both arguments are numbers\n      if (typeof a === \"number\" && typeof b === \"number\") {\n        return compareSameType(a, b);\n      }\n      // Otherwise consider them equal\n      return 0;\n    };\n    const compareByKeys = (a: KeyedValue, b: KeyedValue): -1|0|1 => {\n      return compareByValues(a.sortKey, b.sortKey);\n    };\n\n    if (!(self instanceof Array)) {\n      return self;\n    }\n\n    if (self.length < 2) {\n      return self;\n    }\n\n    if (byKey === null) {\n      self.sort(compareByValues);\n    } else {\n      // Sort by key\n      const intKey = toIntegerValue(byKey);\n      const keyedList: KeyedValue[] = [];\n      // Build list of keyed-values\n      for (let i = 0; i < self.length; i++) {\n        const value = self[i];\n        let sortKey: any = null;\n        if (value instanceof MSMap) {\n          sortKey = value.getOpt(byKey) || null;\n        } else if (value instanceof Array) {\n          if (intKey > -value.length && intKey < value.length) {\n            const normalizedIdx = intKey % value.length;\n            sortKey = value[normalizedIdx];\n          }\n        }\n        const keyedValue = {\n          sortKey: sortKey,\n          value: value\n        };\n        keyedList.push(keyedValue);\n      }\n      // Sort list of keyed-values (in-place)\n      keyedList.sort(compareByKeys);\n      // Extract values to build a values-only (sorted) list\n      // Empty list and push all values to it\n      self.splice(0, self.length);\n      for (let keyedValue of keyedList) {\n        self.push(keyedValue.value);\n      }\n    }\n\n    if (toBooleanNr(ascending) === 0) {\n      self.reverse();\n    }\n\n    return self;\n  });\n\n}\n", "import { Processor } from \"../../vm/processor\";\nimport { formatValue } from \"../../vm/runtime\";\n\nexport function addConversionIntrinsics(p: Processor) {\n\n  p.addIntrinsic(\"str(self)\", \n  function(value: any): string {\n    const result: string = formatValue(value);\n    return result;\n  });\n\n  // Try to convert to a number\n  p.addIntrinsic(\"val(self)\", \n  function(x: any): number | null {\n    if (typeof x === \"number\") {\n      return x;\n    } else if (typeof x === \"string\") {\n      let result: number = Number(x);\n      if (isNaN(result)) {\n        return 0;\n      } else {\n        return result;\n      }\n    } else {\n      return null;\n    }\n  });\n  \n}\n", "import { MSMap } from \"../../vm/msmap\";\nimport { Processor } from \"../../vm/processor\";\n\nexport function addCoreTypesIntrinsics(p: Processor) {\n\n  p.addIntrinsic(\"string\", \n  function(): MSMap {\n    return p.stringCoreType;\n  });\n\n  p.addIntrinsic(\"list\", \n  function(): MSMap {\n    return p.listCoreType;\n  });\n\n  p.addIntrinsic(\"map\", \n  function(): MSMap {\n    return p.mapCoreType;\n  });\n\n  p.addIntrinsic(\"number\", \n  function(): MSMap {\n    return p.numberCoreType;\n  });\n\n  p.addIntrinsic(\"funcRef\", \n  function(): MSMap {\n    return p.funcRefCoreType;\n  });\n\n}", "import { BoundFunction } from \"../../vm/funcdef\";\nimport { MSMap } from \"../../vm/msmap\";\nimport { Processor } from \"../../vm/processor\";\nimport { hashCode, equals } from \"../../vm/runtime\";\n\nexport function addIdentityIntrinsics(p: Processor) {\n\n  p.addIntrinsic(\"hash(obj)\", \n  function(obj: any): number {\n    return hashCode(obj);\n  });\n\n  p.addIntrinsic(\"refEquals(a,b\",\n  function(a: any, b: any): number {\n    let result: boolean = false;\n    if (a === null) {\n      result = (b === null);\n    } else if (typeof a === \"number\") {\n      result = (typeof b === \"number\" && a === b);\n    } else if (typeof a === \"string\") {\n      // NOTE: this does not behave like C# MiniScript, where String objects\n      // can have different references. This would suppose a major implementation\n      // change (and possibly peformance loss) and no official test covers this. \n      // So we let it stay for now.\n      result = (typeof b === \"string\" && a === b);\n    } else if (a instanceof Array) {\n      result = (b instanceof Array && a === b);\n    } else if (a instanceof MSMap) {\n      result = (b instanceof MSMap && a === b );\n    } else if (a instanceof BoundFunction) {\n      result = (b instanceof BoundFunction && a === b);\n    } else {\n      result = (equals(a,b) === 1);\n    }\n    return result ? 1 : 0;\n  });\n\n}\n", "import { Processor } from \"../../vm/processor\";\nimport { round } from \"../../vm/runtime\";\n\nexport function addMathIntrinsics(p: Processor) {\n\n  p.addIntrinsic(\"abs(x)\", \n  function(x: any): number {\n    if (typeof x === \"number\") {\n      return Math.abs(x);\n    } else {\n      return 0;\n    }\n  });\n  \n  p.addIntrinsic(\"floor(n)\", \n  function(n: any): number {\n    if (typeof n === \"number\") {\n      return Math.floor(n);\n    } else {\n      return 0;\n    }\n  });\n\n  p.addIntrinsic(\"ceil(n)\", \n  function(n: any): number {\n    if (typeof n === \"number\") {\n      return Math.ceil(n);\n    } else {\n      return 0;\n    }\n  });\n\n  p.addIntrinsic(\"round(n,decimalPlaces=0)\", \n  function(n: any, decimalPlaces: any): number {\n    const result = round(n, decimalPlaces);\n    if (result !== undefined ) {\n      return result;\n    } else {\n      return 0;\n    }\n  });\n\n  p.addIntrinsic(\"pi\", \n  function(): number {\n    return Math.PI;\n  });\n\n  p.addIntrinsic(\"sin(x)\", \n  function(x: any): number {\n    return Math.sin(x);\n  });\n\n  p.addIntrinsic(\"cos(x)\", \n  function(x: any): number {\n    return Math.cos(x);\n  });\n\n  p.addIntrinsic(\"tan(x)\", \n  function(x: any): number {\n    return Math.tan(x);\n  });\n\n  p.addIntrinsic(\"asin(x)\", \n  function(x: any): number {\n    return Math.asin(x);\n  });\n\n  p.addIntrinsic(\"acos(x)\", \n  function(x: any): number {\n    return Math.acos(x);\n  });\n\n  p.addIntrinsic(\"atan(x)\", \n  function(x: any): number {\n    return Math.atan(x);\n  });\n\n  p.addIntrinsic(\"sign(n)\", \n  function(n: any): number {\n    if (typeof n === \"number\") {\n      if (n > 0) {\n        return 1;\n      } else if (n < 0) {\n        return -1;\n      }\n    }\n    return 0;\n  });\n\n  p.addIntrinsic(\"log(x,base=10)\", \n  function(x: any, base: any): number {\n    if (typeof x === \"number\" && typeof base === \"number\") {\n      return Math.log(x) / Math.log(base);\n    }\n    return 0;\n  });\n\n  p.addIntrinsic(\"sqrt(x)\", \n  function(x: any): number {\n    if (typeof x === \"number\") {\n      return Math.sqrt(x);\n    }\n    return 0;\n  });\n\n}\n", "import { Processor } from \"../../vm/processor\";\nimport { formatValue, toStr } from \"../../vm/runtime\";\n\nexport function addPrintIntrinsic(p: Processor) {\n\n  // Accumulate text-parts here until a newline is processed\n  let stdoutBuffer: string[] = [];\n\n  p.addIntrinsic('print(s=\"\",delimiter=null)', \n  function(value: any, delimiter: any) {\n    if (delimiter === null) {\n      delimiter = \"\\n\";\n    }\n    delimiter = toStr(delimiter);\n\n    let text = formatValue(value) + delimiter;\n    const delimiterIdxAndLength = (s: string): [number,number] => {\n      let idx = s.indexOf(\"\\n\\r\");\n      if (idx >= 0) { return [idx, 2] }\n      idx = s.indexOf(\"\\r\\n\");\n      if (idx >= 0) { return [idx, 2] }\n      idx = s.indexOf(\"\\n\");\n      if (idx >= 0) { return [idx, 1] }\n      idx = s.indexOf(\"\\r\");\n      return [idx, 1];\n    }\n\n    // If the text contains newline-delimiters split it\n    // and add the snippets to the buffer. At each delimiter\n    // invoke the callback, which only deals with \"whole\"\n    // (delimited / terminated) lines.\n    while (text.length > 0) {\n      const [nextIdx, delimLen] = delimiterIdxAndLength(text);\n      if (nextIdx < 0) {\n        // No newline delimiter in text\n        // Push it to the buffer and return\n        stdoutBuffer.push(text);\n        return;\n      } else {\n        const part = text.slice(0, nextIdx);\n        // Add length to skip the matched delimiter\n        const rest = text.slice(nextIdx + delimLen);\n        text = rest;\n        stdoutBuffer.push(part);\n        // And flush, invoking callback and clearing buffer\n        const joined = stdoutBuffer.join(\"\");\n        p.stdoutCallback(joined);\n        stdoutBuffer = [];\n      }\n    }\n  });\n\n}\n", "import { MSMap } from \"../../vm/msmap\";\nimport { Processor } from \"../../vm/processor\";\nimport { toIntegerValue, getRandomInt } from \"../../vm/runtime\";\n\nexport function addRandomnessIntrinsics(p: Processor) {\n\n  p.addIntrinsic(\"rnd(seed)\", \n  function(seed: any): number {\n    if (seed !== null) {\n      seed = toIntegerValue(seed);\n      p.initRandomGenerator(seed);\n    }\n    return p.random();\n  });\n\n  p.addIntrinsic(\"shuffle(self)\", \n  function(self: any): any {  \n    if (self instanceof Array) {\n      for (let idx = self.length - 1; idx >= 1; idx--) {\n        const rndIdx = getRandomInt(p, idx+1);\n        // Swap values between current index and random index\n        const tempValue = self[rndIdx];\n        self[rndIdx] = self[idx];\n        self[idx] = tempValue;\n      }\n    } else if (self instanceof MSMap) {\n      const keys = Array.from(self.keys());\n      for (let keyIdx = keys.length - 1; keyIdx >= 1; keyIdx--) {\n        const rndIdx = getRandomInt(p, keyIdx+1);\n        // Swap values between current key in loop and random key\n        const key = keys[keyIdx];\n        const rndKey = keys[rndIdx];\n        const tempValue = self.get(rndKey);\n        self.set(rndKey, self.get(key));\n        self.set(key, tempValue);\n      }\n    }\n    return null;\n  });\n\n}\n", "import { Processor } from \"../../vm/processor\";\nimport { toNumberValue } from \"../../vm/runtime\";\n\nexport function addSchedulingIntrinsics(p: Processor) {\n\n  p.addIntrinsic(\"time\", \n  function(): number {\n    const t0 = p.executionStartTime;\n    const t1 = performance.now();\n    return (t1 - t0) / 1000.0;\n  });\n\n  p.addIntrinsic(\"wait(seconds=1.0)\", \n  function(seconds: number): Promise<any> {\n    seconds = toNumberValue(seconds);\n    const milliseconds = seconds * 1000;\n    return new Promise<any>((resolve) => {\n      // Resolve promise after amount of seconds\n      setTimeout(() => {\n        resolve(null);\n      }, milliseconds);\n    });\n  });\n\n  p.addIntrinsic(\"yield\", \n  function(): any {\n    p.yieldExecution();\n  });\n\n  p.addIntrinsic(\"exit\",\n  function() {\n    p.stopRunning();\n    return Processor.abortCallValue;\n  });\n  \n}", "import { Processor } from \"../../vm/processor\";\n\nexport function addStringIntrinsics(p: Processor) {\n\n  p.addIntrinsic(\"upper(self)\", \n  function(value: any): string | any {\n    if (typeof value === \"string\") {\n      return value.toUpperCase();\n    } else {\n      return value;\n    }\n  });\n\n  p.addIntrinsic(\"lower(self)\", \n  function(value: any): string | any {\n    if (typeof value === \"string\") {\n      return value.toLowerCase();\n    } else {\n      return value;\n    }\n  });\n\n}\n", "import { BoundFunction } from \"../vm/funcdef\";\nimport { MSMap } from \"../vm/msmap\";\nimport { Processor } from \"../vm/processor\";\nimport { addBitOperationIntrinsics } from \"./standard/bitOperations\";\nimport { addCharIntrinsics } from \"./standard/chars\";\nimport { addCollectionIntrinsics } from \"./standard/collections\";\nimport { addConversionIntrinsics } from \"./standard/conversion\";\nimport { addCoreTypesIntrinsics } from \"./standard/coreTypes\";\nimport { addIdentityIntrinsics } from \"./standard/identity\";\nimport { addMathIntrinsics } from \"./standard/math\";\nimport { addPrintIntrinsic } from \"./standard/print\";\nimport { addRandomnessIntrinsics } from \"./standard/randomness\";\nimport { addSchedulingIntrinsics } from \"./standard/scheduling\";\nimport { addStringIntrinsics } from \"./standard/string\";\n\n\nexport function addStandardIntrinsics(p: Processor) {\n  addPrintIntrinsic(p);\n  \n  addCoreTypesIntrinsics(p);\n\n  addMathIntrinsics(p);\n  addBitOperationIntrinsics(p);\n  addCharIntrinsics(p);\n  addCollectionIntrinsics(p);\n  addConversionIntrinsics(p);\n  addIdentityIntrinsics(p);\n  addRandomnessIntrinsics(p);\n  addSchedulingIntrinsics(p);\n  addStringIntrinsics(p);\n\n  // Once all other intrinsics have been created, add some of them\n  // to the base type maps.\n  addBaseTypesIntrinsics(p);\n}\n\nfunction addBaseTypesIntrinsics(p: Processor) {\n\n  const listIntrinsicNames = [\"len\", \"indexOf\", \"indexes\", \"hasIndex\", \"sum\",\n    \"sort\", \"push\", \"pull\", \"pop\", \"values\", \"insert\", \"remove\", \"replace\",\n    \"join\", \"shuffle\"];\n  const stringIntrinsicNames = [\"len\", \"indexOf\", \"indexes\", \"hasIndex\", \"upper\", \n    \"lower\", \"values\", \"insert\", \"remove\", \"replace\", \"split\", \"val\", \"code\"];\n  const mapIntrinsicNames = [\"len\", \"indexOf\", \"indexes\", \"hasIndex\", \"sum\",\n    \"push\", \"pull\", \"pop\", \"values\", \"remove\", \"replace\", \"shuffle\"];\n\n  const getFn = (name: string): BoundFunction => {\n    const optFn = p.globalContext.getOpt(name);\n    if (optFn !== undefined) {\n      return optFn;\n    } else {\n      throw new Error(\"Intrinsic not found: \" + name);\n    }\n  };\n\n  const importIntrinsics = (targetList: MSMap, intrinsicNames: string[]) => {\n    for (let fnName of intrinsicNames) {\n      const boundFn = getFn(fnName);\n      const argNames = boundFn.funcDef.argNames;\n      if (argNames.length < 1 || argNames[0] !== \"self\") {\n        throw new Error(`First parameter of ${fnName} must be 'self'. Found: ${argNames}`);\n      }\n      p.attachExistingIntrinsic(targetList, fnName, boundFn);\n    }\n  };\n\n  importIntrinsics(p.listCoreType, listIntrinsicNames);\n  importIntrinsics(p.mapCoreType, mapIntrinsicNames);\n  importIntrinsics(p.stringCoreType, stringIntrinsicNames);\n}", "import { Token } from \"./tokenizerModel\";\n\nexport class ParserError extends Error {\n  constructor(\n    message: string, \n    public readonly position: Pos) {\n      const msg = `Compiler Error: ${message} [line ${position.row}]`;\n      super(msg);\n    }\n}\n\n// Location in the source-code.\nexport class SrcLocation {\n\n  public readonly start: Pos;\n  public readonly end: Pos;\n  public readonly source: string;\n\n  constructor(start: Pos, end: Pos, source: string | undefined) {\n    if (start.idx > end.idx) {\n      throw new Error(\"Start must be less than end\");\n    }\n    this.start = start;\n    this.end = end;\n    if (source !== undefined) {\n      this.source = source;\n    } else {\n      this.source = \"inline\";\n    }\n  }\n\n  static forTokenRange(firstToken: Token, lastToken: Token): SrcLocation {\n    const firstLocation = firstToken.location;\n    const lastLocation = lastToken.location;\n    return firstLocation.upTo(lastLocation);\n  }\n\n  upTo(otherLocation: SrcLocation): SrcLocation {\n    if (otherLocation.start.idx < this.end.idx) {\n      throw new Error(\"The other location must be further ahead than the first one\");\n    }\n    const newStart = this.start;\n    const newEnd = otherLocation.end;\n    const newLocation = new SrcLocation(newStart, newEnd, this.source);\n    return newLocation;\n  }\n\n  toString(): string {\n    return `[(row:${this.start.row},col:${this.start.col}) to (row:${this.end.row},col:${this.end.col})]`\n  }\n\n}\n\nexport class Pos {\n\n  idx: number;\n  col: number;\n  row: number;\n\n  constructor(idx: number, col: number, row: number) {\n    this.idx = idx;\n    this.col = col;\n    this.row = row;\n  }\n\n  copy() {\n    return new Pos(this.idx, this.col, this.row);\n  }\n\n  advance() {\n    this.idx=this.idx + 1\n    this.col=this.col + 1\n  }\n\n  moveToNewLine() {\n    this.idx=this.idx\n    this.col=1\n    this.row=this.row + 1\n  }\n\n  toString() {\n    return `(idx=${this.idx},row=${this.row},col=${this.col})`\n  }\n}\n", "import { SrcLocation } from \"./commonModel\"\nimport { TokenType } from \"./tokenTypes\"\n\nexport interface Token {\n  tokenType: TokenType\n  location: SrcLocation\n  afterSpace: boolean\n}\n\nexport class SimpleToken implements Token {\n\n  tokenType: TokenType\n  location: SrcLocation\n  afterSpace: boolean\n\n  constructor(tokenType: TokenType, location: SrcLocation, afterSpace: boolean) {\n    this.tokenType = tokenType;\n    this.location = location;\n    this.afterSpace = afterSpace;\n  }\n\n  toString(): string {\n    return `SimpleToken(tokenType=${TokenType[this.tokenType]},position=${this.location.toString()},afterSpace=${this.afterSpace})`\n  }\n}\n\nexport class LiteralToken<T> implements Token {\n  value: T\n  tokenType: TokenType\n  location: SrcLocation\n  afterSpace: boolean\n\n  constructor(tokenType: TokenType, value: T, position: SrcLocation, afterSpace: boolean) {\n    this.tokenType = tokenType;\n    this.value = value;\n    this.location = position;\n    this.afterSpace = afterSpace;\n  }\n\n  toString(): string {\n    let strValue: string;\n    if (this.tokenType == TokenType.STRING_LITERAL) {\n      strValue = `\"${this.value}\"`;\n    } else {\n      strValue = `${this.value}`;\n    }\n    return `LiteralToken(tokenType=${TokenType[this.tokenType]},value=${strValue},position=${this.location.toString()},afterSpace=${this.afterSpace})`\n  }\n}\n\nexport class StringLiteral extends LiteralToken<string> {\n  constructor(value: string, location: SrcLocation, afterSpace: boolean) {\n    super(TokenType.STRING_LITERAL, value, location, afterSpace);\n  }\n}\n\nexport class IntLiteral extends LiteralToken<number> {\n  constructor(value: number, location: SrcLocation, afterSpace: boolean) {\n    super(TokenType.INT_LITERAL, value, location, afterSpace);\n  }\n}\n\nexport class FloatLiteral extends LiteralToken<number> {\n  constructor(value: number, location: SrcLocation, afterSpace: boolean) {\n    super(TokenType.FLOAT_LITERAL, value, location, afterSpace);\n  }\n}\n\nexport class Identifier implements Token {\n  value: string\n  tokenType: TokenType\n  location: SrcLocation\n  afterSpace: boolean\n\n  constructor (value: string, location: SrcLocation, afterSpace: boolean) {\n    this.tokenType = TokenType.IDENTIFIER_TK;\n    this.value = value;\n    this.location = location;\n    this.afterSpace = afterSpace;\n  }\n\n  toString(): string {\n    return `Identifier(value=\"${this.value}\",position=${this.location.toString()},afterSpace=${this.afterSpace})`\n  }\n}\n\nexport class EofToken implements Token {\n  tokenType: TokenType\n  location: SrcLocation\n  afterSpace: boolean\n\n  constructor (location: SrcLocation, afterSpace: boolean) {\n    this.tokenType = TokenType.EOF;\n    this.location = location;\n    this.afterSpace = afterSpace;\n  }\n\n  toString(): string {\n    return `EofToken(position=${this.location.toString()},afterSpace=${this.afterSpace})`\n  }\n}\n", "import { Pos, SrcLocation, ParserError } from \"./commonModel\";\nimport { Token, SimpleToken, Identifier, StringLiteral, IntLiteral, FloatLiteral, EofToken } from \"./tokenizerModel\";\nimport { TokenType } from \"./tokenTypes\";\n\n// Used internally by the tokenizer\nclass NumberLiteral {\n  \n  public readonly isInt: boolean\n  public readonly numberValue: number\n\n  constructor(isInt: boolean, numberValue: number) {\n    this.isInt = isInt\n    this.numberValue = numberValue\n  }\n}\n\nexport class Tokenizer {\n\n  private readonly input: string;\n  private readonly source: string | undefined;\n  private pos: Pos;\n  private startPos: Pos;\n  private _currentChar: string = '\\u0000'\n  private _peek2Str: string = \"\"\n  private _lastTokenIsSpace: boolean = false\n\n  private tokens: Token[] = []\n\n  private readonly keywordTable: { [id:string]: TokenType } = {\n    \"if\": TokenType.KW_IF,\n    \"else\": TokenType.KW_ELSE,\n    \"then\": TokenType.KW_THEN,\n    \"while\": TokenType.KW_WHILE,\n    \"for\": TokenType.KW_FOR,\n    \"function\": TokenType.KW_FUNCTION,\n    \"break\": TokenType.KW_BREAK,\n    \"continue\": TokenType.KW_CONTINUE,\n    \"end\": TokenType.KW_END,\n    \"return\": TokenType.KW_RETURN,\n    \"super\": TokenType.KW_SUPER,\n    \"true\": TokenType.KW_TRUE,\n    \"false\": TokenType.KW_FALSE,\n    \"null\": TokenType.KW_NULL,\n    \"in\": TokenType.KW_IN,\n    \"not\": TokenType.OP_NOT,\n    \"or\": TokenType.OP_OR,\n    \"and\": TokenType.OP_AND,\n    \"isa\": TokenType.OP_ISA,\n    \"new\": TokenType.KW_NEW,\n  }\n\n  constructor(input: string, source: string | undefined = undefined) {\n    this.input = input;\n    this.pos = new Pos(0, 1, 1);\n    this.startPos = this.pos.copy();\n    this.source = source;\n  }\n\n  tokenize(): Token[] {\n    this.updateCharAndPeek()\n\n    while (this.hasInput()) {\n      this.processNextToken()\n    }\n    this.addEofToken(this.location())\n\n    const tokensCombined = this.combinedTokens(this.tokens)\n\n    return tokensCombined\n  }\n\n  private idx(): number {\n    return this.pos.idx;\n  }\n\n  private saveStartPos() {\n    this.startPos = this.pos.copy();\n  }\n\n  private location(): SrcLocation {\n    const endPos = this.pos.copy();\n    const loc = new SrcLocation(this.startPos, endPos, this.source);\n    return loc;\n  }\n\n  private hasInput(): boolean {\n    return this.idx() < this.input.length\n  }\n\n  private processNextToken()  {\n    const ch: string = this.getChar()\n\n    if (this.isSpaceChar(ch)) {\n      this.processSpaces()\n    } else if(ch == '\\n' || ch =='\\r') {\n      this.processNewline()\n    } else if(ch == '\\\"') {\n      this.processStringLiteral()\n    } else if(this.isNumericChar(ch)) {\n      // This could be int or float - it's decided later\n      this.processNumberLiteral()\n    } else if (ch == ';') {\n      this.processCharToken(TokenType.SEMICOLON)\n    } else if (ch == ':') {\n      this.processCharToken(TokenType.COLON)\n    } else if (ch == '.') {\n      this.processDot()\n    } else if(ch == ',') {\n      this.processCharToken(TokenType.COMMA)\n    } else if(ch == '(') {\n      this.processCharToken(TokenType.OPEN_ROUND)\n    } else if(ch == ')') {\n      this.processCharToken(TokenType.CLOSE_ROUND)\n    } else if(ch == '[') {\n      this.processCharToken(TokenType.OPEN_SQUARE)\n    } else if(ch == ']') {\n      this.processCharToken(TokenType.CLOSE_SQUARE)\n    } else if(ch == '{') {\n      this.processCharToken(TokenType.OPEN_CURLY)\n    } else if(ch == '}') {\n      this.processCharToken(TokenType.CLOSE_CURLY)\n    } else if(this.peek2Chars() == \"//\") {\n      this.processComment()\n    } else if(this.isOperatorChar(ch)) {\n      this.processOperator()\n    } else if(this.isIdentifierStartChar(ch)) {\n      this.processSymbol()\n    } else {\n      throw new ParserError(`got Unknown(${ch}) where EOL is required`, this.pos)\n    }\n  }\n\n  private getChar(): string {\n    return this._currentChar\n  }\n\n  /**\n   * Tries to peek N-amount of characters, cutting before if not possible\n   * */\n  private peek2Chars(): string {\n    return this._peek2Str\n  }\n\n  private advance(amount: number = 1) {\n    let i = 0;\n    while (i < amount) {\n      this.pos.advance();\n      i += 1;\n    }\n\n    if (this.hasInput()) {\n      this.updateCharAndPeek()\n    }\n  }\n\n  private addToken(newToken: Token) {\n    this.tokens.push(newToken);\n  }\n\n  private updateCharAndPeek() {\n    // Update chars / peek\n    this._currentChar = this.input[this.idx()]\n    if (this.idx() + 1 < this.input.length) {\n      const afterCurrent = this.input[this.idx() + 1]\n      this._peek2Str = `${this._currentChar}${afterCurrent}`\n    } else {\n      this._peek2Str = `${this._currentChar}`\n    }\n  }\n\n  private processAfterSpaces(): boolean {\n    const afterSpaces = this._lastTokenIsSpace\n    this._lastTokenIsSpace = false\n    return afterSpaces\n  }\n\n  private isSpaceChar(ch: string): boolean {\n    return ch == ' ' || ch == '\\t'\n  }\n\n  private isIdentifierStartChar(ch: string): boolean {\n    return (ch >= 'a' && ch <= 'z') ||\n      (ch >= 'A' && ch <= 'Z') ||\n      (ch == '_') ||\n      // Support unicode\n      (ch > '\\u009F')\n  }\n\n  private isIdentifierChar(ch: string): boolean {\n    return (ch >= 'a' && ch <= 'z') ||\n      (ch >= 'A' && ch <= 'Z') ||\n      (ch >= '0' && ch <= '9') ||\n      (ch == '_') ||\n      // Support unicode\n      (ch > '\\u009F')\n  }\n\n  private isOperatorChar(ch: string): boolean {\n    return ch == '=' ||\n      ch == '!' ||\n      ch == '@' ||\n      ch == '^' ||\n      ch == '<' ||\n      ch == '>' ||\n      ch == '/' ||\n      ch == '*' ||\n      ch == '%' ||\n      ch == '+' ||\n      ch == '-'\n  }\n\n  private isNumericChar(ch: string): boolean {\n    return ch >= '0' && ch <= '9'\n  }\n\n  private processSpaces() {\n    const spaces = this.consumeChars(this.isSpaceChar)\n    if (spaces.length > 0) {\n      this._lastTokenIsSpace = true\n    }\n   }\n\n  private processNewline() {\n    const peek2 = this.peek2Chars()\n    const ch = this.getChar()\n    if (peek2 == \"\\n\\r\" || peek2 == \"\\r\\n\") {\n      this.advance(2)\n    } else if (ch == '\\n' || ch == '\\r') {\n      this.advance()\n    } else {\n      throw new ParserError(\"Expected newline character\", this.pos)\n    }\n    this.addSimpleToken(TokenType.NEWLINE)\n    this.pos.moveToNewLine()\n  }\n\n  private processSymbol() {\n    this.saveStartPos();\n    const symbolValue: string = this.fetchSymbol()\n    if (symbolValue in this.keywordTable) {\n      const tokenType = this.keywordTable[symbolValue]\n      this.addSimpleToken(tokenType)\n    } else {\n      this.addIdentifierToken(symbolValue)\n    }\n  }\n\n  private processOperator() {\n    this.saveStartPos();\n\n    const peek1 = this.getChar()\n    const peek2 = this.peek2Chars()\n    let charsToAdvance = 0;\n    let tokenTypeToAdd: TokenType | null = null;\n\n    // Try to handle 2-char operators first\n    switch(peek2) {\n      case \"==\":\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.OP_EQUALS;\n        break;\n      case \"!=\":\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.OP_NOT_EQUALS;\n        break;\n      case \"<=\":\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.OP_LESS_EQUALS;\n        break;\n      case \">=\":\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.OP_GREATER_EQUALS;\n        break;\n      case \"+=\":\n        // Not really an operator, but handled here\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.PLUS_ASSIGN;\n        break;\n      case \"-=\":\n        // Not really an operator, but handled here\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.MINUS_ASSIGN;\n        break; \n      case \"*=\":\n        // Not really an operator, but handled here\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.MULT_ASSIGN;\n        break;\n      case \"/=\":\n        // Not really an operator, but handled here\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.DIV_ASSIGN;\n        break; \n      case \"%=\":\n        // Not really an operator, but handled here\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.MOD_ASSIGN;\n        break;\n      case \"^=\":\n        // Not really an operator, but handled here\n        charsToAdvance = 2;\n        tokenTypeToAdd = TokenType.POW_ASSIGN;\n        break; \n      default:\n        // Nothing, we'll try with one-char below\n        break;\n    }\n\n    // If nothing matched with 2 chars, try with one\n    if (tokenTypeToAdd === null) {\n      switch(peek1) {\n        case '=':\n          // Not really an operator, but handled here\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.ASSIGN;\n          break;\n        case '<':\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.OP_LESS;\n          break;\n        case '>':\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.OP_GREATER;\n          break;\n        case '+':\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.OP_PLUS;\n          break;\n        case '-':\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.OP_MINUS;\n          break;\n        case '*':\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.OP_MULT;\n          break;\n        case '/':\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.OP_DIV;\n          break;\n        case '%':\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.OP_MOD;\n          break;\n        case '^':\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.OP_POW;\n          break;\n        case '@':\n          charsToAdvance = 1;\n          tokenTypeToAdd = TokenType.OP_FUNCREF;\n          break;\n        default:\n          throw new ParserError(\"Unhandled operator: \" + peek1, this.startPos)\n      }\n    }\n\n    if (tokenTypeToAdd != null) {\n      this.addSimpleToken(tokenTypeToAdd);\n      this.advance(charsToAdvance);\n    }\n  }\n\n  private processStringLiteral() {\n    this.saveStartPos();\n    const value = this.fetchStringLiteral()\n    this.addStringLiteralToken(value, this.location())\n  }\n\n  private fetchStringLiteral() {\n    let chars = \"\"\n    let closed = false\n\n    // Skip opening quote\n    this.advance()\n\n    // Process until a new, lone double-quote char is found\n    // Pairs of double-quote chars (i.e. \"\") are escaped double-quotes (i.e. \\\")\n    while (this.hasInput() && !closed) {\n      const peek2 = this.peek2Chars()\n      const ch = this.getChar()\n      if (peek2 == \"\\\"\\\"\") {\n        chars += '\\\"'\n        this.advance(2)\n      } else if (ch == '\\\"') {\n        closed = true\n        this.advance()\n      } else {\n        chars += ch\n        this.advance()\n      }\n    }\n\n    if (!closed) {\n      throw new ParserError(\"Unterminated string literal\", this.startPos)\n    }\n\n    return chars\n  }\n\n  /**\n   * Could be a dot for accessing a property, but could also be part of a float literal.\n   *\n   * It is part of a float literal if followed by a number\n   * */\n  private processDot() {\n    this.saveStartPos();\n    const nextChars = this.peek2Chars()\n    \n    if (nextChars.length > 1 && this.isNumericChar(nextChars[1])) {\n      this.processNumberLiteral()\n    } else {\n      this.processCharToken(TokenType.DOT)\n    }\n  }\n\n  /**\n   * Consume numeric chars until a dot or a non-numeric char is found.\n   * If dot found, consume until non-numeric char is found.\n   */\n  private processNumberLiteral() {\n    this.saveStartPos();\n    const value = this.fetchNumberLiteral()\n    if (value.isInt) {\n      this.addIntLiteralToken(value.numberValue, this.location())\n    } else {\n      this.addFloatLiteralToken(value.numberValue, this.location())\n    }\n  }\n\n  private fetchNumberLiteral(): NumberLiteral {\n    let consumingFloatingPart = false\n    let intDigits = \"\"\n    let floatDigits = \"\"\n    let fetchingChars = true\n    let exponentPart = \"\"\n\n    while (this.hasInput() && fetchingChars) {\n      const ch = this.getChar()\n      if (this.isNumericChar(ch)) {\n        if (consumingFloatingPart) {\n          floatDigits += ch\n          this.advance()\n        } else {\n          intDigits += ch\n          this.advance()\n        }\n      } else if (ch == '.') {\n        if (consumingFloatingPart) {\n          throw new ParserError(\"Unexpected repeated dot\", this.startPos)\n        }\n        consumingFloatingPart = true\n        this.advance()\n      } else if (ch == 'e' || ch == 'E') {\n        exponentPart = this.parseExponentPart();\n        fetchingChars = false\n      } else {\n        fetchingChars = false\n      }\n    }\n\n    let numberValue: number;\n    let isInt: boolean; \n\n    if (floatDigits.length > 0) {\n      numberValue = parseFloat(`${intDigits}.${floatDigits}${exponentPart}`);\n      isInt = false;\n    } else {\n      numberValue = parseInt(`${intDigits}${exponentPart}`);\n      isInt = true;\n    }\n\n    return new NumberLiteral(isInt, numberValue);\n  }\n\n  private parseExponentPart(): string {\n    const eChar = this.getChar();\n    this.advance();\n\n    const signChar = this.consumeAny(\"+\", \"-\");\n    if (!signChar) {\n      throw new Error(\"Expected +/- after exponential letter\");\n    }\n\n    let exponentPart: string = \"\";\n    \n    while (this.hasInput()) {\n      const optDigit = this.consumeAny('0','1','2','3','4','5','6','7','8','9');\n      if (optDigit !== undefined) {\n        exponentPart += optDigit;\n      } else {\n        break;\n      }\n    }\n\n    if (exponentPart.length == 0) {\n      throw new Error(\"Expected exponent in exponential notation\");\n    }\n    \n    return `${eChar}${signChar}${exponentPart}`;\n  }\n\n  /**\n   * Advance until newline found\n   */\n  private processComment() {\n    let insideComment = true\n    while (this.hasInput() && insideComment) {\n      const ch = this.getChar()\n      const peek2 = this.peek2Chars()\n      if (peek2 == \"\\n\\r\" || peek2 == \"\\r\\n\") {\n        insideComment = false\n      } else if (ch == '\\n' || ch == '\\r') {\n        insideComment = false\n      } else {\n        // Inside comment, advance one char\n        this.advance()\n      }\n    }\n  }\n\n  private consumeAny(...chars: string[]): string|undefined {\n    const c = this.getChar();\n    for (let i = 0; i < chars.length; i++) {\n      if (chars[i] === c) {\n        this.advance();\n        return c;\n      }\n    }\n    // No match found\n    return undefined;\n  }\n\n  private addSimpleToken(tokenType: TokenType) {\n    const afterSpace = this.processAfterSpaces()\n    const newToken: Token = new SimpleToken(\n      tokenType,\n      this.location(),\n      afterSpace)\n    this.addToken(newToken)\n  }\n\n  private addIdentifierToken(identifierValue: string) {\n    const afterSpace = this.processAfterSpaces()\n    const newToken = new Identifier(\n      identifierValue,\n      this.location(),\n      afterSpace)\n    this.addToken(newToken)\n  }\n\n  private addStringLiteralToken(stringValue: string, tokenLocation: SrcLocation) {\n    const afterSpace = this.processAfterSpaces()\n    const newToken = new StringLiteral(\n      stringValue,\n      tokenLocation,\n      afterSpace)\n    this.addToken(newToken)\n  }\n\n  private addIntLiteralToken(intValue: number, tokenLocation: SrcLocation) {\n    const afterSpace = this.processAfterSpaces()\n    const newToken = new IntLiteral(\n      intValue,\n      tokenLocation,\n      afterSpace)\n    this.addToken(newToken)\n  }\n\n  private addFloatLiteralToken(floatValue: number, tokenLocation: SrcLocation) {\n    const afterSpace = this.processAfterSpaces()\n    const newToken = new FloatLiteral(\n      floatValue,\n      tokenLocation,\n      afterSpace)\n    this.addToken(newToken)\n  }\n\n  private addEofToken(tokenLocation: SrcLocation) {\n    const afterSpace = this.processAfterSpaces()\n    const newToken = new EofToken(\n      tokenLocation,\n      afterSpace)\n    this.addToken(newToken)\n  }\n\n  private fetchSymbol(): string {\n    const predicate = (ch: string) => this.isIdentifierChar(ch);\n    const value = this.consumeChars(predicate)\n    return value\n  }\n\n  /**\n   * Consume chars as long as the predicate is true\n   */\n  private consumeChars(predicate : Function): string {\n    let chars = \"\"\n    let fetchingChars = true\n    while(this.hasInput() && fetchingChars) {\n      const ch = this.getChar()\n      if(predicate(ch)) {\n        // Put into buffer\n        chars += ch\n        this.advance()\n      } else {\n        fetchingChars = false\n      }\n    }\n    return chars\n  }\n\n  private processCharToken(tokenType: TokenType) {\n    this.saveStartPos();\n    this.advance();\n    this.addSimpleToken(tokenType)\n  }\n\n  private combinedTokens(tokens: Token[]): Token[] {\n    let combinedTokens: Token[] = []\n\n    let idx = 0\n    while (idx < tokens.length) {\n\n      const token = tokens[idx]\n      let optNextToken: Token | null;\n\n      if (idx + 1 < tokens.length) {\n        optNextToken = tokens[idx + 1]\n      } else {\n        optNextToken = null\n      }\n\n      let tokenToAdd: Token = token\n\n      if (token.tokenType == TokenType.KW_END) {\n        let secondTokenFound: boolean = false\n        if (optNextToken != null) {\n          if (optNextToken.tokenType == TokenType.KW_IF) {\n            const newLocation = token.location.upTo(optNextToken.location);\n            tokenToAdd = new SimpleToken(TokenType.KW_END_IF, newLocation, token.afterSpace)\n            secondTokenFound = true\n          } else if (optNextToken.tokenType == TokenType.KW_WHILE) {\n            const newLocation = token.location.upTo(optNextToken.location);\n            tokenToAdd = new SimpleToken(TokenType.KW_END_WHILE, newLocation, token.afterSpace)\n            secondTokenFound = true\n          } else if (optNextToken.tokenType == TokenType.KW_FOR) {\n            const newLocation = token.location.upTo(optNextToken.location);\n            tokenToAdd = new SimpleToken(TokenType.KW_END_FOR, newLocation, token.afterSpace)\n            secondTokenFound = true\n          } else if (optNextToken.tokenType == TokenType.KW_FUNCTION) {\n            const newLocation = token.location.upTo(optNextToken.location);\n            tokenToAdd = new SimpleToken(TokenType.KW_END_FUNCTION, newLocation, token.afterSpace)\n            secondTokenFound = true\n          }\n        }\n        if (!secondTokenFound) {\n          throw new ParserError(\"Expected token of type if / for / while / function after 'end\", token.location.start);\n        }\n      // Combine \"ELSE\" + \"IF\" to \"ELSE IF\"\n      } else if (token.tokenType == TokenType.KW_ELSE) {\n        if (optNextToken != null && optNextToken instanceof SimpleToken) {\n          if (optNextToken.tokenType == TokenType.KW_IF) {\n            const newLocation = token.location.upTo(optNextToken.location);\n            tokenToAdd = new SimpleToken(TokenType.KW_ELSE_IF, newLocation, token.afterSpace)\n          }\n        }\n      }\n\n      if (tokenToAdd != token) {\n        idx += 2\n      } else {\n        idx += 1\n      }\n\n      combinedTokens.push(tokenToAdd)\n    }\n\n    return combinedTokens\n  }\n\n} // Tokenizer\n\n", "import { SrcLocation, ParserError } from \"./commonModel\";\nimport { Statement, IfStatement, Expression, ConditionedStatements, WhileStatement, ForStatement, BreakStatement, ContinueStatement, ReturnStatement, FunctionCallStatement, ExpressionStatement, AssignmentStatement, IdentifierExpr, DotAccessExpr, IndexedAccessExpr, MathAssignmentStatement, LogicExpr, UnaryExpr, BinaryExpr, ChainedComparisonExpr, Literal, FunctionRefExpr, FunctionCallExpr, ListSlicingExpr, GroupingExpr, SuperExpr, ListExpr, MapExpr, FunctionBodyExpr, Argument } from \"./parserModel\";\nimport { Tokenizer } from \"./tokenizer\";\nimport { Token, Identifier, LiteralToken } from \"./tokenizerModel\";\nimport { TokenType, toOfficialImplTokenName } from \"./tokenTypes\";\n\nclass ParsingContext {\n\n  constructor(\n    public insideFunction: boolean = false,\n    public insideLoop: boolean = false,\n    public insideSingleLineThen: boolean = false,\n    public parsingStatementExpr: boolean = false) {}\n\n  enterFunction(): ParsingContext {\n    const copy = this.copy();\n    copy.insideFunction = true;\n    return copy;\n  }\n\n  enterLoop(): ParsingContext {\n    const copy = this.copy();\n    copy.insideLoop = true;\n    return copy;\n  }\n\n  enterSingleLineThen(): ParsingContext {\n    const copy = this.copy();\n    copy.insideSingleLineThen = true;\n    return copy;\n  }\n\n  enterParsingStatementExpr(): ParsingContext {\n    const copy = this.copy();\n    copy.parsingStatementExpr = true;\n    return copy;\n  }\n\n  leaveParsingStatementExpr(): ParsingContext {\n    const copy = this.copy();\n    copy.parsingStatementExpr = false;\n    return copy;\n  }\n\n  private copy(): ParsingContext {\n    return new ParsingContext(\n      this.insideFunction,\n      this.insideLoop,\n      this.insideSingleLineThen,\n      this.parsingStatementExpr)\n  }\n}\n\nexport class Parser {\n\n  private readonly defaultContext = new ParsingContext()\n  private current: number = 0\n  private tokens: Token[] = []\n\n  constructor(private input: string) {}\n\n  parse(): Statement[] {\n    this.tokens = this.tokenize(this.input)\n    const statements = this.parseUntil([], this.defaultContext)\n    return statements\n  }\n\n  private tokenize(input: string): Token[] {\n    const tokenizer = new Tokenizer(input = input)\n    const tokens = tokenizer.tokenize()\n    const tokensWithSomeLineBreaksRemoved = this.removeSuperfluousLineBreaks(tokens)\n    return tokensWithSomeLineBreaksRemoved\n  }\n\n  /**\n   * Some expressions make it possible to insert newlines and have them continue\n   * in the next line.\n   *\n   * For example:\n   *\n   * [1, 2,\n   *  3 ]\n   *\n   * Or:\n   *\n   * x ==\n   * 3\n   *\n   * This function eliminates those newline tokens so that parsing\n   * can proceed in a normal way, as if they were not there to begin with.\n   * */\n  //  - comma (in call expr / statement, in map / list)\n  //  - open brackets (or all kinds)\n  //  - colon (for slicing)\n  //  - not\n  //  - unary minus\n  //  - new\n  //  - @ (address of)\n  //  - power ^\n  //  - isa\n  //  - dot (call)\n  //  - logic operators\n  //  - comparison operator\n  //  - binary (algebr.) operators\n  private removeSuperfluousLineBreaks(tokens: Token[]): Token[] {\n    const typesThatAllowLineBreaks = [\n      TokenType.COMMA,\n      TokenType.OPEN_ROUND,\n      TokenType.OPEN_SQUARE,\n      TokenType.OPEN_CURLY,\n      TokenType.COLON,\n      TokenType.OP_NOT,\n      TokenType.KW_NEW,\n      TokenType.OP_FUNCREF,\n      TokenType.OP_POW,\n      TokenType.OP_ISA,\n      TokenType.DOT,\n      TokenType.OP_LESS,\n      TokenType.OP_LESS_EQUALS,\n      TokenType.OP_GREATER,\n      TokenType.OP_GREATER_EQUALS,\n      TokenType.OP_EQUALS,\n      TokenType.OP_NOT_EQUALS,\n      TokenType.OP_PLUS,\n      TokenType.OP_MINUS,\n      TokenType.OP_MULT,\n      TokenType.OP_DIV,\n      TokenType.OP_MOD,\n      TokenType.OP_AND,\n      TokenType.OP_OR,\n      TokenType.ASSIGN,\n      TokenType.PLUS_ASSIGN,\n      TokenType.MINUS_ASSIGN,\n      TokenType.MULT_ASSIGN,\n      TokenType.DIV_ASSIGN,\n      TokenType.MOD_ASSIGN,\n      TokenType.POW_ASSIGN,\n    ]\n\n    let cleanedUpTokens: Token[] = []\n    let idx = 0\n\n    while (idx < tokens.length) {\n      const token = tokens[idx]\n      const tokenType = token.tokenType\n\n      if (typesThatAllowLineBreaks.includes(tokenType)) {\n        // Add\n        cleanedUpTokens.push(token)\n        // Advance\n        idx += 1\n        // Consume newlines\n        let shouldConsume = true\n        while (shouldConsume && idx < tokens.length) {\n          const maybeNewLine = tokens[idx]\n          if (maybeNewLine.tokenType == TokenType.NEWLINE) {\n            idx += 1\n          } else {\n            shouldConsume = false\n          }\n        }\n      } else {\n        // Add\n        cleanedUpTokens.push(token)\n        // Advance\n        idx += 1\n      }\n    }\n\n    return cleanedUpTokens\n  }\n\n  private parseUntil(stoppingTokenTypes: TokenType[], context: ParsingContext): Statement[] {\n    let shouldContinue = true\n    let statements: Statement[] = []\n\n    while (!this.isAtEnd() && shouldContinue) {\n      // Discard newlines / semicolons at this stage\n      // (they are still useful as part of some statements though, e.g. after a while condition)\n      if (this.tokenMatch(TokenType.NEWLINE) || this.tokenMatch(TokenType.SEMICOLON)) {\n        // discard / skip\n      } else {\n        // Check if we reached a \"stopping\" token type\n        // (we might be in the middle of an if / function block)\n        for (let stoppingTokenType of stoppingTokenTypes) {\n          if (this.check(stoppingTokenType)) {\n            shouldContinue = false\n          }\n        }\n\n        // Only parse statement if we did not reach a stopping token-type\n        if (shouldContinue) {\n          const s = this.statement(context)\n          statements.push(s)\n        }\n      }\n    }\n\n    return statements\n  }\n\n  private statement(context: ParsingContext): Statement {\n    if (this.tokenMatch(TokenType.KW_IF)) {\n      return this.ifStatement(context)\n    } else if (this.tokenMatch(TokenType.KW_WHILE)) {\n      return this.whileStatement(context)\n    } else if (this.tokenMatch(TokenType.KW_FOR)) {\n      return this.forStatement(context)\n    } else {\n      return this.nonBlockStatement(context)\n    }\n  }\n\n  /**\n   * These statements can be appear as part of single-line statements\n   * */\n  private nonBlockStatement(context: ParsingContext): Statement {\n    if (this.tokenMatch(TokenType.KW_BREAK)) {\n      return this.breakStatement(context)\n    } else if (this.tokenMatch(TokenType.KW_CONTINUE)) {\n      return this.continueStatement(context)\n    } else if (this.tokenMatch(TokenType.KW_RETURN)) {\n      return this.returnStatement(context)\n    } else {\n      const assignmentTokenTypes = [\n        TokenType.ASSIGN,\n        TokenType.PLUS_ASSIGN,\n        TokenType.MINUS_ASSIGN,\n        TokenType.MULT_ASSIGN,\n        TokenType.DIV_ASSIGN,\n        TokenType.MOD_ASSIGN,\n        TokenType.POW_ASSIGN,\n      ];\n      const optTokenType = this.findTokenWithinStatementBoundary(assignmentTokenTypes);\n      if (optTokenType === TokenType.ASSIGN) {\n        // Looks like an assignment\n        return this.assignmentStatement(context);\n      } else if(optTokenType !== null) {\n        // Looks like a math-assignment\n        return this.mathAssignmentStatement(optTokenType, context);\n      } else {\n        return this.expressionStatement(context);\n      }\n    }\n  }\n\n  private ifStatement(context: ParsingContext): IfStatement {\n    const condition = this.expression(context)\n    this.consume(TokenType.KW_THEN, \"Expected 'then' after condition. Found: \" + this.peek())\n\n    // Decide here: if next token is NEWLINE / SEMICOLON then we have a multi-line if / then / else\n    // Otherwise treat a single-line-if\n    if (this.tokenMatch(TokenType.NEWLINE, TokenType.SEMICOLON)) {\n      // Treat as multi-line if then / [else if]* / [else] / end if\n      return this.multiLineIf(condition, context)\n    } else {\n      return this.singleLineIf(condition, context)\n    }\n  }\n\n  private multiLineIf(condition: Expression, context: ParsingContext): IfStatement {\n    // Consume statements until \"else\" or \"end if\" found - don't consume ending token\n    const ifStatements = this.parseUntil([TokenType.KW_ELSE_IF, TokenType.KW_ELSE, TokenType.KW_END_IF], context)\n    const ifBranch = new ConditionedStatements(condition, ifStatements)   \n\n    // ELSE-IF(s)\n    let elseIfs: ConditionedStatements[] = []\n    while (this.tokenMatch(TokenType.KW_ELSE_IF)) {\n      let elseIfCondition = this.expression(context)\n      this.consume(TokenType.KW_THEN, \"Expected 'then' after condition in else-if\")\n      const elseIfStatements = this.parseUntil([TokenType.KW_ELSE_IF, TokenType.KW_ELSE, TokenType.KW_END_IF], context)\n      const elseIf = new ConditionedStatements(elseIfCondition, elseIfStatements)\n      elseIfs.push(elseIf)\n    }\n\n    // ELSE: consume statements until \"end if found\"\n    let elseBranch: Statement[];\n    if (this.tokenMatch(TokenType.KW_ELSE)) {\n      elseBranch = this.parseUntil([TokenType.KW_END_IF], context)\n    } else {\n      elseBranch = []\n    }\n\n    this.consume(TokenType.KW_END_IF, \"Expected 'end if' at the end of if block\")\n\n    return new IfStatement(ifBranch, elseIfs, elseBranch)\n  }\n\n  private singleLineIf(condition: Expression, context: ParsingContext): IfStatement {\n    const singleLineThenContext = context.enterSingleLineThen()\n    const ifStatement = this.nonBlockStatement(singleLineThenContext)\n    const ifBranch = new ConditionedStatements(condition, [ifStatement])\n\n    let elseBranch: Statement[]\n    if (this.tokenMatch(TokenType.KW_ELSE)) {\n      const statement = this.nonBlockStatement(context)\n      elseBranch = [statement]\n    } else {\n      elseBranch = []\n    }\n\n    return new IfStatement(ifBranch, [], elseBranch)\n  }\n\n  private whileStatement(context: ParsingContext): Statement {\n    const whileToken = this.previous()\n\n    const condition = this.expression(context)\n\n    // Should consume newlines or semicolons\n    this.consumeAtLeastOne([TokenType.SEMICOLON, TokenType.NEWLINE], \"Expected semicolon or newline after while-condition\")\n\n    // Consume statements until \"end while\" found - but don't consume it yet\n    const loopContext = context.enterLoop()\n    const whileStatements = this.parseUntil([TokenType.KW_END_WHILE], loopContext)\n\n    // Check for closing \"end while\"\n    this.consume(TokenType.KW_END_WHILE, \"'while' without matching 'end while'\")\n\n    const headerLocation = whileToken.location.upTo(condition.location());\n\n    return new WhileStatement(condition, headerLocation, whileStatements);\n  }\n\n  private forStatement(context: ParsingContext): Statement {\n    const forToken = this.previous();\n\n    const loopVar = this.consume(TokenType.IDENTIFIER_TK, \"Expected identifier as loop variable\") as Identifier\n\n    this.consume(TokenType.KW_IN, \"Expected 'in' after loop-variable in for\")\n\n    const rangeExpression = this.expression(context)\n\n    // Should consume newlines or semicolons\n    this.consumeAtLeastOne([TokenType.SEMICOLON, TokenType.NEWLINE], \"Expected semicolon or newline after for-header\")\n\n    // Consume statements until \"end for\" found - but don't consume it yet\n    const loopContext = context.enterLoop()\n    const forStatements = this.parseUntil([TokenType.KW_END_FOR], loopContext)\n\n    // Check for closing \"end for\"\n    this.consume(TokenType.KW_END_FOR, \"'for' without matching 'end for'\")\n\n    const headerLocation = forToken.location.upTo(rangeExpression.location());\n\n    return new ForStatement(loopVar, rangeExpression, headerLocation, forStatements);\n  }\n\n  private breakStatement(context: ParsingContext): BreakStatement {\n    if (context.insideLoop) {\n      const fullLocation = this.previous().location;\n      return new BreakStatement(fullLocation);\n    } else {\n      throw this.failParsing(\"Keyword 'break' only allowed in for / while loops\")\n    }\n  }\n\n  private continueStatement(context: ParsingContext): ContinueStatement {\n    if (context.insideLoop) {\n      const fullLocation = this.previous().location;\n      return new ContinueStatement(fullLocation);\n    } else {\n      throw this.failParsing(\"Keyword 'continue' only allowed in for / while loops\")\n    }\n  }\n\n  private returnStatement(context: ParsingContext): ReturnStatement {\n    const openingToken = this.previous();\n    let fullLocation: SrcLocation;\n\n    let optReturnValue;\n    if (this.isAtEndOfStatement(context)) {\n      optReturnValue = undefined\n      fullLocation = openingToken.location;\n    } else {\n      optReturnValue = this.functionBodyOrExpr(context) as Expression;\n      fullLocation = openingToken.location.upTo(optReturnValue.location());\n    }      \n    \n    return new ReturnStatement(optReturnValue, fullLocation);\n  }\n\n  private expressionStatement(context: ParsingContext): Statement {\n\n    const statementExprContext = context.enterParsingStatementExpr()\n    const expr = this.expression(statementExprContext)\n\n    // If next token is not SEMICOLON / NEWLINE / EOF then assume it's a statement call\n    if (!this.isAtEndOfStatement(context)) {\n      // Parse comma-separated expressions and build a statement call out of this\n      let args: Expression[] = []\n      do {\n        const argumentExp = this.functionBodyOrExpr(context)\n        args.push(argumentExp)\n      } while(this.tokenMatch(TokenType.COMMA))\n      return new FunctionCallStatement(expr, args)\n    } else {\n      return new ExpressionStatement(expr)\n    }\n  }\n\n  private isAtEndOfStatement(context: ParsingContext): boolean {\n    const nextTokenType = this.peek().tokenType\n    if (context.insideSingleLineThen) {\n      return [TokenType.KW_ELSE, TokenType.SEMICOLON, TokenType.NEWLINE, TokenType.EOF].includes(nextTokenType)\n    } else {\n      return [TokenType.SEMICOLON, TokenType.NEWLINE, TokenType.EOF].includes(nextTokenType)\n    }\n  }\n\n  private assignmentStatement(context: ParsingContext): AssignmentStatement {\n    if(this.check(TokenType.OP_FUNCREF)) {\n      // If there is an '@' sign before the target, skip it.\n      // This allows to write statements like `@target = value`\n      // They behave exactly as `target = value`\n      this.advance()\n    }\n\n    const target: Expression = this.call(context)\n\n    this.consume(TokenType.ASSIGN, \"Expected '=' in assignment\")\n\n    const value = this.functionBodyOrExpr(context)\n\n    if(target instanceof IdentifierExpr || target instanceof DotAccessExpr || target instanceof IndexedAccessExpr) {\n      return new AssignmentStatement(target, value)\n    } else {\n      throw this.failParsing(\"Invalid assignment target\")\n    }\n  }\n\n  private mathAssignmentStatement(tokenType: TokenType, context: ParsingContext): AssignmentStatement {\n\n    const target: Expression = this.call(context)\n\n    const tokenStr = this.mathAssignmentString(tokenType);\n    this.consume(tokenType, `Expected '${tokenStr}' in math-assignment`)\n\n    const value = this.functionBodyOrExpr(context)\n\n    if(target instanceof IdentifierExpr || target instanceof DotAccessExpr || target instanceof IndexedAccessExpr) {\n      return new MathAssignmentStatement(target, tokenType, value)\n    } else {\n      throw this.failParsing(\"Invalid math-assignment target\")\n    }\n  }\n\n  private mathAssignmentString(tokenType: TokenType): string {\n    switch (tokenType) {\n      case TokenType.PLUS_ASSIGN:\n        return \"+=\";\n      case TokenType.MINUS_ASSIGN:\n        return \"+=\";\n      case TokenType.MULT_ASSIGN:\n        return \"+=\";\n      case TokenType.DIV_ASSIGN:\n        return \"+=\";\n      case TokenType.MOD_ASSIGN:\n        return \"+=\";\n      case TokenType.POW_ASSIGN:\n        return \"+=\";\n      default:\n        throw this.failParsing(\"Unexpected math-assignment token type: \" + TokenType[tokenType]);\n      }\n  }\n\n  private expression(context: ParsingContext): Expression {\n    return this.logicOr(context)\n  }\n\n  private logicOr(context: ParsingContext): Expression {\n    let expr = this.logicAnd(context)\n\n    while (this.tokenMatch(TokenType.OP_OR)) {\n      const operator = this.previous()\n      const right = this.logicAnd(context)\n      expr = new LogicExpr(expr, operator, right)\n    }\n\n    return expr\n  }\n\n  private logicAnd(context: ParsingContext): Expression {\n    let expr = this.unaryNot(context)\n\n    while (this.tokenMatch(TokenType.OP_AND)) {\n      const operator = this.previous()\n      const right = this.unaryNot(context)\n      expr = new LogicExpr(expr, operator, right)\n    }\n\n    return expr\n  }\n\n  private unaryNot(context: ParsingContext): Expression {\n    if (this.tokenMatch(TokenType.OP_NOT)) {\n      const operator = this.previous()\n      const right = this.isaComparison(context)\n      return new UnaryExpr(operator, right);\n    } else {\n      return this.isaComparison(context);\n    }\n  }\n\n  private isaComparison(context: ParsingContext): Expression {\n    let expr = this.chainedComparison(context)\n\n    while (this.tokenMatch(TokenType.OP_ISA)) {\n      const operator = this.previous()\n      const right = this.term(context)\n      expr = new BinaryExpr(expr, operator, right)\n    }\n\n    return expr\n  }\n\n  private chainedComparison(context: ParsingContext): Expression {\n    const expr = this.term(context);\n\n    const operands: Expression[] = [expr];\n    const operators: Token[] = [];\n\n    while (this.tokenMatch(TokenType.OP_NOT_EQUALS, TokenType.OP_EQUALS, \n                           TokenType.OP_GREATER, TokenType.OP_GREATER_EQUALS, \n                           TokenType.OP_LESS, TokenType.OP_LESS_EQUALS)) {\n      const operator = this.previous();\n      const right = this.term(context);\n      operators.push(operator);\n      operands.push(right);\n    }\n\n    if (operators.length == 0) {\n      // A single expression was parsed\n      return expr;\n    } else if (operators.length == 1) {\n      // A single comparison was parsed\n      return new BinaryExpr(operands[0], operators[0], operands[1]);\n    } else {\n      // A chained comparison was parsed\n      return new ChainedComparisonExpr(operands, operators);\n    }\n  }\n\n  private term(context: ParsingContext): Expression {\n    let expr = this.factor(context)\n\n    if (!this.isFollowedByUnaryMinus(context)) {\n      while (this.tokenMatch(TokenType.OP_MINUS, TokenType.OP_PLUS)) {\n        const operator = this.previous()\n        const right = this.factor(context)\n        expr = new BinaryExpr(expr, operator, right)\n      }\n    }\n\n    return expr\n  }\n\n  /**\n   * Checks if the expression is followed by an unary-minus\n   *\n   * If at the beginning of statement and expr is a property access or identifier\n   * AND next token is OP_MINUS w/afterSpace AND whatever comes after OP_MINUS is not afterSpace,\n   * then bypass this: don't try to match term\n   */\n  private isFollowedByUnaryMinus(context: ParsingContext): boolean {\n    let followedByMinus = this.peek().tokenType == TokenType.OP_MINUS\n\n    if (context.parsingStatementExpr && followedByMinus) {\n      const hasSpaceBeforeMinus = this.peek().afterSpace\n      const peekOne = this.peekAmount(1)\n      const hasSpaceAfterMinus = peekOne != null && peekOne.afterSpace\n      return hasSpaceBeforeMinus && !hasSpaceAfterMinus\n    } else {\n      return false\n    }\n  }\n\n  private factor(context: ParsingContext): Expression {\n    let expr = this.power(context)\n\n    while (this.tokenMatch(TokenType.OP_DIV, TokenType.OP_MULT, TokenType.OP_MOD)) {\n      const operator = this.previous()\n      const right = this.power(context)\n      expr = new BinaryExpr(expr, operator, right)\n    }\n\n    return expr\n  }\n\n  private power(context: ParsingContext): Expression {\n    let expr = this.unary(context)\n\n    while (this.tokenMatch(TokenType.OP_POW)) {\n      const operator = this.previous()\n      const right = this.unary(context)\n      expr = new BinaryExpr(expr, operator, right)\n    }\n\n    return expr\n  }\n\n  private unary(context: ParsingContext): Expression {\n    if (this.tokenMatch(TokenType.OP_MINUS, TokenType.KW_NEW)) {\n      const operator = this.previous()\n      const right = this.call(context)\n      // Try to convert a negated number to a literal expression\n      if (right instanceof Literal && typeof right.value == \"number\" && operator.tokenType == TokenType.OP_MINUS) {\n        const fullLocation = operator.location.upTo(right.location());\n        return new Literal(-right.value, fullLocation);\n      } else {\n        return new UnaryExpr(operator, right);\n      }\n    } else if (this.tokenMatch(TokenType.OP_FUNCREF)) {\n      return this.functionReference(context)\n    } else {\n      return this.call(context)\n    }\n  }\n\n  private functionReference(context: ParsingContext): Expression {\n    const openingToken = this.previous();\n\n    const refTarget: Expression = this.call(context)\n    if (refTarget instanceof IdentifierExpr \n      || refTarget instanceof DotAccessExpr\n      || refTarget instanceof IndexedAccessExpr) {\n        const fullLocation = openingToken.location.upTo(refTarget.location());\n        return new FunctionRefExpr(refTarget, fullLocation);\n    } else {\n      throw new ParserError(\"Invalid reference target for '@'\", refTarget.location().start)\n    }\n  }\n\n  private call(context: ParsingContext): Expression {\n    let expr = this.primary(context)\n    let continueParsing = true\n\n    while (continueParsing) {\n      // When parsing a statement an opening \"(\" can have different meaning\n      // depending on whether it has a space before it or not. With a space\n      // before it, it should be treated as a grouping-expression. Without \n      // a space it should be treated as a parameter-list.\n      if (context.parsingStatementExpr && this.matchesNonAfterSpaces(TokenType.OPEN_ROUND)) {\n        // Force \"leaving\" the \"statement-parsing\" context, so that subsequent\n        // opening parentheses are treated as in normal expressions.\n        const nonStatementExprContext = context.leaveParsingStatementExpr();\n        expr = this.finishCall(expr, nonStatementExprContext)\n      // When outside of the statement-parsing level (parsing \"pure\" expressions)\n      // we can match opening \"(\" as parameter-lists, regardless of whether they\n      // have a space before them or not.\n      } else if(!context.parsingStatementExpr && this.tokenMatch(TokenType.OPEN_ROUND)){\n        expr = this.finishCall(expr, context)     \n      } else if (this.matchesNonAfterSpaces(TokenType.OPEN_SQUARE)) {\n        expr = this.indexedAccessOrSlicing(expr, context)\n      } else if (this.matchesNonAfterSpaces(TokenType.DOT)) {\n        const propertyName = this.consume(TokenType.IDENTIFIER_TK,\n          \"Expected property name after '.'\") as Identifier\n        expr = new DotAccessExpr(expr, propertyName)\n        // If there is a space after the property name stop parsing\n        // We might be in a statement call\n        if (this.peek().afterSpace) {\n          continueParsing = false\n        }\n      } else {\n        continueParsing = false\n      }\n    }\n\n    return expr\n  }\n\n  private finishCall(callTarget: Expression, context: ParsingContext): Expression {\n    let args: Expression[] = []\n    \n    if (!this.check(TokenType.CLOSE_ROUND)) {\n      do {\n        const argumentExpression = this.functionBodyOrExpr(context)\n        args.push(argumentExpression)\n      } while(this.tokenMatch(TokenType.COMMA))\n    }\n    this.consume(TokenType.CLOSE_ROUND, \"Expected closing ')' after function arguments\")\n    \n    const closingToken = this.previous();\n    const fullLocation = callTarget.location().upTo(closingToken.location);\n\n    return new FunctionCallExpr(callTarget, args, fullLocation);\n  }\n\n  private functionBodyOrExpr(context: ParsingContext): Expression {\n    if (this.tokenMatch(TokenType.KW_FUNCTION)) {\n      return this.functionBody(context)\n    } else {\n      return this.expression(context)\n    }\n  }\n\n  private indexedAccessOrSlicing(targetObj: Expression, context: ParsingContext): Expression {\n    const openingToken = this.previous();\n\n    let slicing = false\n\n    let startExpr: Expression | undefined = undefined\n    let stopExpr: Expression | undefined = undefined\n    let indexExpr: Expression | undefined = undefined\n\n    if(this.tokenMatch(TokenType.COLON)) {\n      // Slicing with no start\n      slicing = true\n      // Check for ']', if not, parse stopExpr\n      if(!this.check(TokenType.CLOSE_SQUARE)) {\n        stopExpr = this.expression(context)\n      }\n    } else {\n      // Parse one expression, and see what happens afterwards\n      const expr = this.expression(context)\n      if(this.tokenMatch(TokenType.COLON)) {\n        // We are slicing and the expression was the start expression\n        slicing = true\n        startExpr = expr\n        // Now we can try to parse the (optional) stop expression\n        if(!this.check(TokenType.CLOSE_SQUARE)) {\n          stopExpr = this.expression(context)\n        }\n      } else {\n        // Not slicing, what we got was THE index expression\n        indexExpr = expr\n      }\n    }\n\n    this.consume(TokenType.CLOSE_SQUARE, \"Expected closing ']' for indexed access. Found: \" + this.peek().tokenType)\n\n    const closingToken = this.previous();\n    const fullRange = SrcLocation.forTokenRange(openingToken, closingToken);\n\n    if (slicing) {\n      return new ListSlicingExpr(targetObj, startExpr, stopExpr, fullRange);\n    } else {\n      return new IndexedAccessExpr(targetObj, indexExpr as Expression, fullRange);\n    }\n  }\n\n  private primary(context: ParsingContext): Expression {\n    if (this.tokenMatch(TokenType.KW_FALSE)) {\n      // Convert \"false\" to literal 0 right away\n      return new Literal(0, this.previous().location);\n      // Convert \"true\" to literal 1 right away\n    } else if (this.tokenMatch(TokenType.KW_TRUE)) {\n      return new Literal(1, this.previous().location);\n    } else if (this.tokenMatch(TokenType.KW_NULL)) {\n      return new Literal(null, this.previous().location);\n    } else if (this.tokenMatch(TokenType.KW_SUPER)) {\n      return this.superExpr(context)\n    } else if (this.tokenMatch(TokenType.INT_LITERAL, TokenType.FLOAT_LITERAL, TokenType.STRING_LITERAL)) {\n      const token = this.previous() as LiteralToken<any>\n      return new Literal(token.value, token.location);\n    } else if (this.check(TokenType.IDENTIFIER_TK)) {\n      return this.identifier();\n    } else if (this.tokenMatch(TokenType.OPEN_ROUND)) {\n      return this.groupingExpr(context);\n    } else if (this.tokenMatch(TokenType.OPEN_SQUARE)) {\n      return this.listLiteral(context)\n    } else if (this.tokenMatch(TokenType.OPEN_CURLY)) {\n      return this.mapLiteral(context)\n    } else {\n      throw this.failForMissingExpression();\n    }\n  }\n\n  private failForMissingExpression(): ParserError {\n    const found = this.peek().tokenType;\n    let msg = \"\";\n    if (found === TokenType.KW_END_IF) {\n      msg = \"'end if' without matching 'if'\";\n    } else if (found === TokenType.KW_END_FOR) {\n      msg = \"'end for' without matching 'for'\";\n    } else if (found === TokenType.KW_END_WHILE) {\n      msg = \"'end while' without matching 'while'\";\n    } else if (found === TokenType.KW_END_FUNCTION) {\n      msg = \"'end function' without matching 'function'\";\n    } else if (found === TokenType.KW_FUNCTION) {\n      msg = \"unexpected keyword 'function' at start of line\";\n    } else {\n      msg = \"Expected expression. Found: \" + TokenType[found];\n    }\n    return this.failParsing(msg);\n  }\n\n  private groupingExpr(context: ParsingContext): GroupingExpr {\n    const openingToken = this.previous();\n    const expr = this.expression(context);\n    this.consume(TokenType.CLOSE_ROUND);\n    const closingToken = this.previous();\n    const fullLocation = SrcLocation.forTokenRange(openingToken, closingToken);\n    return new GroupingExpr(expr, fullLocation);\n  }\n\n  private identifier(): IdentifierExpr {\n    const token = this.consume(TokenType.IDENTIFIER_TK, \"Identifier expected\") as Identifier\n    return new IdentifierExpr(token)\n  }\n\n  private superExpr(context: ParsingContext): SuperExpr {\n    if (context.insideFunction) {\n      const token = this.previous()\n      return new SuperExpr(token.location)\n    } else {\n      throw this.failParsing(\"Keyword 'super' only allowed inside a function\")\n    }\n  }\n\n  private listLiteral(context: ParsingContext): ListExpr {\n    const openingToken = this.previous()\n    let elements: Expression[] = []\n    if (!this.check(TokenType.CLOSE_SQUARE)) {\n      let continueParsing = true\n      do {\n        // Support trailing commas inside list literal\n        if(this.previous().tokenType == TokenType.COMMA && this.check(TokenType.CLOSE_SQUARE)) {\n          // We just parsed a comma, and now comes a closing square - we are done\n          continueParsing = false\n        } else {\n          // Parse an expression inside the list, as usual\n          const argumentExpression = this.expression(context)\n          elements.push(argumentExpression)\n        }\n      } while(this.tokenMatch(TokenType.COMMA) && continueParsing)\n    }\n    this.consume(TokenType.CLOSE_SQUARE, \"Expected closing ']' in list literal\")\n    \n    const closingToken = this.previous()\n    const fullLocation = SrcLocation.forTokenRange(openingToken, closingToken);\n    \n    return new ListExpr(elements, fullLocation);\n  }\n\n  private mapLiteral(context: ParsingContext): MapExpr {\n    const openingToken = this.previous();\n    let elements = new Map<Expression, Expression>()\n    if (!this.check(TokenType.CLOSE_CURLY)) {\n      let continueParsing = true\n      do {\n        // Support trailing commas inside list literal\n        if(this.previous().tokenType == TokenType.COMMA && this.check(TokenType.CLOSE_CURLY)) {\n          // We just parsed a comma, and now comes a closing curly - we are done\n          continueParsing = false\n        } else {\n          // Parse an expression inside the map, as usual\n          const key = this.expression(context)\n          this.consume(TokenType.COLON, \"Expected ':' after key. Found: \" + this.peek().tokenType)\n          const value = this.expression(context)\n          elements.set(key, value)\n        }\n      } while(this.tokenMatch(TokenType.COMMA) && continueParsing)\n    }\n    this.consume(TokenType.CLOSE_CURLY, \"Expected closing '}' in map literal\")\n\n    const closingToken = this.previous()\n    const fullLocation = SrcLocation.forTokenRange(openingToken, closingToken);\n\n    return new MapExpr(elements, fullLocation);\n  }\n\n  private functionBody(context: ParsingContext): FunctionBodyExpr {\n    const openingToken = this.previous();\n    const functionContext = context.enterFunction()\n\n    // Parse arguments\n    let args: Argument[] = []\n    if (this.tokenMatch(TokenType.OPEN_ROUND)) {\n      do {\n        if (this.check(TokenType.IDENTIFIER_TK)) {\n          const identifierExpr = this.identifier()\n          const name = identifierExpr.identifier.value\n          let fullLocation: SrcLocation;\n          let defaultValue: Literal | undefined;\n          if (this.tokenMatch(TokenType.ASSIGN)) {\n            //  Should be literal\n            const defaultValueExpr = this.unary(context) as Expression;\n            defaultValue = this.ensureLiteral(defaultValueExpr);\n            fullLocation = identifierExpr.location().upTo(defaultValue.location());\n          } else {\n            defaultValue = undefined;\n            fullLocation = identifierExpr.location();\n          }\n      \n          const argument = new Argument(name, defaultValue, fullLocation)\n          args.push(argument)\n        }\n      } while (this.tokenMatch(TokenType.COMMA))\n      this.consume(TokenType.CLOSE_ROUND, \"Expected closing ')' after argument list\")\n    }\n\n    // Parse statements\n    const bodyStatements = this.parseUntil([TokenType.KW_END_FUNCTION], functionContext)\n    this.consume(TokenType.KW_END_FUNCTION, \"Expected 'end function' at the end of function-body\")\n\n    const closingToken = this.previous()\n    const fullLocation = SrcLocation.forTokenRange(openingToken, closingToken);\n\n    return new FunctionBodyExpr(args, bodyStatements, fullLocation)\n  }\n\n  private ensureLiteral(expr: Expression): Literal {\n    if (expr instanceof Literal) {\n      return expr as Literal;\n    } else {\n      throw this.failParsing(\"Default value should be literal\");\n    }\n  }\n\n  private consume(tokenType: TokenType, message: string | null = null): Token {\n    if (this.check(tokenType)) {\n      return this.advance()\n    } else if (message != null) {\n      throw this.failParsing(message);\n    } else {\n      const tokenFound = this.peek();\n      const msg = \n        `got ${toOfficialImplTokenName(tokenFound.tokenType)} ` + \n        `where ${toOfficialImplTokenName(tokenType)} is required`;\n      throw this.failParsing(msg);\n    }\n  }\n\n  /**\n   * Tries to consume as many of the token-types as possible, at least one\n   * */\n  private consumeAtLeastOne(tokenTypes: TokenType[], message: string) {\n\n    let shouldConsume = true\n    let tokensConsumed = 0\n\n    while (!this.isAtEnd() && shouldConsume) {\n      let matchFound = false\n      for (let tokenType of tokenTypes) {\n        if (this.check(tokenType)) {\n          matchFound = true\n          tokensConsumed += 1\n          this.advance()\n        }\n      }\n      if (!matchFound) {\n        // Found a token that does not match the expected token-types, stop looping\n        shouldConsume = false\n      }\n    }\n\n    if (tokensConsumed == 0) {\n      const pos = this.peek().location.start;\n      throw new ParserError(message, pos);\n    }\n  }\n\n  private failParsing(message: string): ParserError {\n    let pos = this.peek().location.start;\n    // Pretend that the end of file is at a new line.\n    // The official MiniScript parser apparently operates so.\n    // We need this so that the line-nr matches in the error message.\n    if (this.peek().tokenType === TokenType.EOF && pos.col !== 0) {\n      pos = pos.copy();\n      pos.moveToNewLine();\n    }\n    return new ParserError(message, pos);\n  }\n\n  private tokenMatch(...types: TokenType[]): boolean {\n    for (let tokenType of types) {\n      if (this.check(tokenType)) {\n        this.advance()\n        return true\n      }\n    }\n    return false\n  }\n\n  private matchesNonAfterSpaces(tokenType: TokenType): boolean {\n    const token = this.peek()\n    if (token.tokenType == tokenType && !token.afterSpace) {\n      this.advance()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * Checks tokens until the next newline / semicolon / EOF.\n   * That is: within a statement boundary\n   *\n   * Useful for \"guessing\" statements\n   * */\n  private findTokenWithinStatementBoundary(tokenTypes: TokenType[]): TokenType | null {\n    let idx = this.current\n    while (true) {\n      const token = this.tokens[idx]\n      if ([TokenType.EOF, TokenType.SEMICOLON, TokenType.NEWLINE].includes(token.tokenType)) {\n        // Statement boundary reached\n        return null;\n      } else if (tokenTypes.includes(token.tokenType)) {\n        // Match found\n        return token.tokenType;\n      }\n      idx += 1\n    }\n  }\n\n  private check(tokenType: TokenType): boolean {\n    if (this.current > this.tokens.length) {\n      return false\n    } else {\n      return this.peek().tokenType == tokenType\n    }\n  }\n\n  private advance(): Token {\n    if (!this.isAtEnd()) {\n      this.current += 1\n    }\n    return this.previous()\n  }\n\n  private isAtEnd(): boolean {\n    return this.peek().tokenType == TokenType.EOF\n  }\n\n  private peek(): Token {\n    return this.tokens[this.current]\n  }\n\n  private peekAmount(amount: number): Token | null {\n    const idx = this.current + amount\n    if (idx < this.tokens.length) {\n      return this.tokens[idx]\n    } else {\n      return null\n    }\n  }\n\n  private previous(): Token {\n    return this.tokens[this.current - 1]\n  }\n\n}", "import { Context } from \"../vm/context\";\nimport { MSMap } from \"../vm/msmap\";\nimport { Processor } from \"../vm/processor\";\n\nexport class Runtime {\n\n  constructor(private vm: Processor) {\n  }\n\n  newMap(): MSMap {\n    return new MSMap(this.vm);\n  }\n\n  get globals(): Context {\n    return this.vm.globalContext;\n  }\n\n  addIntrinsic(signature: string, impl: Function) {\n    this.vm.addIntrinsic(signature, impl);\n  }\n\n  addMapIntrinsic(target: MSMap, signature: string, impl: Function) {\n    this.vm.addMapIntrinsic(target, signature, impl);\n  }\n\n}", "import { Code } from \"../../vm/code\";\nimport { Processor } from \"../../vm/processor\";\n\nexport class CooperativeRunner {\n\n  constructor(\n    private vm: Processor,\n    private code: Code) {\n    this.vm.prepareForRunning(code);\n    this.vm.setRunAfterSuspended(false);\n  }\n\n  runSomeCycles() {\n    if (!this.isFinished()) {\n      this.vm.runSomeCycles();\n    }\n  }\n\n  stop() {\n    this.vm.stopRunning();\n  }\n\n  getCurrentSourceLocation(): [string?,  number?] {\n    const fileName = this.vm.getCurrentSrcFileName();\n    const lineNr = this.vm.getCurrentSrcLineNr();\n    return [fileName, lineNr];\n  }\n\n  isFinished(): boolean {\n    const result = this.vm.isFinished();\n    return result; \n  }\n\n  get compiledCode(): Code {\n    return this.code;\n  }\n\n  getLastValue(): any {\n    return this.vm.lastValue;\n  }\n\n}", "import { Code } from \"../../vm/code\";\nimport { Processor } from \"../../vm/processor\";\n\nexport class StdRunner {\n\n  constructor(\n    private vm: Processor,\n    private code: Code) {\n    this.vm.prepareForRunning(code);\n  }\n\n  async runUntilDone() {\n    const vm = this.vm;\n    return new Promise<boolean>((resolve) => {\n      // This will be called when VM is done running.\n      vm.onFinished = () => {\n        resolve(true);\n      };\n      vm.run();\n    });\n  }\n\n  stop() {\n    this.vm.stopRunning();\n  }\n\n  getCurrentSourceLocation(): [string?,  number?] {\n    const fileName = this.vm.getCurrentSrcFileName();\n    const lineNr = this.vm.getCurrentSrcLineNr();\n    return [fileName, lineNr];\n  }\n\n  isFinished(): boolean {\n    const result = this.vm.isFinished();\n    return result; \n  }\n\n  get compiledCode(): Code {\n    return this.code;\n  }\n\n}", "import { Compiler } from \"../compiler/compiler\";\nimport { Debugger } from \"../debugger/debugger\";\nimport { addStandardIntrinsics } from \"../intrinsics/intrinsics\";\nimport { Parser } from \"../parser/parser\";\nimport { Statement } from \"../parser/parserModel\";\nimport { Runtime } from \"../runtime/runtimeApi\";\nimport { Code } from \"../vm/code\";\nimport { Processor, TxtCallback } from \"../vm/processor\";\nimport { CooperativeRunner } from \"./runners/coopRunner\";\nimport { StdRunner } from \"./runners/stdRunner\";\n\nexport type DebuggerCallbacks = {\n  onSrcChange: (d: Debugger) => void, \n  onFinished: (d: Debugger) => void\n}\n\nexport class Interpreter {\n\n  private stderrCallback: TxtCallback;\n\n  private vm: Processor;\n  private _runtime: Runtime;\n\n  constructor(\n    stdoutCallback: TxtCallback | null = null, \n    stderrCallback: TxtCallback | null = null) {\n    if (!stdoutCallback) {\n      stdoutCallback = (line: string) => {\n        console.log(line);\n      }\n    }\n    if (!stderrCallback) {\n      stderrCallback = stdoutCallback;\n    }\n    this.stderrCallback = stderrCallback;\n    this.vm = new Processor(stdoutCallback, stderrCallback);\n    this._runtime = new Runtime(this.vm);\n    addStandardIntrinsics(this.vm);\n  }\n\n  async runSrcCode(srcCode: string, srcName?: string): Promise<boolean> {\n    const code = this.compileSrcCode(srcCode, srcName);\n    if (code) {\n      const runner = new StdRunner(this.vm, code);\n      const result = await runner.runUntilDone();\n      return result;\n    } else {\n      return false;\n    }\n  }\n\n  getStandardRunner(srcCode: string, srcName?: string): StdRunner | null {\n    const code = this.compileSrcCode(srcCode, srcName);\n    if (code) {\n      const runner = new StdRunner(this.vm, code);\n      return runner;\n    } else {\n      return null;\n    }\n  }\n\n  getCooperativeRunner(srcCode: string, srcName?: string): CooperativeRunner | null {\n    const code = this.compileSrcCode(srcCode, srcName);\n    if (code) {\n      const runner = new CooperativeRunner(this.vm, code);\n      return runner;\n    } else {\n      return null;\n    }\n  }\n\n  get runtime(): Runtime {\n    return this._runtime;\n  }\n\n  debugSrcCode(srcCode: string, callbacks: DebuggerCallbacks, srcName?: string): Debugger | null {\n    const code = this.compileSrcCode(srcCode, srcName);\n    if (code) {\n      const d = this.debugCompiledCode(code, callbacks);\n      return d;\n    } else {\n      return null;\n    }\n  }\n\n  // Return a promise that is resolved only when the module code\n  // is done running.\n  runSrcAsModule(moduleName: string, srcCode: string): Promise<void> {\n    const invocationCode = this.compileModuleInvocation(moduleName, srcCode);\n    const vm = this.vm;\n    const promise = vm.runAtCurrentPosition(invocationCode);\n    return promise; \n  }\n\n  stopExecution() {\n    this.vm.stopRunning();\n  }\n\n  private compileSrcCode(srcCode: string, srcName?: string): Code | null {\n    let parsedStatements: Statement[] = [];\n\n    try {\n      const p = new Parser(srcCode);\n      parsedStatements = p.parse();\n    } catch (e: any) {\n      if (e[\"message\"]) {\n        console.error(e);\n        this.stderrCallback(e.message);\n      }\n    }\n\n    if (parsedStatements.length > 0) {\n      const compiler = new Compiler(parsedStatements, srcName);\n      const code = compiler.compile();\n      return code;\n    } else {\n      return null;\n    }\n  }\n\n  private debugCompiledCode(prgCode: Code, callbacks: DebuggerCallbacks): Debugger {\n\n    const vm = this.vm;\n    const dbg = new Debugger(vm);\n\n    dbg.onSrcChange = () => {\n      callbacks.onSrcChange(dbg);\n    };\n    dbg.onFinished = () => {\n      callbacks.onFinished(dbg);\n    }\n    \n    vm.prepareForRunning(prgCode);\n    dbg.start();\n    return dbg;\n  } \n\n  private compileModuleInvocation(moduleName: string, srcCode: string): Code {\n    const p = new Parser(srcCode);\n    const parsedStatements = p.parse();\n    const compiler = new Compiler(parsedStatements, `${moduleName}.ms`);\n    const code = compiler.compileModuleInvocation(moduleName);\n    return code;\n  }\n\n}", "\nimport \"../node_modules/@xterm/xterm/css/xterm.css\";\n\nimport { CooperativeRunner, Interpreter } from \"miniscript-ts\";\nimport { ITerminalInitOnlyOptions, ITerminalOptions, Terminal } from \"@xterm/xterm\";\nimport { Readline } from \"xterm-readline\";\nimport { BasicIO } from \"./basicIO\";\nimport { ModuleLoader } from \"./moduleLoader\";\nimport { MSFileSystem } from \"./fileSystems/fileSystem\";\n\nexport type TerminalOptions = ITerminalOptions & ITerminalInitOnlyOptions;\n\nexport class MSTerminal {\n\n  interp: Interpreter;\n  terminal: Terminal;\n\n  constructor(private fileSystem: MSFileSystem, terminalOptions?: TerminalOptions) {\n    const outCallback = (txt: string) => {\n      this.terminal.writeln(txt);\n    }\n    this.interp = new Interpreter(outCallback, outCallback);\n    \n    const [terminal, readine] = this.setupTerminal(terminalOptions);\n    this.addIntrinsics(terminal, readine);\n    this.terminal = terminal;\n  }\n\n  private addIntrinsics(terminal: Terminal, readline: Readline) {\n    const runtime = this.interp.runtime;\n\n    const moduleLoader = new ModuleLoader(this.interp, this.fileSystem);\n    const basicIO = new BasicIO(terminal, readline);\n\n    moduleLoader.addIntrinsics();\n    basicIO.addIntrinsics(runtime);\n  }\n\n  private setupTerminal(options?: TerminalOptions): [Terminal, Readline] {\n    const rl = new Readline();\n    const term = new Terminal(options);\n    \n    const container = document.getElementById('terminal') as HTMLElement;\n\n    term.loadAddon(rl);\n    term.open(container);\n\n    term.focus();\n\n    return [term, rl];\n  }\n\n  async runCodeFromPath(mainFile: string): Promise<void> {\n    return new Promise<void>(async (resolve) => {\n      const srcCode = await this.fileSystem.getSource(mainFile);\n      const coopRunner = this.interp.getCooperativeRunner(srcCode, mainFile);\n      if (coopRunner) {\n        this.runCycles(coopRunner, (err) => {\n          if (err) reject(err); else resolve();\n        });\n      }\n    });\n  }\n\n  async runCodeFromString(srcCode: string): Promise<void> {\n    return new Promise<void>(async (resolve) => {\n\t  const coopRunner = this.interp.getCooperativeRunner(srcCode, null);\n\t  if (coopRunner) {\n\t\tthis.runCycles(coopRunner, (err) => {\n\t\t  if (err) reject(err); else resolve();\n\t\t});\n\t  } else {\n\t\tconsole.logError(\"runCodeFromString: unable to get coopRunner\");\n\t\treject(new Error(\"Unable to get coopRunner\"));\n\t  }\n    });\n  }\n\n  private runCycles(coopRunner: CooperativeRunner, onFinished: (err?: Error) => void) {\n    if (!coopRunner.isFinished()) {\n      try {\n        coopRunner.runSomeCycles();\n        setTimeout(() => { this.runCycles(coopRunner, onFinished); }, 0);\n      } catch (err) {\n        console.log('caught error in runCycles');\n        onFinished(err);\n      }\n    } else {\n      onFinished();\n    }\n  }\n\n}\n", "import { Runtime } from \"miniscript-ts\";\nimport { Terminal } from \"@xterm/xterm\";\nimport { Readline } from \"xterm-readline\";\n\nexport class BasicIO {\n  \n  constructor(\n    private xterm: Terminal,\n    private readline: Readline) {\n\n  }\n\n  addIntrinsics(runtime: Runtime) {\n    const outerThis = this;\n\n    runtime.addIntrinsic('print(txt,delim=null)',\n    function(txt: string, delim: string | null) {\n      outerThis.print(txt, delim);\n    });\n\n    runtime.addIntrinsic('input(prompt=null)',\n    function(prompt: string | null): Promise<string> {\n      return outerThis.input(prompt);\n    });\n  }\n\n  private print(txt: string, delim: string | null) {\n\n    if (txt === undefined ||\u00A0txt === null) {\n      txt = \"\";\n    }\n\n    if (delim !== null && delim !== \"\\n\" && delim !== \"\\r\") {\n      txt = txt + delim;\n      this.xterm.write(txt);\n    } else {\n      this.xterm.writeln(txt);\n    }\n\n  }\n\n  private async input(prompt: string | null): Promise<string> {\n    if (prompt === null) {\n      prompt = \"\";\n    }\n    return this.readline.read(prompt).then((txt) => {\n      return txt;\n    });\n  }\n\n}", "import { Interpreter, Runtime } from \"miniscript-ts\";\nimport { MSFileSystem } from \"./fileSystems/fileSystem\";\n\nexport class ModuleLoader {\n  \n  private runtime: Runtime;\n\n  constructor(\n    private interp: Interpreter,\n    private fileSystem: MSFileSystem) {\n      this.runtime = interp.runtime;\n  }\n\n  addIntrinsics() {\n    const outerThis = this;\n    const runtime = this.runtime;\n\n    runtime.addIntrinsic('import(moduleName)',\n    function(moduleName: string) {\n      return outerThis.import(moduleName);\n    });\n  }\n\n  private import(moduleName: string): Promise<void> {\n    const fetchPromise = this.fetchCode(moduleName);\n    const runPromise = fetchPromise.then((srcCode: string) => {\n      return this.runSrcAsModule(moduleName, srcCode);\n    });\n    return runPromise;\n  }\n\n  private async fetchCode(moduleName: string): Promise<string> {\n    const moduleFileName = `${moduleName}.ms`;\n    const fileSystem = this.fileSystem;\n\n    return fileSystem.getSource(moduleFileName).then((srcCode) => {\n      return srcCode;\n    }).catch(() => {\n      console.info(\"The above HTTP failed request is normal. Trying to fetch system lib ...\")\n      return fileSystem.getSource(\"/lib/\" + moduleFileName);\n    }).catch(() => {\n      throw new Error(`Failed to load module ${moduleName}`);\n    })\n  }\n\n  private runSrcAsModule(moduleName: string, srcCode: string): Promise<void> {\n    // TODO: this might be wrong ... the original \"runner\" should be used\n    const runPromise =  this.interp.runSrcAsModule(moduleName, srcCode);\n    return runPromise;\n  }\n\n}", "\nexport abstract class MSFileSystem {\n\n  abstract getSource(fileName: string): Promise<string>;\n\n}", "import { MSFileSystem } from \"./fileSystem\";\n\nexport class HttpFileSystem extends MSFileSystem {\n\n  static splitPathAndFileName(filePath: string): [string, string] {\n    const parts = filePath.split(\"/\").filter((s) => s);\n    const path = parts.slice(0, parts.length - 1).join(\"/\");\n    const fileName = parts[parts.length - 1];\n    return [path, fileName];\n  }\n\n  constructor(private indexBasePath: string, private scriptBasePath: string) {\n    super();\n  }\n\n   async getSource(filePath: string): Promise<string> {\n    const absolutePath = this.getAbsolutePath(filePath);\n    return fetch(absolutePath).then((response) => {\n      if (response.status == 200) {\n        return response.text();\n      } else {\n        throw new Error(\"File not found: \" + filePath);\n      }\n    }).then((text) => text);\n  }\n\n  private getAbsolutePath(filePath: string) {\n    let absolutePath: string;\n    if (filePath.startsWith(\"/\")) {\n      absolutePath = this.indexBasePath + filePath;\n    } else {\n      absolutePath = this.scriptBasePath + \"/\" + filePath;\n    }\n    return absolutePath;\n  }\n\n}", "\nimport { MSTerminal, TerminalOptions } from \"./msTerminal\";\nimport { HttpFileSystem } from \"./fileSystems/httpFileSystem\";\n\ndeclare global {\n  interface Window { terminalOptions: TerminalOptions | undefined; }\n}\n\nlet msTerm: MSTerminal | null = null;\n\nexport async function runCodeFromPath(fileSystem, scriptFile) {\n  if (!msTerm) msTerm = new MSTerminal(fileSystem, window.terminalOptions);\n  await msTerm.runCodeFromPath(scriptFile);\n}\n\nexport async function runCodeFromString(sourceCode: string, fileSystem?:FileSystem) {\n  if (!fileSystem) {\n    fileSystem = new HttpFileSystem('', '');\n  }\n  if (!msTerm) msTerm = new MSTerminal(fileSystem, window.terminalOptions);\n  try {\n\t  await msTerm.runCodeFromString(sourceCode);\n  } catch (err) {\n\t  console.log(\"error caught\");\n  \t  msTerm.terminal.writeln(\"Error found\");\n  }\n}\n\n// Export functions to the global scope\nwindow.runCodeFromPath = runCodeFromPath;\nwindow.runCodeFromString = runCodeFromString;\n\naddEventListener(\"DOMContentLoaded\", async (_: Event) => {\n\n  const body = document.querySelector(\"body\") as HTMLBodyElement;\n  const fileName = body.getAttribute(\"data-src-file\");\n  if (typeof fileName !== \"string\") {\n    console.log(\"No source file specified on body tag\");\n    return;\n  }\n\n  const terminalOptions = window.terminalOptions;\n\n  const [scriptBasePath, srcFile] = HttpFileSystem.splitPathAndFileName(fileName);\n  const indexBasePath = new URL(document.baseURI).pathname.split(\"/\").slice(0,-1).join(\"/\");\n  const fileSystem = new HttpFileSystem(indexBasePath, scriptBasePath);\n  \n  runCodeFromPath(fileSystem, srcFile);\n});\n\n"],
  "mappings": "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C7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GA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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "a", "i", "globalThis", "e", "t", "s", "r", "n", "o", "AccessibilityManager", "Disposable", "_terminal", "instantiationService", "super", "_coreBrowserService", "_renderService", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityContainer", "mainDocument", "createElement", "classList", "add", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_liveRegion", "_liveRegionDebouncer", "register", "TimeBasedDebouncer", "_renderRows", "bind", "element", "Error", "insertAdjacentElement", "onResize", "_handleResize", "onRender", "_refreshRows", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "onDprChange", "toDisposable", "remove", "MAX_ROWS_TO_READ", "shift", "textContent", "Strings", "tooMuchOutput", "keyChar", "test", "push", "refresh", "buffer", "setSize", "lines", "toString", "lineData", "translateBufferLineToString", "ydisp", "posInSet", "innerText", "_announceCharacters", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "removeEventListener", "newElement", "unshift", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "children", "tabIndex", "_refreshRowDimensions", "dimensions", "css", "cell", "height", "style", "width", "canvas", "IInstantiationService", "ICoreBrowserService", "IRenderService", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "optionsService", "decPrivateModes", "rawOptions", "ignoreBracketedPasteMode", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "select", "_color", "TwoKeyMap", "_css", "bg", "fg", "set", "get", "clear", "node", "type", "handler", "options", "disposed", "dispose", "Linkifier2", "currentLink", "_currentLink", "_bufferService", "_linkProviders", "_linkCacheDisposables", "_isMouseOut", "_wasResized", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "_clearCurrentLink", "linkProvider", "providerIndex", "indexOf", "splice", "mouseService", "renderService", "_element", "_mouseService", "addDisposableDomListener", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "contains", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "_activeProviderReplies", "forEach", "reply", "linkWithState", "Map", "linkProvided", "entries", "existingReply", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "cols", "has", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "undefined", "fire", "leave", "lower", "upper", "current", "coords", "getCoords", "x1", "y1", "x2", "y2", "IBufferService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "line", "result", "linkHandler", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "window", "open", "opener", "location", "href", "console", "warn", "IOptionsService", "IOscLinkService", "_parentWindow", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "Terminal", "CoreTerminal", "onFocus", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "onWillOpen", "_onWillOpen", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_accessibilityManager", "MutableDisposable", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_setup", "linkifier2", "_instantiationService", "createInstance", "registerLinkProvider", "_decorationService", "DecorationService", "setService", "IDecorationService", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "parentNode", "_themeService", "req", "acc", "ident", "channels", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "rgba", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "sendFocus", "updateCursorStyle", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "ownerDocument", "defaultView", "_document", "documentOverride", "Document", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "_helperContainer", "isChromeOS", "CoreBrowserService", "document", "_handleTextAreaFocus", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "resize", "_compositionView", "CompositionHelper", "hasRenderer", "setRenderer", "_createRenderer", "MouseService", "IMouseService", "viewport", "Viewport", "onRequestScrollLines", "amount", "suppressScrollEvent", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "attachToDom", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "onSpecificOptionChange", "_handleScreenReaderModeOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "self", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "row", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "customKeyEventHandler", "joinerId", "deregister", "markers", "cursorYOffset", "addMarker", "decorationOptions", "registerDecoration", "column", "setSelection", "getSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "clearSelection", "selectAll", "selectLines", "shouldIgnoreComposition", "isMac", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "setTimeout", "_scrollArea", "h", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "_onRequestScrollLines", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "_refresh", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_bubbleScroll", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "startLine", "endLine", "cursorElement", "currentLine", "bufferElements", "isWrapped", "translateToString", "div", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "addRefreshCallback", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "layer", "marker", "display", "onRenderEmitter", "_createElement", "onDispose", "delete", "anchor", "right", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_width", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "parentElement", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "setPadding", "_refreshDecorations", "clearRect", "addDecoration", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_isComposing", "_textarea", "_coreService", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "parseInt", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "ROW_CONTAINER_CLASS", "FG_CLASS_PREFIX", "BG_CLASS_PREFIX", "FOCUS_CLASS", "SELECTION_CLASS", "nextTerminalId", "_linkifier2", "l", "u", "g", "p", "m", "_terminalClass", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_widthCache", "_themeStyleElement", "_dimensionsStyleElement", "WidthCache", "setFont", "fontWeight", "fontWeightBold", "_setDefaultSpacing", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "multiplyOpacity", "cursor", "cursorAccent", "cursorWidth", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "c", "INVERTED_DEFAULT_COLOR", "opaque", "spacing", "defaultSpacing", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "replaceChildren", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "cursorAbsoluteY", "cursorBlink", "cursorStyle", "cursorInactiveStyle", "rowElement", "createRow", "_setCellUnderline", "enabled", "maxY", "bufferline", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "widthCache", "linkStart", "linkEnd", "elements", "joinedRanges", "getJoinedCharacters", "charElement", "getNoBgTrimmedLength", "cellAmount", "oldBg", "oldFg", "oldExt", "oldLinkHover", "oldSpacing", "oldIsInSelection", "classes", "hasHover", "isJoined", "lastCharX", "JoinedCellData", "isInSelection", "_isCellInSelection", "isCursorCell", "isLinkHover", "isDecorated", "forEachDecorationAtCell", "d", "chars", "getChars", "WHITESPACE_CELL_CHAR", "isUnderline", "isOverline", "isBold", "isItalic", "selectionForeground", "ext", "isInvisible", "isCursorHidden", "isFocused", "isDim", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "textDecoration", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "resolvedBg", "isTop", "backgroundColorRGB", "foregroundColorRGB", "_addStyle", "padStart", "_applyMinimumContrast", "className", "minimumContrastRatio", "excludeFromContrastRatioDemands", "getCode", "cache", "_getContrastCache", "adjustedColor", "getColor", "ratio", "ensureContrastRatio", "setColor", "halfContrastCache", "contrastCache", "padChar", "_flat", "Float32Array", "_font", "_fontSize", "_weight", "_weightBold", "_measureElements", "whiteSpace", "fontKerning", "regular", "bold", "italic", "fontStyle", "boldItalic", "_holey", "fill", "font", "weight", "weightBold", "cp", "_measure", "variant", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "_parentElement", "_result", "_measureElement", "geometry", "Number", "firstCell", "content", "combinedData", "isCombined", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "error", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "newRange", "inRange", "_window", "_isFocused", "_cachedIsFocused", "_screenDprMonitor", "ScreenDprMonitor", "_onDprChange", "_onWindowChange", "onWindowChange", "w", "setWindow", "devicePixelRatio", "hasFocus", "queueMicrotask", "_windowResizeListener", "_outerListener", "_setDprAndFireIfDiffers", "_currentDevicePixelRatio", "_updateDpr", "_setWindowResizeListener", "clearListener", "parentWindow", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "_renderer", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "handleTrim", "offset", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectWordAtCursor", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "_getMouseEventScrollAmount", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "charIndex", "_isClickInSelection", "followWrappedLinesAbove", "followWrappedLinesBelow", "_convertViewportColToCharacterIndex", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "slice", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "_getWordAt", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "b", "toCss", "toRgba", "_colors", "_contrastCache", "ColorContrastCache", "_halfContrastCache", "_onChangeColors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "rgbaColor", "factor", "$ctx", "$litmusColor", "isNode", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onScrollApi", "_windowsWrappingHeuristics", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsPtyOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "write", "maxSubsequentCalls", "LogLevelEnum", "WARN", "writeSync", "isNaN", "MINIMUM_COLS", "MINIMUM_ROWS", "eraseAttr", "scroll", "pageCount", "scrollToTop", "scrollAmount", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsPty", "buildNumber", "backend", "windowsMode", "_enableWindowsWrappingHeuristics", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "listener", "arg1", "arg2", "queue", "call", "clearListeners", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "getAttrData", "_curAttrData", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "_logSlowResolvingAsync", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "subarray", "_preserveStack", "viewportEnd", "viewportStart", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodePoint", "precedingJoinState", "ch", "currentInfo", "charProperties", "extractWidth", "shouldJoin", "extractShouldJoin", "oldWidth", "stringFromCodePoint", "addLineToLink", "oldRow", "oldCol", "_eraseAttrData", "BufferLine", "copyCellsFrom", "addCodepointToCell", "delta", "insertCells", "getNullCell", "NULL_CELL_CODE", "NULL_CELL_WIDTH", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "diffToTop", "_moveCursor", "diffToBottom", "param", "tabs", "prevStop", "clearWrap", "respectProtect", "replaceCells", "clearMarkers", "_eraseInBufferLine", "_resetBufferLine", "scrollBackSize", "trimStart", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "joinState", "idata", "itext", "codePointAt", "tlength", "copyWithin", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "mode", "c1", "c2", "c3", "fromColorRGB", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "_updateAttrColor", "underlineColor", "updateExtended", "_processSGR0", "_processUnderline", "_extractColor", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "isValidColorIndex", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "shiftElements", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "_value", "f", "array", "_data", "third", "fourth", "process", "userAgent", "navigator", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "_search", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "constructor", "_queue", "enqueue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "_urlId", "_ext", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "relativeY", "correctBufferLength", "scrollback", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "lineIndex", "trimRight", "tabStopWidth", "Marker", "_removeMarker", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "CHAR_DATA_ATTR_INDEX", "CHAR_DATA_CHAR_INDEX", "CHAR_DATA_WIDTH_INDEX", "codePoint", "eAttrs", "byteLength", "uint32Cells", "keys", "extKeys", "src", "applyInReverse", "srcData", "srcCombinedKeys", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "fillViewportRows", "_alt", "inactiveBuffer", "obj", "setFromCharData", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "_id", "isDisposed", "_nextId", "_onDispose", "disposable", "C", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "preceding", "wcwidth", "createPropertyValue", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "handlerList", "handlerIndex", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "next", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "setDefault", "addMany", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "_identifier", "registerHandler", "clearHandler", "setHandlerFallback", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "k", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "terminal", "loadedAddon", "_wrappedAddonDispose", "_buffer", "viewportY", "baseY", "BufferLineApiView", "_line", "startColumn", "endColumn", "BufferNamespaceApi", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "init", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "copyFrom", "oldYdisp", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "S", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "wasUserInput", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "insert", "xmin", "xmax", "getKeyIterator", "forEachByKey", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "trace", "TRACE", "info", "INFO", "ERROR", "off", "OFF", "traceLogger", "_logLevel", "_updateLogLevel", "optionalParams", "message", "_evalLazyOptionalParams", "logger", "_log", "log", "_target", "descriptor", "fn", "JSON", "stringify", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "DI_TARGET", "DI_DEPENDENCIES", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "precedingInfo", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "columns", "_verifyIntegers", "attachCustomKeyEventHandler", "registerCharacterJoiner", "deregisterCharacterJoiner", "registerMarker", "_verifyPositiveIntegers", "scrollPages", "scrollToLine", "addon", "loadAddon", "strings", "Infinity", "InputType", "slice", "Readline", "reject", "TokenType", "BC", "ForLoopContext", "_Processor", "fullLocation", "import_xterm"]
}
